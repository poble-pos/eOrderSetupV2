<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.WinControls</name>
    </assembly>
    <members>
        <member name="T:Telerik.WinControls.RadControl">
            <summary>
            Represents a RadControl. RadControl is an abstract class and is base class for
            all telerik controls.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.BeginInit">
            <summary>Suspends layout during initialization.</summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.EndInit">
            <summary>Resumes layout.</summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.OnDisplayPropertyChanged(Telerik.WinControls.RadPropertyChangedEventArgs)">
            <summary>
            Must be overriddne when control should perform special logic prior to
            repainting.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.RepaintElements(Telerik.WinControls.RadElement[])">
            <summary>
            Forces repaint of the elements specified and waits untinl this operation completes.
            </summary>
            <param name="elements"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.OnNotifyPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:Telerik.WinControls.RadControl.GetChildAt(System.Int32)">
            <summary>
            Method used by control Code Dom serializer to access element in the collection of RootElement.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadControl.ControlDefinesThemeForElement(Telerik.WinControls.RadElement)">
            <summary>
            Checks whether the <paramref name="element"/>'s theme is defined by the control.
            </summary>
            <remarks>
            If true is returned the ThemeResolutionService would not not set any theme to the element 
            to avoid duplicating the style settings of the element.
            </remarks>
            <param name="element">The element to should be checked.</param>
            <returns>true if the control defines theme for this element, false otherwise.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadControl.Telerik#WinControls#IComponentTreeHandler#get_Name">
            <summary>
            Represents a RadControl. RadControl is an abstract class and is base class for
            all telerik controls.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadControl.Telerik#WinControls#IComponentTreeHandler#set_Name(System.String)">
            <summary>
            Represents a RadControl. RadControl is an abstract class and is base class for
            all telerik controls.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.Behavior">
            <summary>Gets the RootElement of a Control.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.RootElement">
            <summary>Gets the RootElement of a Control.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.ThemeName">
            <summary>
                Gets or sets control's preffered theme name. Themes are stored and retrieved using
                APIs of <see cref="T:Telerik.WinControls.ThemeResolutionService"/>.
            </summary>
            <remarks>
            If <strong>ThemeResolutionService.ApplicatonThemeName</strong> refers to a
            non-empty string, the theme of a RadControl can differ from the one set using
            <strong>RadControls.ThemeName</strong> property. If the themes differ, the
            <strong>RadControls.ThemeName</strong> property will be overridden by
            <strong>ThemeResolutionService.ApplicatonThemeName</strong>. If no theme is registered
            with a name as <strong>ThemeResolutionService.ApplicatonThemeName</strong>, then
            control will revert to the theme specified by its <strong>ThemeName</strong> property.
            If <strong>ThemeName</strong> is assigned to a non-existing theme name, the control may
            have no visual properties assigned, which will cause it look and behave in unexpected
            manner. If <strong>ThemeName</strong> equals empty string, control's theme is set to a
            theme that is registered within <strong>ThemeResolutionService</strong> with the name
            "ControlDefault".
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadControl.ThemeClassName">
            <summary>
            Gets or sets the class name string that ThemeResolutionService will use to find the themes registered for the control.
            </summary>
            <remarks>
            By default the return value is RadControl's type FullName; Some controls like drop down menu has different ThemeClassName
            depending on the runtime usaage of the control.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadControl.Style">
            <summary>Gets or sets StyleSheet for the control. Generally the stylesheet is assigned automatically when control's ThemeName is assigned.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.ImageList">
            <summary>
            	Gets or sets the ImageList that contains the images displayed by this control.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.ImageScalingSize">
            <summary>Gets or sets the image scaling size.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.AutoSize">
            <summary>
            	<para>Gets or sets a value indicating whether the control is automatically resized
                to display its entire contents.</para>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.MaximumSize">
            <summary>
            Gets or sets the size that is the upper limit that GetPreferredSize can
            specify.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.MinimumSize">
            <summary>
            Gets or sets the size that is the lower limit that GetPreferredSize can
            specify
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadControl.Initialized">
            <summary>Fires when the control is initialized.</summary>
        </member>
        <member name="E:Telerik.WinControls.RadControl.PropertyChanged">
            <summary>
            Occurs when when a property of an object changes change. 
            Calling the event is developer's responsibility.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.CausesValidation">
            <summary>
            Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.SmallImageList">
            <summary>
            	Gets or sets the SmallImageList that contains the small images which are displayed when there's not enough space.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.SmallImageScalingSize">
            <summary>Gets or sets the small image scaling size.</summary>
        </member>
        <member name="E:Telerik.WinControls.RadControl.ToolTipTextNeeded">
            <summary>
            Occurs when a RadItem instance iside the RadControl requires ToolTip text. 
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadControl.ScreenTipNeeded">
            <summary>
            Occurs prior the ScreenTip of a RadItem instance inside the RadControl is displayed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadControl.ThemeNameChanged">
            <summary>Fires when the theme name is changed.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.AllowShowFocusCues">
            <summary>
            Indicates focus cues display, when available, based on the corresponding control type and the current UI state.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.ShowItemToolTips">
            <summary>
            Gets or sets a value indicating whether ToolTips are shown for the RadItem objects contained in 
            the RadControl.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.EnableKeyMap">
            <summary>
            Gets or sets whether Key Map (Office 2007 like accelerator keys map)
            is used for this speciffic control. Currently this option is implemented for 
            the RadRibbonBar control only.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControl.IsThemeClassNameSet">
            <summary>
            Gets a value indicating whether the ThemeClassName property was set to value different from null (Nothing in VB.NET).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComponentElementTree.EnsureRootElement">
            <summary>Creates RootElement if the former does not exists.</summary>
        </member>
        <member name="M:Telerik.WinControls.ComponentElementTree.GetElementAtPoint(System.Drawing.Point)">
            <summary>Returns the element at the given point.</summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentElementTree.RootElement">
            <summary>Gets the RootElement of a Control.</summary>
        </member>
        <member name="M:Telerik.WinControls.ComponentLayoutElementTree.PerformLayoutInternal(Telerik.WinControls.RadElement)">
            <summary>
            Forces the element and controls to apply layout logic to child elements and
            controls.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComponentLayoutElementTree.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Retrieves the size of a rectangular area into which a control can be
            fitted. This override is called only when AutoSize is true.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComponentThemableElementTree.ForceReapplyTheme">
            <summary>
            Used internally to support RadControl infrastructure. This method is not intended for use directly from your code.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComponentThemableElementTree.EnsureThemeAppliedInitially">
            <summary>
            Used internally to support RadControl infrastructure. This method is not intended for use directly from your code.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComponentThemableElementTree.ApplyThemeToElementTree">
            <summary>
            Used internally to support RadControl infrastructure. This method is not intended for use directly from your code.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComponentThemableElementTree.ControlDefinesThemeForElement(Telerik.WinControls.RadElement)">
            <summary>
            Gets a value indicating if control themes by default define PropertySettings for the specified element. 
            If true is returned the ThemeResolutionService would not not set any theme to the element to avoid duplicatingthe style
            settings of the element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.ComponentThemableElementTree.ThemeName">
            <summary>
                Gets or sets control's preffered theme name. Themes are stored and retrieved using
                APIs of <see cref="T:Telerik.WinControls.ThemeResolutionService"/>.
            </summary>
            <remarks>
            If <strong>ThemeResolutionService.ApplicatonThemeName</strong> refers to a
            non-empty string, the theme of a RadControl can differ from the one set using
            <strong>RadControls.ThemeName</strong> property. If the themes differ, the
            <strong>RadControls.ThemeName</strong> property will be overridden by
            <strong>ThemeResolutionService.ApplicatonThemeName</strong>. If no theme is registered
            with a name as <strong>ThemeResolutionService.ApplicatonThemeName</strong>, then
            control will revert to the theme specified by its <strong>ThemeName</strong> property.
            If <strong>ThemeName</strong> is assigned to a non-existing theme name, the control may
            have no visual properties assigned, which will cause it look and behave in unexpected
            manner. If <strong>ThemeName</strong> equals empty string, control's theme is set to a
            theme that is registered within <strong>ThemeResolutionService</strong> with the name
            "ControlDefault".
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.ComponentThemableElementTree.ThemeClassName">
            <summary>
            Gets or sets the class name string that ThemeResolutionService will use to find the themes registered for the control.
            </summary>
            <remarks>
            By default the return value is RadControl's type FullName; Some controls like drop down menu has different ThemeClassName
            depending on the runtime usaage of the control.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.ComponentThemableElementTree.IsThemeClassNameSet">
            <summary>
            Gets a value indicating whether the ThemeClassName property was set to value different from null (Nothing in VB.NET).
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadScreenTip.ScreenTipElement">
            <summary>
            Gets the instance of RadScreenTipElement wrapped by this control. RadScreenTipElement
            is the main element in the hierarchy tree and encapsulates the actual functionality of RadScreenTip.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadItem">
            <summary>
            	Represents the item which could be added to an ItemsCollection and can be selected, deleted or moved during VS design time.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadComponentElement">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.VisualElement">
            <summary>Extends RadElement and adds visual properties common to all elements.</summary>
        </member>
        <member name="T:Telerik.WinControls.RadElement">
            <summary>
            RadElement class represents the smallest unit in a RadControl that can be painted or that has a layout slot in a RadControl.
            Generally each RadCotnrol is composed of a tree of RadElements. The tree has as a root the <see cref="P:Telerik.WinControls.RadControl.RootElement"/> and
            children <see cref="P:Telerik.WinControls.RadElement.Children"/> property.
            </summary>
            <remarks>
                Elements nesting also represents the visual nesting. Elements are painted starting
                from the root to the leaves of the tree. the leaves are most often primitive
                elements like, text, fills, borders and so on. Elements that are descendants of 
                LayoutPanel are responsible for arranging their children in the available space
                and/or for notifying the parent that the layout space is not enough to expand.
                Layout behavior of each element can be adjusted using the properties:
                <see cref="P:Telerik.WinControls.RadElement.AutoSize"/>, <see cref="P:Telerik.WinControls.RadElement.Size"/>,
                <see cref="P:Telerik.WinControls.RadElement.AutoSizeMode"/> (old layouts), and <see cref="P:Telerik.WinControls.RadElement.StretchHorizontally"/> and <see cref="P:Telerik.WinControls.RadElement.StretchVertically"/> for
            	the new layouts. 
            	RadElement is the base class of all elements that need to take advantage of TPF features, like 
            	property inheritance, layouts, styling
                with the Visual Style Builder application. Each property change of a RadElement or
                of its inheritance parent would result in calling the method OnPropertyChange,
                which can be overridden in order to customize the response to changes of any
                RadPoperty.
            </remarks>
        </member>
        <member name="T:Telerik.WinControls.RadObject">
            <summary>
            Represents the base class for all RadElement objects. Has the ability to store all property values in a single structure to ease features like property 
            change notifications, dependent property values (property bindings) and so on.  
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadObject.InheritanceParentValueChanged(Telerik.WinControls.RadPropertyChangedEventArgs)">
            <summary>
            Invokes OnProeprtyChanged from an inheritance parent if the changed property value is inherited
            </summary>
            <param name="originalArgs"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.ResetValue(Telerik.WinControls.RadProperty)">
            <summary>
            Reset the value of bound property
            </summary>
            <param name="dp">the dependancy property that should be reset</param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.RemoveAnimatedPropertySetting(Telerik.WinControls.RadProperty,System.Boolean)">
            <summary>
            Called when element style condition changes
            </summary>
            <param name="property"></param>
            <param name="notifyPropertyChange"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.RemoveStylePropertySetting(Telerik.WinControls.RadProperty,System.Boolean)">
            <summary>
            Called when element style condition changes
            </summary>
            <param name="property"></param>
            <param name="notifyPropertyChange"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.UnregisterStylePropertySetting(Telerik.WinControls.RadProperty,System.Boolean)">
            <summary>
            Called when element style has changed (removed)
            </summary>
            <param name="property"></param>
            <param name="notifyPropertyChange"></param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.OnNotifyPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:Telerik.WinControls.RadObject.RepalaceDefaultDescriptors(System.ComponentModel.PropertyDescriptorCollection)">
            <summary>
            Replaces the default property descriptors of properties of the object in order to perform Rad-Object specific 
            tasks like checking ShouldSerialize and RadProperty-DefaultValue...
            </summary>
            <param name="props"></param>
            <returns></returns>
        </member>
        <member name="E:Telerik.WinControls.RadObject.PropertyChanged">
            <summary>
            Occurs when when a property of an object changes change. 
            Calling the event is developer's responsibility.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadObject.RadPropertyChanged">
            <summary>
            Occurs when a property of a RadObject changes.		
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadObject.RadPropertyChanging">
            <summary>
            Occurs prior to property of a RadObject changes.        
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadObject.Events">
            <summary>
            Provides a simple list of delegates.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadObject.ExternalPropertySetting">
            <summary>
            Represents an external property setting.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadObject.ExternalPropertySetting.#ctor(Telerik.WinControls.IPropertySetting,Telerik.WinControls.ValueSource,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the ExternalPropertySetting class.
            </summary>
            <param name="setting"></param>
            <param name="oldValueSource"></param>
            <param name="isOldValueValid"></param>
            <param name="oldValue"></param>
        </member>
        <member name="P:Telerik.WinControls.RadObject.ExternalPropertySetting.Property">
            <summary>
            Gets the property corresponding to the current instance.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.IRadLayoutElement">
            <summary>
            Defines basic methods for Telerik layout architecture. Since all layout panels 
            update their layout automatically through events, this functions are rarely used 
            directly.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IRadLayoutElement.PerformLayout(Telerik.WinControls.RadElement)">
            <summary>
            Performs layout changes based on the element given as a paramater. 
            Sizes and places are determined by the concrete layout panel that is used. 
            For example if StackLayoutPanel is used, the element will be placed next to 
            the previously placed element. Since all layout panels update their layout 
            automatically through events, this function is rarely used directly.
            </summary>
            <param name="affectedElement"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IRadLayoutElement.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Retrieves the preferred size of the layout panel. If the proposed size is 
            smaller than the minimal one, the minimal one is retrieved. Since all layout 
            panels update their layout automatically through events, this function is 
            rarely used directly.
            </summary>
            <param name="proposedSize"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SetNCElement(System.Boolean)">
            <summary>
            Sets a value that indicates whether the element will be put in a non-client or in the client area
            of the control.
            </summary>
            <param name="value">True means that the element will be used in the non-client area of the control.</param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.ArrangeOverride(System.Drawing.SizeF)">
            <summary>
            Arranges the <see cref="T:Telerik.WinControls.RadElement"/> to its final location.
            The element must call the Arrange method of each of its children.
            </summary>
            <param name="finalSize">The size that is available for element.</param>
            <returns>The rectangle occupied by the element. Usually <paramref name="finalSize"/>. Should you return different size, the Layout system will restart measuring and rearraning the items. That could lead to infinite recursion.</returns>
            <remarks>In this method call to the Arrange method of each child must be made.</remarks>
        </member>
        <member name="M:Telerik.WinControls.RadElement.MeasureOverride(System.Drawing.SizeF)">
            <summary>
            Measures the space required by the <see cref="T:Telerik.WinControls.RadElement"/>
            
            Used by the layout system.
            </summary>
            <param name="availableSize">The size that is available to the <see cref="T:Telerik.WinControls.RadElement"/>. The available size can be infinity (to take the full size of the element)</param>
            <returns>The minimum size required by the element to be completely visible. Cannot be infinify.</returns>
            <remarks>In this method call to the Measure method of each child must be made.</remarks>
        </member>
        <member name="F:Telerik.WinControls.RadElement.MouseClickedEvent">
            <summary>
            Tunnels and bubbles on MouseClick on current element
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.MouseDoubleClickedEvent">
            <summary>
            Tunnels and bubbles on MouseDoubleClick on current element
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.MouseDownEvent">
            <summary>
            Tunnels and bubbles on MouseDown on current element
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.MouseUpEvent">
            <summary>
            Tunnels and bubbles on MouseUp on current element
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.ChildElementAddedEvent">
            <summary>
            Routed event key for ChildElementAdded event. Bubbles when element is added
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.ParentChangedEvent">
            <summary>
            Routed event key for ParentChanged event. Tunnels when element parent changes
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.BoundsChangedEvent">
            <summary>
            Tunnels when bounds changed in order to notify any children that should take special actions in this case - like RadHostItem.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.VisibilityChangingEvent">
            <summary>
            Tunnels and bubbles when changes the current element
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.EnabledChangedEvent">
            <summary>
            Tunnels when the Enabled property changes in order to notify any children that should take special actions.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.ControlChangedEvent">
            <summary>
            Tunnels when the winforms control has been changed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetChildrenByType(System.Type)">
            <summary>
            Gets a list of child elements using the type to filter the results.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="F:Telerik.WinControls.RadElement.ZIndexProperty">
            <summary>
            Property key of the ZIndex Property. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElement.MaxSizeProperty">
            <summary>
            Get or sets the maximum size to apply on an element when layout is calculated.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SetThemeApplied(System.Boolean)">
            <summary>
            Used internally to support RadControl infrastructure. This method is not intended for use directly from your code.
            </summary>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.AddBehavior(Telerik.WinControls.PropertyChangeBehavior)">
            <summary>
            Adds a property change behavior to the list of behaviors of the element.
            </summary>
            <remarks>
            Behaviors can be used to specify how an element should respond when a certain element property changes.
            Behaviors are used internally by stylesheets when applying to an hiearrchy of elements.
            </remarks>
            <param name="behavior">behavior instance - should not be null (or Nothing in VB.NET)</param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.AddRangeBehavior(Telerik.WinControls.PropertyChangeBehaviorCollection)">
            <summary>
            <see cref="M:Telerik.WinControls.RadElement.AddBehavior(Telerik.WinControls.PropertyChangeBehavior)"/>
            </summary>
            <param name="behaviors">list of behaviors</param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SetBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the element to the specified rectangle (locating and
            size).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the bounds of the element to the specified rectangle (X, Y, width and
            height).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.PointToScreen(System.Drawing.Point)">
            <summary>
            Retrieves a point in screen coordinates taking as a parameter a point which is in
            element coordinates (this means that the top left corner of the element is with
            coordinates 0, 0).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.RectangleToScreen(System.Drawing.Rectangle)">
            <summary>
            Retrieves a rectangle in screen coordinates taking as a parameter a rectangle
            which is in element coordinates (this means that the top left corner of the element is
            with coordinates 0, 0).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetScrollingOffset">
            <summary>
            Gets the offset that is caused by scrolling. The difference between this method and
            PositionOffset property is that GetScrollingOffset() takes into account RightToLeft.
            </summary>
            <returns>The scrolling offset for this element.</returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetBoundingRectangle(System.Drawing.Size)">
            <summary>
            	Gets the rectangle which surronds the rotated element (if having AngleTransform property set).
            </summary>
            <param name="size">The size of the element which is accepted as a parameter (for example when returned from GetPreferredSize).</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.IsFitInSize">
            <summary>
            	Detects whether the element is both automatically sized by the layout system and fits the parent element bounds.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.ShouldIgrnoreChildSizes">
            <summary>
            	Detects whether the element is with fixed size or automatically sized with its size conforming to the parent bounds.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.PerformLayoutCore(Telerik.WinControls.RadElement)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.IRadLayoutElement.PerformLayout(Telerik.WinControls.RadElement)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetPreferredSize(System.Drawing.Size)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.IRadLayoutElement.GetPreferredSize(System.Drawing.Size)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetPreferredSizeCore(System.Drawing.Size)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.IRadLayoutElement.GetPreferredSize(System.Drawing.Size)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.RadElement.OnTransformationInvalidated">
            <summary>
            This method is executed when a property which affects the absolute position of the element has been changed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElement.PaintElementSkin(Telerik.WinControls.Paint.IGraphics)">
            <summary>
            Provides a routine to paint element's content when system skin appearance is desired.
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetSkinBounds">
            <summary>
            Gets the rectangle where skin background should be painted.
            Defaults to BoundingRectangle.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.PaintOverride(Telerik.WinControls.Paint.IGraphics,System.Drawing.Rectangle,System.Single,System.Drawing.SizeF,System.Boolean)">
            <summary>
            Virtual layer between PaintChildren() and Paint().
            Can be overriden to fully customize element hierarchy paint.
            Used for painting disabled items.
            </summary>
            <param name="graphics">The graphics object.</param>
            <param name="clipRectangle">The rectangle which has been invalidated.</param>
            <param name="angle">The angle (in degrees) to which the current element is rotated. This angle is a sum of all AngleTransform properties of this element's parents.</param>
        </member>
        <member name="M:Telerik.WinControls.RadElement.CreateDefaultValueOfProperty(Telerik.WinControls.RadProperty)">
            <summary>
            Descendent classes must override to create default values of RadProperties. 
            To enable, set the corresponding property metadata default value to DefaultValueOptions.Instance
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadElement.GetChildAt(System.Int32)">
            <summary>
            Method used by control Code Dom serializer to access items in the collection
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Parent">
            <summary>Gets a reference to the parent element in the visual element tree.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ElementTree">
            <summary>
            Gets a reference to the tree object, that contains information about the tree of elements - owner Control, etc.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Children">
            <summary>
            Gets the collection of elements that are child elements in the element
            tree.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ChildrenHierarchy">
            <summary>
                Gets a collection of all elements in the tree having this element as a root,
                traversed depth-first. 
                <remarks>Developers should try to minimize the calls to this property since
                generation of the result collection could impact the performance for greater
                element hierarchies.</remarks>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.FullRectangle">
            <summary>
            	Gets the bounds of the element along with its margins.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.FullSize">
            <summary>
            	Represents the size of the element along with its margins.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.FaceRectangle">
            <summary>
            	Gets the bounds of the element along with its parent paddings.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.FieldRectangle">
            <summary>
            	Gets the bounds of the element with its paddings excluded.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.FieldSize">
            <summary>
            	Gets the size of the element with its paddings excluded.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.DisplayRectangle">
            <summary>
            	Represents the visible part of the element bounds which is not clipped by its parent bounds.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.BoundingRectangle">
            <summary>
            	Represents the rectangle which surrounds the element bounds after the rotation caused by setting the AngleTransform property to some degree. The rectangle is in parent element's coordinates.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ControlBoundingRectangle">
            <summary>
            	Represents the rectangle which surrounds the element bounds after the rotation caused by setting the AngleTransform property to some degree. The rectangle is in control coordinates.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.FullBoundingRectangle">
            <summary>
            	Gets the <see cref="!:BoundingRotatedRectangle"/> along with its margins.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ZIndex">
            <summary>
            Gest of sets the order of painting an element compared to its sibling elements. Greater ZIndex means an element would be 
            painted on top of other elements amongst its sibligs. ZIndex changes the order of the elements in the list returned by
            <see cref="M:Telerik.WinControls.RadElement.GetChildren(Telerik.WinControls.ChildrenListOptions)"/>.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.AutoSize">
            <summary>
            Gets or sets a value indicating whether the element size will be calculated
            automatically by the layout system. Value of false indicates that the element's size
            will not be changed when calculating the layout.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Bounds">
            <summary>
                Gets or sets a value corresponding to the bounding rectangle of the element.
                Location and/or Size portions of the bounds may be calculated automatically based
                on the current <see cref="P:Telerik.WinControls.RadElement.AutoSize"/> and <see cref="!:AutoSiezeMode"/>
                settings.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Location">
            <summary>
                Gets or sets the location of the element based on the element parent rectangle.
                Corresponds to <see cref="P:Telerik.WinControls.RadElement.Bounds"/>.Location
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Size">
            <summary>
                Gets or sets the size of the element which is the height and width of the visual
                rectangle that would contain the graphics of the element. Size corresponds to
                element's Bounds.Size. When the <see cref="P:Telerik.WinControls.RadElement.AutoSize">AutoSize</see> property is set
                to true setting the Size property to some value has no effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.BorderThickness">
            <summary>
            Gets or sets the border thickness of the element. This thickness is included into the
            element's bounding rectangle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Padding">
            <summary>
            Gets or sets the padding sizes of the element. The paddings are included into the
            element's bounding rectangle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Margin">
            <summary>
            Gets or sets a value corresponding to the margins of the element. Margins are not
            included into the element's bounding rectangle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Alignment">
            <summary>
            Gets or sets the preferred location of the element if its size is less than its
            parent size.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.AutoSizeMode">
            <summary>
                Gets or sets the way the element should calculate its <see cref="P:Telerik.WinControls.RadElement.Size"/>, when
                the <see cref="P:Telerik.WinControls.RadElement.AutoSize"/> property is set to true.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.FitToSizeMode">
            <summary>
            Gets or sets a value indicating the way element will fill its available size when
            parent element is calculating element size and location.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.MinSize">
            <summary>
            Get or sets the minimum size to apply on an element when layout is calculated.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.MaxSize">
            <summary>
            Get or sets the maximum size to apply on an element when layout is
            calculated.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.RightToLeft">
            <summary>
            Gets or sets the direction of flow of the elements and whether elements are aligned to support locales 
            using right-to-left fonts.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Enabled">
            <summary>
            Gets or sets a value indicating whether the element can respond to user
            interaction.
            </summary>
            <remarks> 
            By default, if element is currently selected when Enalbed set to false, next element would be selected.
            Values inherits from Parent.Enabled.
            When a scrollable control is disabled, the scroll bars are also disabled. 
            For example, a disabled multiline textbox is unable to scroll to display all the lines of text.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadElement.CanFocus">
            <summary>
            Gets or sets a value indicating whether the element can receive input
            focus.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.IsFocused">
            <summary>
            Gets a value indicating whether the element has input focus.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.IsMouseOver">
            <summary>
            Gets or sets a value indicating whether the mouse has entered the bounds of the
            element or any of its sibling elements in the parent RadItem.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.IsMouseOverElement">
            <summary>
            Gets or sets a value indicating whether the mouse has entered the bounds of the
            element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.IsMouseDown">
            <summary>
            Gets or sets a value indicating whether the mouse button has been pressed when
            inside the bounds of the element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.InvalidateChildrenOnChildChanged">
            <summary>
            Provide for use within TelerikLayoutEngine.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.SuppressChildrenAlignment">
            <summary>
            Gets a value indicating whether the element takes into consideration its
            children' Alignment properties when calculating their positions.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ShouldPaint">
            <summary>Gets or sets a value indicating whether the element should be painted.</summary>
            <seealso cref="P:Telerik.WinControls.RadElement.Visibility"/>
            <remarks>
            Children visibility is not be affected. <seealso cref="P:Telerik.WinControls.RadElement.Visibility"/>
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Visibility">
            <summary>Gets or sets a value indicating element visibility.</summary>
            <seealso cref="P:Telerik.WinControls.RadElement.ShouldPaint"/>
            <remarks>
            Setting this property affects also the children of the element. Collapsed means the element and its children would not be painted and would not be 
            calculated in the layout. <seealso cref="P:Telerik.WinControls.RadElement.ShouldPaint"/>
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadElement.IsElementVisible">
            <summary>Gets a value indicating if the element is visible.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Style">
            <summary>
            Gets or sets the stylesheet associated with the element.
            </summary>
            <remarks>
            Stylesheets provide dynamic property settings for elements' RadProperties organized into groups, each regarding a 
            certain state of the element. State means a property has certain value. 
            Style of an element can affect also element children.
            Generally element style is set through control theme, which is a holder for various styles for many controls.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Name">
            <summary>Represents the element unique name.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Class">
            <summary>
                Gets or sets a string value indicating the element visual class name. It's used
                when a stylesheet (<see cref="P:Telerik.WinControls.RadElement.Style"/>) has been applied to this element.
            </summary>
            <remarks>
            Style sheets contain groups of property settings categorized by element type and/or class, thus 
            element "class" is used to determine whether certain style rule would be applied over an element.
            Generally this property is assigned by the control developer but it can be changed design time or runtime if 
            certain element is decided to have different style class.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ClipDrawing">
            <summary>
            Indicates whether the painting of the element and its children should be
            restricted to its bounds.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.Shape">
            <summary>
            Gets or sets an instance of the Shape object of an element. The shape of the
            element is both responsible for clipping the element's children and for providing its'
            border(s) with custom shape.
            </summary>
            <remarks>
            Value of null (or Nothing in VisualBasic.Net) indicates that element has rectangular (or no) shape.
            Shape is an object that defines the bounding graphics path of an element. Graphics clip is always applied when an element has shape.
            Shape is considered when painting the border element, and when hit-testing an element.
            Some predefined shapes are available, like <see cref="T:Telerik.WinControls.RoundRectShape"/> or <see cref="T:Telerik.WinControls.EllipseShape"/>.
            <see cref="T:Telerik.WinControls.CustomShape"/> offers a way to specify element's shape with a sequance of points and curves using code 
            or the design time <see cref="T:Telerik.WinControls.ElementShapeEditor"/>
            	<see cref="T:System.Drawing.Design.UITypeEditor"/>.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadElement.PositionOffset">
            <summary>
            Gets or sets the offset of the origin of the coordinate system used when 
            painting the element and its children.
            </summary>
            <remarks>
            TrnslateTransform of the graphics is used prior to painting the elemen and after painting element children, 
            to reset the transformation
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadElement.ScaleTransform">
            <summary>
            Gets or sets a value indicating the scale transform factors, when paintin the
            element and its children.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.AngleTransform">
            <summary>
            Gets or sets the rotation transform angle used when painting the element and its
            children.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.SerializeProperties">
            <summary>
            	Gets or sets whether the properties of this element should be serialized
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.SerializeElement">
            <summary>
            	Gets or sets whether the element should be serialized in designer
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.SerializeChildren">
            <summary>
            	Gets or sets whether the children of this element should be serialized
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.RenderingMaxFramerate">
            <summary>Gets or sets a value indicating maximum rendered frames per second.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.IsThemeApplied">
            <summary>
            Gets a value indicationg if theme finished applying
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.MouseHover">
            <summary>
            Occurs when the mouse pointer rests on the element. 
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.MouseWheel">
            <summary>
            Occurs when the mouse pointer rests on the element. 
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.MouseMove">
            <summary>
            Occurs when the mouse pointer is moved over the element.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.MouseDown">
            <summary>
            Occurs when the mouse pointer is over the element and a mouse button is pressed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.MouseUp">
            <summary>
            Occurs when the mouse pointer is over the element and a mouse button is released.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.MouseEnter">
            <summary>
            Occurs when the mouse pointer enters the element.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.EnabledChanged">
            <summary>
            Occurs when the mouse pointer leaves the element.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadElement.ChildrenChanged">
            <summary>
            Occurs when the children collection of the element is changed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.CoercedSize">
            <summary>
            Gets or sets the coerced size of the element. The coerced size is with higher
            priority than the size which is calculated when the element's AutoSizeMode is taken
            into consideration.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.CoercedBounds">
            <summary>
            Gets or sets the coerced bounds of the element. The bounds are with higher
            priority than the bounds which are calculated when the element's AutoSizeMode is taken
            into consideration.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.LayoutEngine">
            <summary>
            Gets or sets the layout engine which is responsible for the element's layout. The
            Layout Engine defines the default behavior of the element's layout - how the element
            size is calculated and how it delegates the layout calculations to its child
            elements.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.IsLayoutInvalidated">
            <summary>
            Gets or sets a value indicating whether the element has been invalidated and
            whether the layout system will recalculate its bounds the next time a layout is
            performing. The property is set automatically to true when a RadProperty which
            invalidates the layout has been changed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.SuspendedParent">
            <summary>Gets the topmost parent element which layout has been suspended.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.OverridesDefaultLayout">
            <summary>
                Gets or sets a value indicating whether the element is overriding the default
                layout logic. Typically this property is set to true when the element is a
                <see cref="T:Telerik.WinControls.Layouts.LayoutPanel">LayoutPanel</see>.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.AffectsInnerLayout">
            <exclude />
        </member>
        <member name="P:Telerik.WinControls.RadElement.ShouldHandleMouseInput">
            <summary>
            Specifies whether the Item should handle MouseOver, MouseMove and related mouse events.
            </summary>
            <remarks>
            By default only elements that inherit RadItem can process mouse input.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.RadElement.NotifyParentOnMouseInput">
            <summary>
                Gets or sets a value indicating whether the element should pass the handled mouse
                event to the first parent element which has the
                <see cref="P:Telerik.WinControls.RadElement.ShouldHandleMouseInput"/> property set to true.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadElement.RoutedEventBehaviors">
            <exclude/>
        </member>
        <member name="P:Telerik.WinControls.RadElement.PropagateStyleToChildren">
            <summary>
            Defines whether stylesheet rules should be applied for this element and its children, or only for this element
            </summary>
        </member>
        <member name="M:Telerik.WinControls.VisualElement.#ctor">
            <summary><para>Initializes a new instance of the VisualElement class.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.VisualElement.#ctor(Telerik.WinControls.RadElement)">
            <summary>
            	<para>Initializes a new instance of the VisualElement class assigning its
                parent.</para>
            </summary>
        </member>
        <member name="E:Telerik.WinControls.VisualElement.FontChanged">
            <summary>Fires when the font is changed.</summary>
        </member>
        <member name="P:Telerik.WinControls.VisualElement.DefaultSize">
            <summary>Gets or sets the DefaultSize.</summary>
        </member>
        <member name="P:Telerik.WinControls.VisualElement.ForeColor">
            <summary>Gets or sets the forecolor. Color type represents an ARGB color.</summary>
        </member>
        <member name="P:Telerik.WinControls.VisualElement.BackColor">
            <summary>Gets or sets the backcolor. Color type represents an ARGB color.</summary>
        </member>
        <member name="P:Telerik.WinControls.VisualElement.Font">
            <summary>
            Gets or sets the font. Font type defines a particular format for text, including
            font face, size, and style attributes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.VisualElement.SmoothingMode">
            <summary>
            Gets or sets the smoothing mode of an element. Smoothing mode enumeration defines
            possible values.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.VisualElement.Opacity">
            <summary>
            Gets or sets the opacity of an element. Value 0.0f indicates that the element is completely transparent,
            1.0f means the element is not transparent (the default value).
            </summary>
        </member>
        <member name="P:Telerik.WinControls.VisualElement.TextRenderingHint">
            <summary>Gets or sets the text rendering hint.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadComponentElement.BindingContext">
            <summary>
            Enables a non-control component to emulate the data-binding behavior of a Windows Forms control.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadComponentElement.DataBindings">
            <summary>
            Gets the collection of data-binding objects for this IBindableComponent.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseWheel event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyUp event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnClick(System.EventArgs)">
            <summary>
            	Raises the Click event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnDoubleClick(System.EventArgs)">
            <summary>
            	Raises the DoubleClick event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnTextChanging(Telerik.WinControls.TextChangingEventArgs)">
            <summary>
            	Raises the <see cref="E:Telerik.WinControls.RadItem.TextChanging"/> event.
            </summary>
            <param name="e">A <see cref="T:Telerik.WinControls.TextChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnTextChanged(System.EventArgs)">
            <summary>
            	Raises the <see cref="E:Telerik.WinControls.RadItem.TextChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnTextOrientationChanged(System.EventArgs)">
            <summary>
            	Raises the <see cref="E:Telerik.WinControls.RadItem.TextOrientationChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.OnFlipTextChanged(System.EventArgs)">
            <summary>
            	Raises the <see cref="E:Telerik.WinControls.RadItem.FlipTextChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItem.ContainsText">
            <summary>
            	Determines if the item displays any text.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Telerik.WinControls.RadItem.TextChanging">
            <summary>
            	Occurs when the Text property value is about to be changed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.TextChanged">
            <summary>
            	Occurs when the Text property value changes.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.TextOrientationChanged">
            <summary>
            	Occurs when the TextOrientation property value changes.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.FlipTextChanged">
            <summary>
            	Occurs when the FlipText property value changes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.UseDefaultDisabledPaint">
            <summary>
            	Gets or sets whether the item should use the default way for painting the item when disabled (making it gray) or whether
            	the disabled appearance should be controlled by the theme.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.TextOrientation">
            <summary>
            	Specifies the orientation of the text associated with this item. Whether it should appear horizontal or vertical.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.FlipText">
            <summary>
            	Specifies the text associated with this item will be flipped.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.StringAlignment">
            <summary>
            	Specifies the alignment of the text when it's multiline text.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.ClickMode">
            <summary>
            	Specifies when the Click event should fire.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.Text">
            <summary>
            	Gets or sets the text associated with this item. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.Selectable">
            <summary>
            Gets a value indicating whether the item can be selected.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.Click">
            <summary>
            	Occurs when the element is clicked. 
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.DoubleClick">
            <summary>
            Occurs when the element is double-clicked.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.MouseWheel">
            <summary>
            Occurs when the RadItem has focus and the user scrolls up or down the mouse wheel
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.KeyDown">
            <summary>
            Occurs when the RadItem has focus and the user pressees a key down
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.KeyPress">
            <summary>
            Occurs when the RadItem has focus and the user pressees a key
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadItem.KeyUp">
            <summary>
            Occurs when the RadItem has focus and the user releases the pressed key up
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.AccessibilityObject">
            <summary>
            Gets the AccessibleObject assigned to the item.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.AccessibleDefaultActionDescription">
            <summary>
            Gets or sets the default action description of the item for use by accessibility client applications.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.AccessibleDescription">
            <summary>
            Gets or sets the description that will be reported to accessibility client applications.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.AccessibleName">
            <summary>
            Gets or sets the name of the control for use by accessibility client applications.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItem.AccessibleRole">
            <summary>
            Gets or sets the accessible role of the item, which specifies the type of user interface element 
            of the item.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItem.RadItemAccessibleObject.DoDefaultAction">
            <summary>
            Performs Item's derfault action, like "click" for example. Accessibility related routine.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadScreenTipElement.Description">
            <summary>
            Override this property and provide custom screentip template description in DesignTime
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadScreenTipElement.TemplateType">
            <summary>
            Gets the screen tip actual template type. Used for component serialization.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadScreenTipElement.TipSize">
            <summary>
            Gets a value indicating screen tip preset size.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadScreenTipPlaceholder.ScreenTipElement">
            <summary>
            Gets the instance of RadScreenTipElement wrapped by this control. RadScreenTipElement
            is the main element in the hierarchy tree and encapsulates the actual functionality of RadScreenTip.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ScreenTipPresenter.Hide">
            <summary>
            Hides the screen tip
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ScreenTipPresenter.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ScreenTipPresenter.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.ScreenTipPresenter.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ScreenTipUI.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ScreenTipUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.ScreenTipUI.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Collections.Generic.ListBase`1.AddEventHandler(System.Object,System.Delegate)">
            <summary> Adds a delegate to the list. </summary>
            <param name="eventKey">The object that owns the event.</param>
            <param name="handler">The delegate to add to the list.</param>
        </member>
        <member name="M:Telerik.WinControls.Collections.Generic.ListBase`1.RemoveEventHandler(System.Object,System.Delegate)">
            <summary> Removes a delegate from the list. </summary>
            <param name="eventKey">The object that owns the event.</param>
            <param name="handler">The delegate to remove from the list.</param>
        </member>
        <member name="M:Telerik.WinControls.Collections.Generic.ListBase`1.RaiseEvent(System.Object,System.EventArgs)">
            <summary> Raises the specified event. </summary>
            <param name="eventKey">The object that owns the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="T:Telerik.WinControls.Collections.Trees.BinaryTree`1">
            <summary>Represents generic binary tree that implements IEnumerable interface.</summary>
            <summary>Represents generic binary tree.</summary>
        </member>
        <member name="M:Telerik.WinControls.Collections.Trees.BinaryTree`1.SplitNode(Telerik.WinControls.Collections.Trees.Node{`0},`0)">
            <summary>
            Creates new internal node at the place of specified node to split. 
            Splited node and new created node become children of the internal node.        
            </summary>
            <param name="nodeToSplit">Node to be splited. Becomes left child of the new internal node.</param>
            <param name="newNodeTag">Tag for the new node. Becomes right child of the new internal node.</param>
            <returns>Returns newly created node.</returns>
        </member>
        <member name="M:Telerik.WinControls.Collections.Trees.BinaryTree`1.AddNode(Telerik.WinControls.Collections.Trees.Node{`0},`0)">
            <summary>
            Adds new created node as a child of the specified node if there is space for it.
            </summary>
            <param name="toNode">Node to which is added the new one.</param>
            <param name="newNodeTag">Tag for the new node. Becomes left or right child of the specified node.</param>
            <returns>Returns newly created node.</returns>
        </member>
        <member name="M:Telerik.WinControls.Collections.Trees.BinaryTree`1.InsertNode(Telerik.WinControls.Collections.Trees.Node{`0},`0)">
            <summary>
            Inserts new created node before specified node.
            </summary>
            <param name="beforeNode">Node before which is inserted the new one.</param>
            <param name="newNodeTag">Tag for the new node. Specified node becomes left child.</param>
            <returns>Returns newly created node.</returns>
        </member>
        <member name="M:Telerik.WinControls.Collections.Trees.BinaryTree`1.FindNode(`0)">
            <summary>
            Search for the first occurence of a node with specified tag
            </summary>
            <param name="nodeTag">Tag for searching.</param>
            <returns>Returns the node if found or null if not found.</returns>
        </member>
        <member name="M:Telerik.WinControls.Collections.Trees.BinaryTree`1.DeleteNode(`0)">
            <summary>
            Deletes the first occurence of node with specified tag.
            </summary>
            <param name="nodeTag">Tag for searching.</param>
            <returns>Returns true if node is deleted or false if not found in the tree.</returns>
        </member>
        <member name="M:Telerik.WinControls.Collections.Trees.BinaryTree`1.RemoveNode(`0)">
            <summary>
            Removes the first occurence of node with specified tag.
            </summary>
            <param name="nodeTag">Tag for searching.</param>
            <returns>Returns the removed node or null if not found in the tree.</returns>
        </member>
        <member name="M:Telerik.WinControls.Collections.Trees.BinaryTree`1.Clear">
            <summary>
            Clears all nodes of the tree.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Telerik.WinControls.Collections.Trees.Node`1" -->
        <member name="T:Telerik.WinControls.Collections.Trees.BST">
            <exclude/>
             <summary>
             Summary description for BinaryTree.
             </summary>
        </member>
        <member name="T:Telerik.WinControls.Collections.Trees.BSTNode">
            <exclude/>
             <summary>
             Summary description for Node.
             </summary>
        </member>
        <member name="T:Telerik.WinControls.Collections.Trees.TraversalMethods">
            <summary>
            Summary description for TraversalMethods.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.CollectionChangedHandler">
            <summary>
            Represents the method that will handle a CollectionChanged event.
            </summary>
            <param name="sender">the %sender:System.Collections.CollectionBase% of the event</param>
            <param name="args">the %event arguments:Telerik.WinControls.UI.CollectionChangedEventArgs" </param>
        </member>
        <member name="T:Telerik.WinControls.CollectionChangedEventArgs">
            <summary>
            Represents event data for the CollectionChanged event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.CollectionChangedEventArgs.#ctor(System.Object,System.Int32,Telerik.WinControls.ItemsChangeOperation)">
            <summary>
            Initializes a new instance of the CollectionChangedEventArgs class using the 
            target, the index of the item, and the item's change operation. 
            </summary>
            <param name="target"></param>
            <param name="index"></param>
            <param name="operation"></param>
        </member>
        <member name="P:Telerik.WinControls.CollectionChangedEventArgs.Target">
            <summary>
            Gets or sets a value specifing the target.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.CollectionChangedEventArgs.Index">
            <summary>
            Gets or sets a value indicating the index in the collection of the changed item.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.CollectionChangedEventArgs.Operation">
            <summary>
            Gets or sets a value indicating the items chnage operation.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Collections.EventsCollection.AddEventHandler(System.Object,System.Delegate)">
            <summary> Adds a delegate to the list. </summary>
            <param name="eventKey">The object that owns the event.</param>
            <param name="handler">The delegate to add to the list.</param>
        </member>
        <member name="M:Telerik.WinControls.Collections.EventsCollection.RemoveEventHandler(System.Object,System.Delegate)">
            <summary> Removes a delegate from the list. </summary>
            <param name="eventKey">The object that owns the event.</param>
            <param name="handler">The delegate to remove from the list.</param>
        </member>
        <member name="M:Telerik.WinControls.Collections.EventsCollection.RaiseEvent(System.Object,System.EventArgs)">
            <summary> Raises the specified event. </summary>
            <param name="eventKey">The object that owns the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="T:Telerik.WinControls.Data.ObservableCollection`1">
            <summary>
            Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed. 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Telerik.WinControls.Data.INotifyCollectionChanged">
            <summary>
            Notifies listeners of dynamic changes, such as when items get added and removed or the whole list is refreshed. 
            </summary>
            <remarks>
            You can enumerate over any collection that implements the IEnumerable interface. However, to set up dynamic bindings so that insertions or deletions in the collection update the UI automatically, the collection must implement the INotifyCollectionChanged interface. This interface exposes the CollectionChanged event that must be raised whenever the underlying collection changes.
            </remarks>
        </member>
        <member name="E:Telerik.WinControls.Data.INotifyCollectionChanged.CollectionChanged">
            <summary>
            Occurs when the collection changes.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Data.INotifyCollectionChanging">
            <summary>
            Notifies listeners of dynamic changes, such as when items get added and removed or the whole list is refreshed. 
            </summary>
            <remarks>
            You can enumerate over any collection that implements the IEnumerable interface. However, to set up dynamic bindings so that insertions or deletions in the collection update the UI automatically, the collection must implement the INotifyCollectionChanged interface. This interface exposes the CollectionChanged event that must be raised whenever the underlying collection changes.
            </remarks>
        </member>
        <member name="E:Telerik.WinControls.Data.INotifyCollectionChanging.CollectionChanging">
            <summary>
            Occurs before the collection changes.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Interfaces.INotifyPropertyChangingEx">
            <summary>
            Notifies clients that a property value is changing.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Interfaces.INotifyPropertyChangingEx.PropertyChanging">
            <summary>
            Occurs when a property value is changing.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.#ctor">
            <summary>
            Initializes a new instance of the ObservableCollection class. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the ObservableCollection class that contains elements copied from the specified list. 
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.ClearItems">
            <summary>
            Overridden. Removes all items from the collection. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Overridden. Inserts an item into the collection at the specified index. 
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at the specified index to a new location in the collection. 
            </summary>
            <param name="oldIndex"></param>
            <param name="newIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
            <summary>
            Moves the item at the specified index to a new location in the collection. 
            </summary>
            <param name="oldIndex"></param>
            <param name="newIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.BeginUpdate">
            <summary>
            Suspends event notification.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.EndItemUpdate(System.Boolean)">
            <summary>
            Resumes event notification.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.EndUpdate(System.Boolean)">
            <summary>
            Resumes event notification.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.OnCollectionChanged(Telerik.WinControls.Data.NotifyCollectionChangedEventArgs)">
            <summary>
            Calls the NotifyListenersCollectionChanged method with the provided arguments if not in a batch update. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.NotifyListenersCollectionChanged(Telerik.WinControls.Data.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the CollectionChanged event with the provided arguments. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.OnCollectionChanging(Telerik.WinControls.Data.NotifyCollectionChangingEventArgs)">
            <summary>
            Calls the NotifyListenersCollectionChanging method with the provided arguments if not in a batch update. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.NotifyListenersCollectionChanging(Telerik.WinControls.Data.NotifyCollectionChangingEventArgs)">
            <summary>
            Raises the CollectionChanging event with the provided arguments. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.RemoveItem(System.Int32)">
            <summary>
            Overridden. Removes the item at the specified index of the collection. 
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.SetItem(System.Int32,`0)">
            <summary>
            Overridden. Replaces the element at the specified index. 
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.OnNotifyPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.OnNotifyPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the NotifyPropertyChanged event
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing event data.</param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.OnNotifyPropertyChanging(System.String)">
            <summary>
            Raises the PropertyChanging event
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:Telerik.WinControls.Data.ObservableCollection`1.OnNotifyPropertyChanging(Telerik.WinControls.Interfaces.PropertyChangingEventArgsEx)">
            <summary>
            Raises the NotifyPropertyChanging event
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangingEventArgs"/> instance containing event data.</param>
        </member>
        <member name="E:Telerik.WinControls.Data.ObservableCollection`1.CollectionChanged">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Data.ObservableCollection`1.CollectionChanging">
            <summary>
            Occurs before an item is added, removed, changed, moved, or the entire list is refreshed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.ObservableCollection`1.IsUpdated">
            <summary>
            true to indicate the collection has completed update; otherwise false.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Data.ObservableCollection`1.PropertyChanged">
            <summary>
            Occurs when a property of an object changes. 
            Calling the event is developer's responsibility.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Data.ObservableCollection`1.PropertyChanging">
            <summary>
            Occurs before a property of an object changes. 		
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Data.ReadOnlyObservableCollection`1">
            <summary>
            Represents a read-only data collection that provides notifications when the original <see cref="T:Telerik.WinControls.Data.ObservableCollection`1"/> has changed. 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Telerik.WinControls.Data.ReadOnlyObservableCollection`1.#ctor(Telerik.WinControls.Data.ObservableCollection{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.Data.ReadOnlyObservableCollection`1"/> with an instance of a <see cref="T:Telerik.WinControls.Data.ObservableCollection`1"/> /&gt;
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ReadOnlyObservableCollection`1.OnCollectionChanged(Telerik.WinControls.Data.NotifyCollectionChangedEventArgs)">
            <summary>
            Fires the CollectionChanged event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.ReadOnlyObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Fires the PropertyChnaged event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="E:Telerik.WinControls.Data.ReadOnlyObservableCollection`1.CollectionChanged">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Data.ReadOnlyObservableCollection`1.PropertyChanged">
            <summary>
            Occurs when when a property of an object changes change. 
            Calling the event is developer's responsibility.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Data.ReadOnlyObservableCollection`1.Telerik#WinControls#Data#INotifyCollectionChanged#CollectionChanged">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Data.ReadOnlyObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
            <summary>
            Occurs when when a property of an object changes change. 
            Calling the event is developer's responsibility.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Collections.WeakRefList">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Containers.ContainerControlBase">
            <summary>
            Represents a base class for all container controls - 
            controls that contain other controls. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.#ctor">
            <summary>
            Initializes a new instance of the ContainerControlBase class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.AddEventHandler(System.Object,System.Delegate)">
            <summary> Adds a delegate to the list. </summary>
            <param name="eventKey">The object that owns the event.</param>
            <param name="handler">The delegate to add to the list.</param>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.RemoveEventHandler(System.Object,System.Delegate)">
            <summary> Removes a delegate from the list. </summary>
            <param name="eventKey">The object that owns the event.</param>
            <param name="handler">The delegate to remove from the list.</param>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.RaiseEvent(System.Object,System.EventArgs)">
            <summary> Raises the specified event. </summary>
            <param name="eventKey">The object that owns the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.OnBorderStyleChanged(System.EventArgs)">
            <summary>
            Raises the BorderStyleChanged event. 
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.CreateControlsInstance">
            <summary>
            Overrides Control.CreateControlsInstance. 
            </summary>
            <returns>A new instance of ContainerControlBase.ContainerTypedControlCollection assigned to the control.</returns>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary> Raises the <see cref="E:System.Windows.Forms.Control.Layout"></see> event. </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.LayoutEventArgs"></see> containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.SetPropertyValue(System.Object,System.Object)">
            <summary> Sets the value of the specified property. </summary>
            <param name="key">The property whose value to set.</param>
            <param name="value">An object representing the value to assign to the property.</param>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.GetPropertyValue(System.Object)">
            <summary> Retrieves the value of the specified property. </summary>
            <param name="key">The property whose value to retrieve.</param>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.RemovePropertyValue(System.Object)">
            <summary> Removes the specified property from the properties collection. </summary>
            <param name="key">The property to remove.</param>
        </member>
        <member name="M:Telerik.WinControls.Containers.ContainerControlBase.IsPropertyDefined(System.Object)">
            <summary> Retrieves a boolean value indicating if the specified property has been explicitly set. </summary>
            <param name="key">The property to evaluate.</param>
        </member>
        <member name="E:Telerik.WinControls.Containers.ContainerControlBase.BorderStyleChanged">
            <summary>
            Occurs when the value of the BorderStyle property has changed. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Containers.ContainerControlBase.CreateParams">
            <summary>
            Encapsulates the information needed when creating a control.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Containers.ContainerControlBase.BorderStyle">
            <summary>
            Specifies the border style for a control. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Containers.ContainerControlBase.DefaultMargin">
            <summary>
            Gets the space, in pixels, that is specified by default between controls.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Containers.ContainerControlBase.DefaultPadding">
            <summary>
            Gets the internal spacing, in pixels, of the contents of a control. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Containers.ContainerControlBase.SizeWeight">
            <summary>
            this is the statistical weight of the container which is taken into account
            when the contaner participates in a layout chain.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ReadOnlyControlCollection">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Containers.ShapedFormBase">
            <exclude/>
        </member>
        <member name="F:Telerik.WinControls.Containers.ShapedFormBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Containers.ShapedFormBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.Containers.ShapedFormBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComponentBehavior.DisposeKeyTips">
            <summary>
            Clears all resources reserved for the KeyTips functionallity
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.AllowShowFocusCues">
            <summary>
            Indicates focus cues display, when available, based on the corresponding control type and the current UI state.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.ShowItemToolTips">
            <summary>
            Gets or sets a value indicating whether ToolTips are shown for the RadItem objects contained in 
            the RadControl.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.ShowScreenTipsBellowControl">
            <summary>
            Gets or sets value indicating whether the control should show all screentips under the control client rectangle, as required for the RibbonBar control, for example
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.IsParentFormActive">
            <summary>
            Gets whether this instance of RadControl is on a active form
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.EnableKeyMap">
            <summary>
            Gets or sets whether Key Map (Office 2007 like accelerator keys map)
            is used for this speciffic control. Currently this option is implemented for 
            the RadRibbonBar control only.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.EnableKeyTips">
            <summary>
            Gets or sets whether Key Tips (Office 2007 like accelerator keys map)
            are used for this speciffic control.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComponentBehavior.SelectedElement">
            <summary>
            Gets the current selected element (hovered by the mouse).
            </summary>
        </member>
        <member name="E:Telerik.WinControls.ComponentInputBehavior.HoveredElementChanged">
            <summary>Fires when hovered element is changed.</summary>
        </member>
        <member name="T:Telerik.WinControls.HoveredElementChangedEventHandler">
            <summary>
            Represents the method that will handle the 
            %HoveredElementChanged:HoveredElementChanged% event.
            </summary>
            <param name="source">Initializes the event sender.</param>
            <param name="args">Initializes the %event arguments:HoveredElementChangedEventArgs%.</param>
        </member>
        <member name="T:Telerik.WinControls.HoveredElementChangedEventArgs">
            <summary>
            Represents event data for the HoveredElementChanged event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.HoveredElementChangedEventArgs.#ctor(Telerik.WinControls.RadElement)">
            <summary>
            Initializes a new instance of the HoveredElementChangedEventArgs class.
            </summary>
            <param name="hoveredElement"></param>
        </member>
        <member name="T:Telerik.WinControls.ItemUpdatedEventArgs">
            <summary>
            Represents event data for the ItemUpdated event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ItemUpdatedEventArgs.#ctor(Telerik.WinControls.RadItem)">
            <summary>
            Initializes a new instance of the ItemUpdatedEventArgs class using the RadItem.
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:Telerik.WinControls.ItemUpdatedEventArgs.Item">
            <summary>
            Gets the RadItem that is updated.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.MouseHoverTimer">
            <summary>
            Represents a mouse timer.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadControlAccessibleObject">
            <summary>
            Provides information about a control that can be used by 
            an accessibility application. Extends Control.ControlAccessibleObject.
            
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadControlAccessibleObject.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the RadControlAccessibleObject class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Telerik.WinControls.RadControlAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadControlAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadControlAccessibleObject.HitTest(System.Int32,System.Int32)">
            <summary>
            Retrieves the child object at the specified screen coordinates.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RadControlAccessibleObject.Owner">
            <summary>
            Gets the owner of the instance.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControlAccessibleObject.Name">
            <summary>
            Gets or sets the RadControlAccessibilityObject name.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControlAccessibleObject.Role">
            <summary>
            Gets the accessible role of the control. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadControlAccessibleObject.State">
            <summary>
            Gets the state for the item. Used by accessibility programs.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadCustomControl">
            <summary>
            Represents a custom control.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadCustomControlBase">
            <summary>
            Represents a custom control that can be inherited and designed in a visual designer.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItemsControl.RolloverItemSelection">
            <summary>
            	Gets or sets whether the rollover items functionality of the RadItemsControl will be allowed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItemsControl.ProcessKeyboard">
            <summary>
            	Gets or sets whether the RadItemsControl processes the keyboard.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadLayoutControl.GetPreferredSize(System.Drawing.Size)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.IRadLayoutElement.GetPreferredSize(System.Drawing.Size)" filter=""/>
        </member>
        <member name="T:Telerik.WinControls.SetValueDelegate">
            <summary>
            
            </summary>
            <param name="dependencyProperty"></param>
            <param name="value"></param>
        </member>
        <member name="T:Telerik.WinControls.ThemeNameChangedEventHandler">
            <summary>
            Represents the method that will handle the ThemeNameChanged event.
            </summary>
            <param name="source">
            Initializes the event sender.
            </param>
            <param name="args">
            Initializes the %event arguments:ThemeNameChangedEventArgs%.
            </param>
        </member>
        <member name="T:Telerik.WinControls.ThemeNameChangedEventArgs">
            <summary>
            Represents the event data for the %ThemeNameChanged:ThemeNameChanged% event.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeNameChangedEventArgs.oldThemeName">
            <summary>
            Represents the old theme name.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeNameChangedEventArgs.newThemeName">
            <summary>
            Represents the new theme name.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeNameChangedEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ThemeNameChangedEventArgs class. 
            </summary>
            <param name="oldThemeName">
            Initializes the old theme name.
            </param>
            <param name="newThemeName">
            Initializes the new theme name.
            </param>
        </member>
        <member name="T:Telerik.WinControls.ToolTipTextNeededEventHandler">
            <summary>
            Represents the method that will handle the ToolTipTextNeeded event of a RadCOntrol. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A ToolTipTextNeededEventArgs that contains the event data.</param>
        </member>
        <member name="T:Telerik.WinControls.ToolTipTextNeededEventArgs">
            <summary>
            Provides data for the ToolTipTextNeeded event. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ToolTipTextNeededEventArgs.ToolTipText">
            <summary>
            Gets or sets the ToolTip text. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Design.ElementHierarchyEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Design.ElementHierarchyEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.Design.ElementHierarchyEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Design.MiniLockedBorderGlyph">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.SelectionGlyphBase">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.NewItemGlyph">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.NewItemGlyphBehavior">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.DesignedItemState">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.RadItemGlyph">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.RadItemSelectionBehavior">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.SelectionBorderGlyphType">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.TransparentBehavior">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.DtDebugDraw">
            <exclude/>
            <summary>
            Summary description for DebugDraw.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Design.DesignerActionPanel">
            <exclude/>
        </member>
        <member name="M:Telerik.WinControls.Design.DesignerActionPanel.GetPreferredSize(System.Drawing.Size)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.IRadLayoutElement.GetPreferredSize(System.Drawing.Size)" filter=""/>
        </member>
        <member name="T:Telerik.WinControls.Design.DesignerActionVerbItem">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.DesignerActionVerbList">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.DesignerUtils">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.DragAssistanceManager">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.EditorServiceContext">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.IEventHandlerService">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.ImageIndexEditor">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.ImageKeyEditor">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.IMenuStatusHandler">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.IMouseHandler">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.IOverlayService">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.ISplitWindowService">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.ISupportInSituService">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.LoadThemeDialog">
            <exclude/>
            <exclude/>
        </member>
        <member name="F:Telerik.WinControls.Design.LoadThemeDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Design.LoadThemeDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.Design.LoadThemeDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Design.NoneExcludedImageIndexConverter">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.PanelDesigner">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.RadControlDesigner">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.RadNewItemAttribute">
            <summary>
            Represents a new item attribute. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadNewItemAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the RadNewItemAttribute class.
            </summary>
            <param name="newItemName"></param>
            <param name="allowEditItemText"></param>
        </member>
        <member name="M:Telerik.WinControls.RadNewItemAttribute.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the RadNewItemAttribute class.
            </summary>
            <param name="newItemName"></param>
            <param name="allowEditItemText"></param>
            <param name="paintGlyph"></param>
        </member>
        <member name="M:Telerik.WinControls.RadNewItemAttribute.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the RadNewItemAttribute class.
            </summary>
            <param name="newItemName"></param>
            <param name="allowEditItemText"></param>
            <param name="paintGlyph"></param>
            <param name="addMenuVerb"></param>
        </member>
        <member name="P:Telerik.WinControls.RadNewItemAttribute.NewItemName">
            <summary>
            Gets a string representing the new item text.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadNewItemAttribute.AllowEditItemText">
            <summary>
            Gets a value indicating whether the item should be editable.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadNewItemAttribute.PaintGlyph">
            <summary>
            Gets a value indicating whether a glyph should be added.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadNewItemAttribute.AddMenuVerb">
            <summary>
            Gets a value indicating whether a verb should be added.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadItemEditTextAttribute">
            <summary>
            Represents a item's edit text attribute.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.NewItemData">
            <summary>
            Represents a new item's data.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.NewItemData.#ctor(System.Boolean,System.String,Telerik.WinControls.RadItemCollection)">
            <summary>
            Initializes a new instance of the NewItemData class.
            </summary>
            <param name="allowEdit"></param>
            <param name="editText"></param>
            <param name="targetCollection"></param>
        </member>
        <member name="M:Telerik.WinControls.NewItemData.#ctor(System.Boolean,System.String,Telerik.WinControls.RadItemCollection,System.Boolean)">
            <summary>
            Initializes a new instance of the NewItemData class.
            </summary>
            <param name="allowEdit"></param>
            <param name="editText"></param>
            <param name="targetCollection"></param>
            <param name="paintGlyph"></param>
        </member>
        <member name="M:Telerik.WinControls.NewItemData.#ctor(System.Boolean,System.String,Telerik.WinControls.RadItemCollection,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NewItemData class.
            </summary>
            <param name="allowEdit"></param>
            <param name="editText"></param>
            <param name="targetCollection"></param>
            <param name="paintGlyph"></param>
            <param name="addMenuVerb"></param>
        </member>
        <member name="T:Telerik.WinControls.Design.RadControlDesignerActionList">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.RadDefaultValueAttribute">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.RadDescriptionAttribute">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.RadDesignerActionMethodItem">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.RadImageKeyConverter">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.RadItemCodeDomSerializer">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.RadItemDesigner">
            <exclude/>
            <summary>
            Summary description for RadItemDesigner.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Design.RadObjectCustomRadPropertyDescriptor">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.RadItemsFinder">
            <summary>
            Finds types of RadItems using ITypeDiscoveryService instance.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Design.RadPropertyDefaultValueAttribute">
            <exclude/>
        </member>
        <member name="M:Telerik.WinControls.Design.RadPropertyDefaultValueAttribute.#ctor(System.String,System.Type)">
            <summary>
            RadPropertyDefaultValueAttribute constructor
            </summary>
            <param name="propertyName">The name of the property which provides the default value.</param>
            <param name="ownerType">Type of the object that ownes the RadProperty which provides the default value.</param>
        </member>
        <member name="T:Telerik.WinControls.RadThemeManager">
            <summary>
            Theme manager Component is used to load user-defined themes for RadControls in an application. 
            Use the LoadedThemes property to add new team source files. Themes load immediately when correct 
            property values specified and last for the life time of the application. After a theme is loaded 
            it can be used by the corresponding types of controls placed on any Form of the application. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadThemeManager.LoadedThemeNames">
            <summary>
            Gets a list theme names currently loaded by this instance
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ThemeStorageType">
            <summary>
            Defines the theme storage type.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeStorageType.File">
            <summary>
            Indicates that the theme is contained in a external file.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeStorageType.Resource">
            <summary>
            Indicates that the theme is contained as a resource.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ThemeSource">
            <summary>
            ThemeSource is used to load user-defined themes for RadControls in an application. 
            Themes load immediately when correct property values specified and last for the life 
            time of the application. After a theme is loaded it can be used by the corresponding 
            types of controls placed on any Form of the application. ThemeSource object are generally 
            used by ThemeManager component placed on a Form
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeSource.ReloadThemeFromStorage">
            <summary>
            Loads the theme from the file resource specified and registers it into ThemeResolutionService. Thais method is called 
            immediately when correct ThemeLocation and StorageType are specified.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeSource.GetXmlThemeObject">
            <summary>
            Used internally by RadControls infrastructure to pre-load and obtain a reference to the corresponding XmlTheme object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.ThemeSource.ThemeStorageValid">
            <summary>
            Indicates whether the specified theme was loaded successfully.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeSource.ThemeLoadingError">
            <summary>
            Gets value indicating the error message if Theme was not loaded successfully.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeSource.ThemeLocation">
            <summary>
            Gets or sets the full resource name if StorageType is Resource. Example: "MyNamespace.MyThemeFileName.xml". 
            If the StorageType specified is File, then the value of this property should represent the full or relative file path,
            accessible by the application. The "~" sign can be used to substitute the application executable path.
            Eg. "C:\MyApp\MyThemeFileName.xml" or "..\..\MyThemeFileName.xml" or "~\MyThemeFileName.xml"
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeSource.StorageType">
            <summary>
            Gets or sets File or Resource type of storage for the theme file
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeSource.SettingsAreValid">
            <summary>
            Gets a value indicating whether property values are valid
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeSource.OwnerThemeManager">
            <summary>
            Gets or sets the owner theme manager component. Generally used by Form's designer.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ThemeSourceChangeOperation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeSourceChangeOperation.Inserted">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeSourceChangeOperation.Removed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeSourceChangeOperation.Replaced">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeSourceChangeOperation.Cleared">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ThemeSourcesChangedDelegate">
             <summary>
             Represents
             </summary>
             <param name="changed">
             
             </param>
             <param name="tartet">
             
             </param>
             <param name="atIndex">
             
             </param>
             <param name="operation">
             
            </param>
        </member>
        <member name="T:Telerik.WinControls.ThemeSourceCollection">
            <summary>
                <para>
                  A collection that stores <see cref="T:Telerik.WinControls.ThemeSource"/> objects.
               </para>
            </summary>
            <seealso cref="T:Telerik.WinControls.ThemeSourceCollection"/>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.#ctor(Telerik.WinControls.RadThemeManager)">
            <summary>
                <para>
                  Initializes a new instance of the<see cref="T:Telerik.WinControls.ThemeSourceCollection"/>.
               </para>
            </summary>
            <param name="ownerManager">
                Owner component
            </param>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.#ctor(Telerik.WinControls.ThemeSourceCollection,Telerik.WinControls.RadThemeManager)">
            <summary>
                <para>
                  Initializes a new instance of the <see cref="T:Telerik.WinControls.ThemeSourceCollection"/> based on another <see cref="T:Telerik.WinControls.ThemeSourceCollection"/>.
               </para>
            </summary>
            <param name="value">
                  A <see cref="T:Telerik.WinControls.ThemeSourceCollection"/> from which the contents are copied
            </param>
            <param name="ownerManager">
                Owner component
            </param>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.#ctor(Telerik.WinControls.ThemeSource[],Telerik.WinControls.RadThemeManager)">
            <summary>
                <para>
                  Initializes a new instance of the <see cref="T:Telerik.WinControls.ThemeSourceCollection"/> containing any array of <see cref="T:Telerik.WinControls.ThemeSource"/> objects.
               </para>
            </summary>
            <param name="value">
                  A array of <see cref="T:Telerik.WinControls.ThemeSource"/> objects with which to intialize the collection
            </param>
            <param name="ownerManager">
                Owner component
            </param>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.Add(Telerik.WinControls.ThemeSource)">
            <summary>
               <para>Adds a <see cref="T:Telerik.WinControls.ThemeSource"/> with the specified value to the 
               <see cref="T:Telerik.WinControls.ThemeSourceCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.ThemeSource"/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.ThemeSourceCollection.AddRange(Telerik.WinControls.ThemeSource[])"/>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.AddRange(Telerik.WinControls.ThemeSource[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref="T:Telerik.WinControls.ThemeSourceCollection"/>.</para>
            </summary>
            <param name="value">
               An array of type <see cref="T:Telerik.WinControls.ThemeSource"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.ThemeSourceCollection.Add(Telerik.WinControls.ThemeSource)"/>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.AddRange(Telerik.WinControls.ThemeSourceCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref="T:Telerik.WinControls.ThemeSourceCollection"/> to the end of the collection.
               </para>
            </summary>
            <param name="value">
               A <see cref="T:Telerik.WinControls.ThemeSourceCollection"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.ThemeSourceCollection.Add(Telerik.WinControls.ThemeSource)"/>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.Contains(Telerik.WinControls.ThemeSource)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref="T:Telerik.WinControls.ThemeSourceCollection"/> contains the specified <see cref="T:Telerik.WinControls.ThemeSource"/>.</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.ThemeSource"/> to locate.</param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:Telerik.WinControls.ThemeSource"/> is contained in the collection; 
              otherwise, <see langword="false"/>.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.ThemeSourceCollection.IndexOf(Telerik.WinControls.ThemeSource)"/>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.CopyTo(Telerik.WinControls.ThemeSource[],System.Int32)">
            <summary>
            <para>Copies the <see cref="T:Telerik.WinControls.ThemeSourceCollection"/> values to a one-dimensional <see cref="T:System.Array"/> instance at the 
               specified index.</para>
            </summary>
            <param name="array"><para>The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from <see cref="T:Telerik.WinControls.ThemeSourceCollection"/> .</para></param>
            <param name="index">The index in <paramref name="array"/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="array"/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref="T:Telerik.WinControls.ThemeSourceCollection"/> is greater than the available space between <paramref name="arrayIndex"/> and the end of <paramref name="array"/>.</para></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than <paramref name="array"/>'s lowbound. </exception>
            <seealso cref="T:System.Array"/>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.IndexOf(Telerik.WinControls.ThemeSource)">
            <summary>
               <para>Returns the index of a <see cref="T:Telerik.WinControls.ThemeSource"/> in 
                  the <see cref="T:Telerik.WinControls.ThemeSourceCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.ThemeSource"/> to locate.</param>
            <returns>
            <para>The index of the <see cref="T:Telerik.WinControls.ThemeSource"/> of <paramref name="value"/> in the 
            <see cref="T:Telerik.WinControls.ThemeSourceCollection"/>, if found; otherwise, -1.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.ThemeSourceCollection.Contains(Telerik.WinControls.ThemeSource)"/>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.Insert(System.Int32,Telerik.WinControls.ThemeSource)">
            <summary>
            <para>Inserts a <see cref="T:Telerik.WinControls.ThemeSource"/> into the <see cref="T:Telerik.WinControls.ThemeSourceCollection"/> at the specified index.</para>
            </summary>
            <param name="index">The zero-based index where <paramref name="value"/> should be inserted.</param>
            <param name=" value">The <see cref="T:Telerik.WinControls.ThemeSource"/> to insert.</param>
            <returns><para>None.</para></returns>
            <seealso cref="M:Telerik.WinControls.ThemeSourceCollection.Add(Telerik.WinControls.ThemeSource)"/>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref="T:Telerik.WinControls.ThemeSourceCollection"/> .</para>
            </summary>
            <returns><para>None.</para></returns>
            <seealso cref="T:System.Collections.IEnumerator"/>
        </member>
        <member name="M:Telerik.WinControls.ThemeSourceCollection.Remove(Telerik.WinControls.ThemeSource)">
            <summary>
               <para> Removes a specific <see cref="T:Telerik.WinControls.ThemeSource"/> from the 
               <see cref="T:Telerik.WinControls.ThemeSourceCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.ThemeSource"/> to remove from the <see cref="T:Telerik.WinControls.ThemeSourceCollection"/> .</param>
            <returns><para>None.</para></returns>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not found in the Collection. </exception>
        </member>
        <member name="P:Telerik.WinControls.ThemeSourceCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref="T:Telerik.WinControls.ThemeSource"/>.</para>
            </summary>
            <param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:Telerik.WinControls.Design.RadThemeManagerDesigner">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.RadThemeManagerDesigner.DesignerView">
            <summary>
            This class is the user interface we present for our designer.  All painting and
            hit teseting logic is located within this class.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Design.RadToolboxItemAttribute">
            <summary>
            Attribute that can be applied to hide a class when searching for possible new-item-types when a RadControl 
            is in design mode
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Design.RadVisualStyleBuilderVisible">
            <summary>
            Use this attribute to force a control to appear in Visual Style Builder application, even if it marked with TollboxItem(false)
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Design.RadVisualStyleBuilderVisible.#ctor">
            <summary>
            Creates new RadVisualStyleBuilderVisible attribute with visibility set to true.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Design.StatusCommandUI">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.ThemeNameEditor">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.TicksWatcher">
            <summary>
            Summary description for TicksWatcher.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Design.TicksWatcher.Elapsed">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Design.ToolboxSnapDragDropEventArgs">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Dps.PropertyBinding">
            <summary>
            Represents a dependency between two properties.
            Used by a RadObject to bind a RadProperty to an external one and always use its value.
            The binding may be also two-way, in which special case the bound property updates its source.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Dps.PropertyBinding.#ctor(Telerik.WinControls.Dps.RadObjectNew,Telerik.WinControls.RadProperty,Telerik.WinControls.RadProperty,Telerik.WinControls.PropertyBindingOptions)">
            <summary>
            Initializes a new instance of the RadPropertyBinding class.
            </summary>
            <param name="bindingSourceObject"></param>
            <param name="boundProperty"></param>
            <param name="sourceProperty"></param>
            <param name="options"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.PropertyBinding.GetValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Dps.PropertyBinding.UpdateSourceProperty(System.Object)">
            <summary>
            Updates the binding source property.
            </summary>
            <param name="boundProperty"></param>
            <param name="newValue"></param>
        </member>
        <member name="P:Telerik.WinControls.Dps.PropertyBinding.SourceObject">
            <summary>
            Gets the binding source.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Dps.PropertyBoundObject">
            <summary>
            Represents an object which property is bound to some other object's property.
            Stores the object itself and its bound property. Used internally by the DPS to notify
            bound objects for a change in a binding source property.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.ReplaceDefaultDescriptors(System.ComponentModel.PropertyDescriptorCollection)">
            <summary>
            Replaces the default property descriptors of properties of the object in order to perform Rad-Object specific 
            tasks like checking ShouldSerialize and RadProperty-DefaultValue...
            </summary>
            <param name="props"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.GetValue(Telerik.WinControls.RadProperty)">
            <summary>
            Retrieves the current value for the specified property.
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.SetValue(Telerik.WinControls.RadProperty,System.Object)">
            <summary>
            Applies the provided value as Local for the specified property.
            </summary>
            <param name="property"></param>
            <param name="value"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.ResetValue(Telerik.WinControls.RadProperty)">
            <summary>
            Resets the current value of the specified property.
            This method will remove any effective value modifier
            (such as style or animation setting) for the specified property.
            </summary>
            <param name="property">The RadProperty that should be reset.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.ResetValue(Telerik.WinControls.RadProperty,Telerik.WinControls.ValueResetFlags)">
            <summary>
            Resets the current value of the specified property using the provided flags.
            </summary>
            <param name="property">The RadProperty that should be reset.</param>
            <param name="flags">Additional flags that specify which effective modifiers should be reset.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.UpdateValue(Telerik.WinControls.RadProperty)">
            <summary>
            Forces re-evaluation of the current value for the specified property.
            </summary>
            <param name="property"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.GetValueSource(Telerik.WinControls.RadProperty)">
            <summary>
            Gets the source of the current value for the specified property.
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.UpdateValueCore(Telerik.WinControls.Dps.RadPropertyValue)">
            <summary>
            Performs the core value update logic.
            </summary>
            <param name="propVal"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.SetValueCore(Telerik.WinControls.Dps.RadPropertyValue,System.Object,System.Object,Telerik.WinControls.ValueSource)">
            <summary>
            Performs the core logic of updating property value.
            </summary>
            <param name="propVal">The property value structure, holding property information.</param>
            <param name="propModifier">Additional modifier, like IPropertySetting</param>
            <param name="newValue">The actual new value to be set, valid for Local and DefaultValue sources.</param>
            <param name="source">Specifies the source of the provided new value.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.ResetValueCore(Telerik.WinControls.Dps.RadPropertyValue,Telerik.WinControls.ValueResetFlags)">
            <summary>
            Resets the specified property value, using the provided reset flags.
            </summary>
            <param name="propVal"></param>
            <param name="flags"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.EnsurePropertySet(Telerik.WinControls.Dps.RadPropertyValue,System.Object)">
            <summary>
            Checks needed conditions to perform property update.
            </summary>
            <param name="propVal"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.RaisePropertyNotifications(Telerik.WinControls.Dps.RadPropertyValue,System.Object,System.Object)">
            <summary>
            Performs the following logic:
            1. Compares oldValue and newValue and returns ValueUpdateResult.NotChanged if they are equal.
            2. Raises the PropertyChanging notification. If the event is canceled returns ValueUpdateResult.Canceled.
            3. Raises PropertyChanged notification and returns ValueUpdateResult.Updated.
            </summary>
            <param name="propVal"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.GetCurrentAnimation(Telerik.WinControls.RadProperty)">
            <summary>
            Gets the animation (if any) attached to the current property.
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.OnAnimatedPropertyValueChanged(Telerik.WinControls.AnimatedPropertySetting)">
            <summary>
            Gets notified for a change in an animated property.
            </summary>
            <param name="property">The property which is currently animated.</param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.BindProperty(Telerik.WinControls.RadProperty,Telerik.WinControls.Dps.RadObjectNew,Telerik.WinControls.RadProperty,Telerik.WinControls.PropertyBindingOptions)">
            <summary>
            Binds the specified property to a property of the provided binding source object.
            </summary>
            <param name="thisProperty">Our property that is about to be bound.</param>
            <param name="bindingSourceObject">The object to which source property belongs.</param>
            <param name="bindingSourceProperty">The property to which we will bind.</param>
            <param name="options">Additional options, specifying the binding operation.</param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.UnbindProperty(Telerik.WinControls.RadProperty)">
            <summary>
            Removes the binding for the specified property.
            </summary>
            <param name="property"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.UnbindPropertyCore(Telerik.WinControls.Dps.RadPropertyValue)">
            <summary>
            Performs the core logic of unbinding a property.
            There are two steps to be considered:
            1. Detach from source property's BoundObjects collection.
            2. Reset local property's binding.
            </summary>
            <param name="propVal"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.OnPropertyBoundExternally(Telerik.WinControls.Dps.PropertyBinding,Telerik.WinControls.Dps.RadObjectNew)">
            <summary>
            Gets notified that the specified object has bound to a property of ours.
            </summary>
            <param name="boundObject">The instance that has bound the specified property.</param>
            <param name="property">The property that has been bound.</param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.OnPropertyUnboundExternally(Telerik.WinControls.Dps.PropertyBinding,Telerik.WinControls.Dps.RadObjectNew)">
            <summary>
            Gets notified that the specified object has unbound itself from a property of ours.
            </summary>
            <param name="boundObject"></param>
            <param name="property"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.OnTwoWayBoundPropertyChanged(Telerik.WinControls.Dps.PropertyBinding,System.Object)">
            <summary>
            Notifies a binding source that a change occured in a two-way bound property.
            </summary>
            <param name="binding"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.OnBoundSourcePropertyChanged(Telerik.WinControls.RadProperty)">
            <summary>
            Gets notified for a change in an already bound external property.
            </summary>
            <param name="binding"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.AddStylePropertySetting(Telerik.WinControls.IPropertySetting)">
            <summary>
            Registers a style setting for this instance.
            </summary>
            <param name="setting"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.SetDefaultValuesTracking(System.Boolean)">
            <summary>
            Sets the IsTrackingDefaultValues property to the specified value.
            </summary>
            <param name="tracking"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.OnPropertyChanging(Telerik.WinControls.RadPropertyChangingEventArgs)">
            <summary>
            Raises the <see cref="!:PropertyChanging"/> event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.OnPropertyChanged(Telerik.WinControls.RadPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.WinControls.Dps.RadObjectNew.PropertyChanged"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.OnNotifyPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">The name of the property.</param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadObjectNew.OnNotifyPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the standard .NET PropertyChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Telerik.WinControls.Dps.RadObjectNew.PropertyChanged">
            <summary>
            Occurs when when a property of an object changes change. 
            Calling the event is developer's responsibility.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Dps.RadObjectNew.RadPropertyChanged">
            <summary>
            Occurs when a property of a RadObject changes.		
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Dps.RadObjectNew.RadPropertyChanging">
            <summary>
            Occurs prior to property of a RadObject changes.        
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadObjectNew.InheritanceParent">
            <summary>
            Gets the RadObject which is treated as the parent from which inheritable properties are composed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadObjectNew.Events">
            <summary>
            Provides a simple list of delegates.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadObjectNew.RadObjectType">
            <summary>
            Gets the RadObjectType which is associated with this system type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadObjectNew.IsTrackingDefaultValues">
            <summary>
            Determines whether setting a value through a property setter
            will be treated as local or as a default value override.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Dps.GetPropertyValueCallback">
            <summary>
            Represents a method which may be used to override property value composition.
            </summary>
            <param name="property"></param>
            <param name="baseValue"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.Dps.RadPropertyValue">
            <summary>
            Stores all the information needed for composing a RadProperty's value for a given object.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.#ctor(Telerik.WinControls.Dps.RadPropertyValue)">
            <summary>
            Internal constructor used to store existing property state.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.Copy(Telerik.WinControls.Dps.RadPropertyValue)">
            <summary>
            Restores the state of this property using the provided source.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.AddBoundObject(Telerik.WinControls.Dps.PropertyBoundObject)">
            <summary>
            Registers an object which is bound to this property value.
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.RemoveBoundObject(Telerik.WinControls.Dps.RadObjectNew)">
            <summary>
            Removes previously registered bound object.
            </summary>
            <param name="boundObject"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.NotifyBoundObjects">
            <summary>
            Notifies all bound objects for a change in this property.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.ComposeCurrentValue">
            <summary>
            Forces value composition, using default precedence order.
            </summary>
            <param name="instance"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.InvalidateInheritedValue">
            <summary>
            Resets the state of the inherited value.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.SetLocalValue(System.Object)">
            <summary>
            Applies the specified value as local and forces current value re-evaluation.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.SetLocalValueFromBinding(System.Object)">
            <summary>
            Applies the specified value as local and forces current value re-evaluation.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.ResetValue">
            <summary>
            Removes any valid modifiers for this property and sets the default value as current.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.SetAnimation(Telerik.WinControls.IPropertySetting)">
            <summary>
            Applies the specified animation and forces current value re-evaluation.
            </summary>
            <param name="binding"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.SetStyle(Telerik.WinControls.IPropertySetting)">
            <summary>
            Applies the specified style setting and forces current value re-evaluation.
            </summary>
            <param name="setting"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.SetBinding(Telerik.WinControls.Dps.PropertyBinding)">
            <summary>
            Applies the specified binding and forces current value re-evaluation.
            </summary>
            <param name="setting"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.IsObjectBound(Telerik.WinControls.Dps.RadObjectNew)">
            <summary>
            Determines whether the specified object is already bound.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.BeginUpdate">
            <summary>
            Begins a value update operation.
            Allows for different modifiers update without current value composition.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.EndUpdate(System.Boolean)">
            <summary>
            Ends value update operation and forces current value update.
            </summary>
            <param name="evaluate">True to force re-evaluation of the current value.</param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.SetCustomDefaultValue(System.Object)">
            <summary>
            Registers the provided value as a default for the property.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.SetCurrentValue(System.Object,Telerik.WinControls.ValueSource)">
            <summary>
            Assigns the specified value and source as current.
            Internally checks for possible coersion.
            </summary>
            <param name="value"></param>
            <param name="source"></param>
        </member>
        <member name="M:Telerik.WinControls.Dps.RadPropertyValue.GetDefaultValue">
            <summary>
            Retrieves the default value for the property.
            Custom value may be defined, using the DefaultValueCallback
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadPropertyValue.HasBoundObjects">
            <summary>
            Determines whether we have objects already bound to this property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadPropertyValue.IsUpdating">
            <summary>
            Determines whether the property is in a process of being updated.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadPropertyValue.Property">
            <summary>
            Gets the index of the associated RadProperty.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadPropertyValue.CurrentValue">
            <summary>
            Gets the current value for the property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadPropertyValue.LocalValue">
            <summary>
            Gets the local value for this property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadPropertyValue.BindingLocalValue">
            <summary>
            Gets the value which is set through a two-way property binding.
            This value has higher priority that the local one.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadPropertyValue.PropertyBinding">
            <summary>
            Gets the property binding relation for this property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadPropertyValue.AnimationSetting">
            <summary>
            Gets the animation setting (if any) for this property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadPropertyValue.ValueSource">
            <summary>
            Gets the source of the current value.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadPropertyValue.CoerceValueCallback">
            <summary>
            Gets or sets the callback which may be used to override (coerce) current property value.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadPropertyValue.DefaultValueCallback">
            <summary>
            Gets or sets the callback which may be used to override (coerce) current default value.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadPropertyValue.Metadata">
            <summary>
            Gets the Metadata associated with this property for the current owner.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Dps.RadPropertyValue.IsCurrentValueCoerced">
            <summary>
            The current value is forced to some custom value by a Coerce callback.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Dps.RadPropertyValueCollection">
            <summary>
            Represents a storage for RadPropertyValue entries, which are sorted by each property's GlobalIndex.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Dps.WeakReferenceList`1">
            <summary>
            Wraps instances of type T in WeakReference and stores them in a List.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Telerik.WinControls.RadObjectType">
            <summary>
            Supports metadata for each class inherited from <see cref="T:Telerik.WinControls.RadObject"/>
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadProperty">
            <summary>
            Represents a property. Supports telerik dependency properties system by
            encapsulating a property of a certain RadElement instance. 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Telerik.WinControls.IPropertyBinding" -->
        <!-- Badly formed XML comment ignored for member "T:Telerik.WinControls.RadPropertyBinding" -->
        <member name="M:Telerik.WinControls.RadPropertyBinding.#ctor(Telerik.WinControls.RadObject,Telerik.WinControls.RadProperty,Telerik.WinControls.RadProperty,Telerik.WinControls.PropertyBindingOptions)">
            <summary>
            Initializes a new instance of the RadPropertyBinding class.
            </summary>
            <param name="bindingSourceObject"></param>
            <param name="fromProperty"></param>
            <param name="bindingSourceProperty"></param>
            <param name="options"></param>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyBinding.CanGetValueForProperty(Telerik.WinControls.RadProperty)">
            <summary>
            
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyBinding.GetValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyBinding.ResetValue">
            <summary>
            Reset the bound properties
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyBinding.UpdateBindingSourceProperty(Telerik.WinControls.RadProperty,System.Object)">
            <summary>
            Updates the binding source property.
            </summary>
            <param name="boundProperty"></param>
            <param name="newValue"></param>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyBinding.BindingSourceObject">
            <summary>
            Gets the binding source.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadPropertyChangedEventHandler">
            <summary>
                Represents the method that will handle the
                <see cref="E:Telerik.WinControls.RadObject.RadPropertyChanged">RadPropertyChange</see> event.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadPropertyKey">
            <summary>
            Represents a property key.   
            </summary>
        </member>
        <member name="T:Telerik.WinControls.DefaultValueOptions">
            <summary>
            Singleton.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadPropertyMetadata">
            <summary>
            Represents metadata for a RadProperty. RadPropertyMetadata describes the property. 
            For example, through DefaultValue property you can get or set the default value 
            for the property.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyMetadata.#ctor">
            <summary>Initializes a new instance of the RadPropertyMetadata class.</summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyMetadata.#ctor(System.Object)">
            <summary>Initializes a new instance of the RadPropertyMetadata class using the default value of the property.</summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyMetadata.#ctor(Telerik.WinControls.PropertyChangedCallback)">
            <summary>
            Initializes a new instance of the RadPropertyMetadata class using a property 
            changed callback.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadPropertyMetadata.#ctor(System.Object,Telerik.WinControls.PropertyChangedCallback)">
            <summary>
            Initializes a new instance of the RadPropertyMetadata class using an object 
            and a property changed callback.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyMetadata.ReadOnly">
            <summary>Gets a value indicating whether the property is read-only.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyMetadata.DefaultValue">
            <summary>Gets or sets the default value of the property.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyMetadata.IsInherited">
            <summary>Gets or sets a value indicating whether the property is inherited.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadPropertyMetadata.PropertyChangedCallback">
            <summary>
            Gets or sets the <commentsfrom cref="!:RadPropertySystem.PropertyChangedCallback" filter=""/>
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AttachedPropertyUsage">
            <summary>
            Defines the usage of a given attached property.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AttachedPropertyUsage.Self">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AttachedPropertyUsage.Children">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AttachedPropertyUsage.Descendants">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AttachedPropertyUsage.Anywhere">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AlternativeExpressionStorageCallback">
            <summary>
            Represents the method that will be an alternative expression storage callback.
            </summary>
            <param name="d"></param>
            <param name="dp"></param>
            <param name="metadata"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.CoerceValueCallback">
            <summary>
            Represents the method that will be a coerce value callback.
            </summary>
            <param name="d"></param>
            <param name="baseValue"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.PropertyChangedCallback">
            <summary>
            Represents the method that will be a property changed callback.
            </summary>
            <param name="d">
            
            </param>
            <param name="e">
            Initializes the property change arguments.
            </param>
        </member>
        <member name="T:Telerik.WinControls.ValueSource">
            <summary>
            Defines the source of current property value. See also
            %RadObject.GetValueSource:<br/>
            Telerik.WinControls.RadObject.GetValueSource%.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueSource.Unknown">
            <summary>
            Indicates that the reason is unknown.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueSource.DefaultValue">
            <summary>
            Indicates that the default value is set.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueSource.Inherited">
            <summary>
            Indicates that the property changed is inherited.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueSource.PropertyBinding">
            <summary>
            Indicates that the reason for the property change is data binding.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueSource.Style">
            <summary>
            Indicates that the reason for the property change is an applied theme.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueSource.LocalFromBinding">
            <summary>
            A value is applied through two-way binding.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueSource.Animation">
            <summary>
            Indicates that the reason for the property change is an animation effect.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ValueResetFlags">
            <summary>
            Defines a mask enumeration which is used when updating rad properties' values.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ValueUpdateResult">
            <summary>
            Defines the possible results for a property value update operation.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueUpdateResult.Updating">
            <summary>
            A composite value update is still running.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueUpdateResult.NotUpdated">
            <summary>
            There was no need of updating the property.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueUpdateResult.UpdatedChanged">
            <summary>
            The property has been successfully updated and its value has changed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueUpdateResult.UpdatedNotChanged">
            <summary>
            The property has been successfully updated but its value has not changed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ValueUpdateResult.Canceled">
            <summary>
            Update operation was canceled.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Elements.ClickCommand">
            <summary>
            Represents a click command.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.IImageListProvider">
            <summary>
            Exposes the ImageList property. All classes that implement this interface 
            provide an image list.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IImageListProvider.ImageList">
            <summary>
            Gets the image list.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandBase.#ctor">
            <summary>
            Initializes a new instance of the CommandBase class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CommandBase class using command name.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandBase.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the CommandBase class.
            </summary>
            <param name="name"></param>
            <param name="text"></param>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandBase.ToString">
            <summary>
            Retrieves a text representation of the instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandBase.Execute">
            <summary>
            Executes the command.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandBase.Execute(System.Object[])">
             <summary>
             Executes the command with the given settings.
             </summary>
             <param name="settings">
              
            </param>
        </member>
        <member name="E:Telerik.WinControls.Commands.CommandBase.HandleExecute">
            <summary>
            
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Commands.CommandBase.Executed">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Commands.CommandBase.Name">
            <summary>
            Gets or sets the command name/
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Commands.CommandBase.Type">
            <summary>
            Gets or sets the command type.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.DefaultRadElementTree">
            <summary>Represents a tree of RadElements.</summary>
        </member>
        <member name="T:Telerik.WinControls.RadElementTree">
            <summary>
            Represents RadElementTree. Every Telerik control has a corresponding tree of
            RadElements. This gives a lot of flexibility in building controls allowing, for
            example, inheritance of properties from the ancenstor nodes.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElementTree.#ctor">
            <summary>Initializes a new instance of RadElementTree class.</summary>
        </member>
        <member name="M:Telerik.WinControls.RadElementTree.#ctor(Telerik.WinControls.RadElement)">
            <summary>Initializes a new instance of RadElementTree class using RadElement.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElementTree.RootElement">
            <summary>Gets the RootElement of the tree.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElementTree.Control">
            <summary>Gets or sets the RadControl for the corresponding tree.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElementTree.ComponentTreeHandler">
            <summary>Gets or sets the RadControl for the corresponding tree.</summary>
        </member>
        <member name="P:Telerik.WinControls.RadElementTree.TreeName">
            <summary>Gets the tree name.</summary>
        </member>
        <member name="M:Telerik.WinControls.DefaultRadElementTree.#ctor">
            <summary>Initializes a new instance of the DefaultRadElementTree class.</summary>
        </member>
        <member name="M:Telerik.WinControls.DefaultRadElementTree.#ctor(Telerik.WinControls.RadElement)">
            <summary>
            Initializes a new instance of the DefaultRadElementTree class using RadElement
            parameter.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ElementLayoutData">
            <summary>
            Represents element's layout data. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ElementLayoutData.#ctor(Telerik.WinControls.RadElement,Telerik.WinControls.PerformLayoutType)">
            <summary>
            Initializes a new instance of the ElementLayoutData class from 
            the element and its <commentsfrom cref="!:PerformLayoutType.PerformLayoutType" filter=""/>
            </summary>
            <param name="element"></param>
            <param name="performLayoutType"></param>
        </member>
        <member name="P:Telerik.WinControls.ElementLayoutData.Element">
            <summary>
            Gets or sets the element. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ElementLayoutData.PerformLayoutType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ElementLayoutData.Performed">
             <summary>
            
             </summary>
        </member>
        <member name="T:Telerik.WinControls.ElementPropertyOptions">
            <summary>
            Defines the element's property options.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.None">
            <summary>
            Indicates that there are no property options.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.CanInheritValue">
            <summary>
            Indicates that the property can inherit a value.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.InvalidatesLayout">
            <summary>
            Indicates that the property invalidates the layout.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.AffectsLayout">
            <summary>
            Indicates that the property affects the layout.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.AffectsMeasure">
            <summary>
            Invalidates measure
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.AffectsArrange">
            <summary>
            Invalidates arrange
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.AffectsParentMeasure">
            <summary>
            Invalidates parent's measure
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.AffectsParentArrange">
            <summary>
            Invalidates parent's arrange
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.AffectsDisplay">
            <summary>
            Indicates that the property affects the display.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementPropertyOptions.AffectsTheme">
            <summary>
            Indicates that the property affects the theme.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Elements.IItemsOwner">
            <summary>
            Exposes the Items property for accessing a collection of the items in a
            combobox.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Elements.IItemsOwner.Items">
            <summary>
            Gets a collection representing the collection of the items contained 
            in this ComboBox. 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadElementCollection">
            <summary>
                <para>
                  A collection that stores <see cref="T:Telerik.WinControls.RadElement"/> objects.
               </para>
            </summary>
            <seealso cref="T:Telerik.WinControls.RadElementCollection"/>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.#ctor(Telerik.WinControls.RadElement)">
            <summary>
                <para>
                  Initializes a new instance of the <see cref="T:Telerik.WinControls.RadElementCollection"/>.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.#ctor(Telerik.WinControls.RadElement,Telerik.WinControls.RadElementCollection)">
            <summary>
                <para>
                  Initializes a new instance of the <see cref="T:Telerik.WinControls.RadElementCollection"/> based on another <see cref="T:Telerik.WinControls.RadElementCollection"/>.
               </para>
            </summary>
            <param name="value">
                  A <see cref="T:Telerik.WinControls.RadElementCollection"/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.#ctor(Telerik.WinControls.RadElement,Telerik.WinControls.RadElement[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WinControls.RadElementCollection"/> containing any array of <see cref="T:Telerik.WinControls.RadElement"/> objects.
               </para>
            </summary>
            <param name="value">
                  A array of <see cref="T:Telerik.WinControls.RadElement"/> objects with which to intialize the collection
            </param>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.Add(Telerik.WinControls.RadElement)">
            <summary>
               <para>Adds a <see cref="T:Telerik.WinControls.RadElement"/> with the specified value to the 
               <see cref="T:Telerik.WinControls.RadElementCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.RadElement"/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.RadElementCollection.AddRange(Telerik.WinControls.RadElement[])"/>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.AddRange(Telerik.WinControls.RadElement[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref="T:Telerik.WinControls.RadElementCollection"/>.</para>
            </summary>
            <param name="value">
               An array of type <see cref="T:Telerik.WinControls.RadElement"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.RadElementCollection.Add(Telerik.WinControls.RadElement)"/>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.AddRange(Telerik.WinControls.RadElementCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref="T:Telerik.WinControls.RadElementCollection"/> to the end of the collection.
               </para>
            </summary>
            <param name="value">
               A <see cref="T:Telerik.WinControls.RadElementCollection"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.RadElementCollection.Add(Telerik.WinControls.RadElement)"/>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.Contains(Telerik.WinControls.RadElement)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref="T:Telerik.WinControls.RadElementCollection"/> contains the specified <see cref="T:Telerik.WinControls.RadElement"/>.</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.RadElement"/> to locate.</param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:Telerik.WinControls.RadElement"/> is contained in the collection; 
              otherwise, <see langword="false"/>.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.RadElementCollection.IndexOf(Telerik.WinControls.RadElement)"/>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.CopyTo(Telerik.WinControls.RadElement[],System.Int32)">
            <summary>
            <para>Copies the <see cref="T:Telerik.WinControls.RadElementCollection"/> values to a one-dimensional <see cref="T:System.Array"/> instance at the 
               specified index.</para>
            </summary>
            <param name="array"><para>The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from <see cref="T:Telerik.WinControls.RadElementCollection"/> .</para></param>
            <param name="index">The index in <paramref name="array"/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="array"/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref="T:Telerik.WinControls.RadElementCollection"/> is greater than the available space between <paramref name="index"/> and the end of <paramref name="array"/>.</para></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than <paramref name="array"/>'s lowbound. </exception>
            <seealso cref="T:System.Array"/>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.IndexOf(Telerik.WinControls.RadElement)">
            <summary>
               <para>Returns the index of a <see cref="T:Telerik.WinControls.RadElement"/> in 
                  the <see cref="T:Telerik.WinControls.RadElementCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.RadElement"/> to locate.</param>
            <returns>
            <para>The index of the <see cref="T:Telerik.WinControls.RadElement"/> of <paramref name="value"/> in the 
            <see cref="T:Telerik.WinControls.RadElementCollection"/>, if found; otherwise, -1.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.RadElementCollection.Contains(Telerik.WinControls.RadElement)"/>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.Insert(System.Int32,Telerik.WinControls.RadElement)">
            <summary>
            <para>Inserts a <see cref="T:Telerik.WinControls.RadElement"/> into the <see cref="T:Telerik.WinControls.RadElementCollection"/> at the specified index.</para>
            </summary>
            <param name="index">The zero-based index where <paramref name="value"/> should be inserted.</param>
            <param name=" value">The <see cref="T:Telerik.WinControls.RadElement"/> to insert.</param>
            <returns><para>None.</para></returns>
            <seealso cref="M:Telerik.WinControls.RadElementCollection.Add(Telerik.WinControls.RadElement)"/>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref="T:Telerik.WinControls.RadElementCollection"/> .</para>
            </summary>
            <returns><para>None.</para></returns>
            <seealso cref="T:System.Collections.IEnumerator"/>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.Remove(Telerik.WinControls.RadElement)">
            <summary>
               <para> Removes a specific <see cref="T:Telerik.WinControls.RadElement"/> from the 
               <see cref="T:Telerik.WinControls.RadElementCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.RadElement"/> to remove from the <see cref="T:Telerik.WinControls.RadElementCollection"/> .</param>
            <returns><para>None.</para></returns>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not found in the Collection. </exception>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.Sort">
            <summary>
            <para>Sorts the elements in the entire <see cref="T:Telerik.WinControls.RadElementCollection"/> using the IComparable implementation of each element.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.Sort(System.Collections.IComparer)">
            <summary>
            <para>Sorts the elements in the entire <see cref="T:Telerik.WinControls.RadElementCollection"/> using the specified comparer.</para>
            </summary>
            <param name="comparer">The IComparer implementation to use when comparing elements.</param>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            <para>Sorts the elements in a range of elements in <see cref="T:Telerik.WinControls.RadElementCollection"/> using the specified comparer.</para>
            </summary>
            <param name="index">The zero-based starting index of the range to sort. </param>
            <param name="count">The length of the range to sort. </param>
            <param name="comparer">The IComparer implementation to use when comparing elements.</param>
        </member>
        <member name="M:Telerik.WinControls.RadElementCollection.Move(System.Int32,System.Int32)">
            <summary>
            <para>Moves the element at position a given position to a new position</para>
            </summary>
            <param name="indexFrom">The zero-based index of the element to move</param>
            <param name="indexTo">The zero-based index of the position where the element is to be placed</param>
        </member>
        <member name="P:Telerik.WinControls.RadElementCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref="T:Telerik.WinControls.RadElement"/>.</para>
            </summary>
            <param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:Telerik.WinControls.RadElementZOrderComparer">
            <summary>
            Represents a Z-order comparer. The Z-Order determines the overlapping of the 
            RadElements.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadElementZOrderComparer.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the RadElementZOrderComparer class.
            </summary>
            <param name="reverse"></param>
        </member>
        <member name="M:Telerik.WinControls.RadElementZOrderComparer.Compare(Telerik.WinControls.RadElement,Telerik.WinControls.RadElement)">
            <summary>
            Compares the Z-order of the two RadElement arguments. Retrieves 0 if the
            two elements are equal, positive number if the first element has a greater 
            Z-Order than the second argument, and a negative number otherwise. 
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.RadHostItem">
            <summary>
            Represents an item that contains external control. There is no limitation for the control type - could
            be any descedant of the class Control.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadHostItem.GetPreferredSizeCore(System.Drawing.Size)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.IRadLayoutElement.GetPreferredSize(System.Drawing.Size)" filter=""/>
        </member>
        <member name="P:Telerik.WinControls.RadHostItem.HostedControl">
            <summary>
            Gets the instance of the hosted control.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadHostItem.Validated">
            <summary>
            Corresponds to the hosted control's Validated event
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadHostItem.Validating">
            <summary>
            Corresponds to the hosted control's Validating event
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadHostItem.RouteMessages">
            <summary>
            	<para>Gets or sets whether the mouse and keyboard messages from the hosted control
                can be routed to the owner control.</para>
            </summary>
            <remarks>
            	<para>
                    You can use <see cref="P:Telerik.WinControls.RadElementTree.Control">ElementTree.Control</see> to get
                    the owner control.
                </para>
            	<para>
                    To get the hosted control use <see cref="P:Telerik.WinControls.RadHostItem.HostedControl">HostedControl</see>
                    property.
                </para>
            </remarks>
        </member>
        <member name="E:Telerik.WinControls.RadHostItem.GotFocus">
            <summary>
            Occurs when the element recieves focus.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadHostItem.LostFocus">
            <summary>
            Occurs when the element looses focus.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadHostItem.CausesValidation">
            <summary>
            Gets or sets the <strong>CausesValidation</strong> property of the hosted
            control.
            </summary>
            <remarks>
                Using this property is equivalent to using
                <see cref="P:Telerik.WinControls.RadHostItem.HostedControl">HostedControl</see>.CausesValidation
            </remarks>
        </member>
        <member name="T:Telerik.WinControls.TextChangingEventHandler">
            <summary>
            Represents the method that will handle the TextChanging event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Telerik.WinControls.ItemsChangeOperation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Inserting">
            <summary>
            Indicates that an insert operation will commence.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Inserted">
            <summary>
            Indicates that an insert operation is performed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Removing">
            <summary>
            Indicates that a remove operation will commence.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Removed">
            <summary>
            Indicates that a remove operation is performed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Setting">
            <summary>
            Indicates that an item is going to be set
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Set">
            <summary>
            Indicates that an item is set
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Clearing">
            <summary>
            Indicates that the items will be cleared
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Cleared">
            <summary>
            Indicates that the items are cleared
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Sorting">
            <summary>
            Indicates that the items will be sorted
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ItemsChangeOperation.Sorted">
            <summary>
            Indicates that the items are sorted
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ItemChangedDelegate">
            <summary>
            Represents the method that will handle the %ItemChanged:ItemChanged% event.
            </summary>
            <param name="changed"></param>
            <param name="target"></param>
            <param name="operation"></param>
        </member>
        <member name="T:Telerik.WinControls.RadItemCollection">
            <summary>
                <para>
                  A collection that stores <see cref="T:Telerik.WinControls.RadItem"/> objects.
               </para>
            </summary>
            <seealso cref="T:Telerik.WinControls.RadItemCollection"/>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.#ctor">
            <summary>Initializes a new instance of the RadItemCollectionBase class.</summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.#ctor(Telerik.WinControls.RadItemCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref="!:Telerik.WinControls.RadItemCollectionBase"/> based on another <see cref="!:Telerik.WinControls.RadItemCollectionBase"/>.
               </para>
            </summary>
            <param name="value">
                  A <see cref="!:Telerik.WinControls.RadItemCollectionBase"/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.#ctor(Telerik.WinControls.RadItem[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref="!:Telerik.WinControls.RadItemCollectionBase"/> containing any array of <see cref="T:Telerik.WinControls.RadItem"/> objects.
               </para>
            </summary>
            <param name="value">
                  A array of <see cref="T:Telerik.WinControls.RadItem"/> objects with which to intialize the collection
            </param>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref="!:Telerik.WinControls.RadItemCollectionBase"/> .</para>
            </summary>
            <returns><para>None.</para></returns>
            <seealso cref="T:System.Collections.IEnumerator"/>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.Add(Telerik.WinControls.RadItem)">
            <summary>
               <para>Adds a <see cref="T:Telerik.WinControls.RadItem"/> with the specified value to the 
               <see cref="T:Telerik.WinControls.RadItemCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.RadItem"/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.RadItemCollection.AddRange(Telerik.WinControls.RadItem[])"/>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.AddRange(Telerik.WinControls.RadItem[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref="T:Telerik.WinControls.RadItemCollection"/>.</para>
            </summary>
            <param name="value">
               An array of type <see cref="T:Telerik.WinControls.RadItem"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.RadItemCollection.Add(Telerik.WinControls.RadItem)"/>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.AddRange(Telerik.WinControls.RadItemCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref="T:Telerik.WinControls.RadItemCollection"/> to the end of the collection.
               </para>
            </summary>
            <param name="value">
               A <see cref="T:Telerik.WinControls.RadItemCollection"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.RadItemCollection.Add(Telerik.WinControls.RadItem)"/>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.Insert(System.Int32,Telerik.WinControls.RadItem)">
            <summary>
            <para>Inserts a <see cref="T:Telerik.WinControls.RadItem"/> into the <see cref="T:Telerik.WinControls.RadItemCollection"/> at the specified index.</para>
            </summary>
            <param name="index">The zero-based index where <paramref name="value"/> should be inserted.</param>
            <param name=" value">The <see cref="T:Telerik.WinControls.RadItem"/> to insert.</param>
            <returns><para>None.</para></returns>
            <seealso cref="M:Telerik.WinControls.RadItemCollection.Add(Telerik.WinControls.RadItem)"/>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.Remove(Telerik.WinControls.RadItem)">
            <summary>
               <para> Removes a specific <see cref="T:Telerik.WinControls.RadItem"/> from the 
               <see cref="T:Telerik.WinControls.RadItemCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.RadItem"/> to remove from the <see cref="T:Telerik.WinControls.RadItemCollection"/> .</param>
            <returns><para>None.</para></returns>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not found in the Collection. </exception>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.Sort">
            <summary>
            <para>Sorts the elements in the entire <see cref="T:Telerik.WinControls.RadElementCollection"/> using the IComparable implementation of each element.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.Sort(System.Collections.IComparer)">
            <summary>
            <para>Sorts the elements in the entire <see cref="T:Telerik.WinControls.RadElementCollection"/> using the specified comparer.</para>
            </summary>
            <param name="comparer">The IComparer implementation to use when comparing elements.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            <para>Sorts the elements in a range of elements in <see cref="T:Telerik.WinControls.RadElementCollection"/> using the specified comparer.</para>
            </summary>
            <param name="index">The zero-based starting index of the range to sort. </param>
            <param name="count">The length of the range to sort. </param>
            <param name="comparer">The IComparer implementation to use when comparing elements.</param>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.Contains(Telerik.WinControls.RadItem)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref="T:Telerik.WinControls.RadItemCollection"/> contains the specified <see cref="T:Telerik.WinControls.RadItem"/>.</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.RadItem"/> to locate.</param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:Telerik.WinControls.RadItem"/> is contained in the collection; 
              otherwise, <see langword="false"/>.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.RadItemCollection.IndexOf(Telerik.WinControls.RadItem)"/>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.IndexOf(Telerik.WinControls.RadItem)">
            <summary>
               <para>Returns the index of a <see cref="T:Telerik.WinControls.RadItem"/> in 
                  the <see cref="T:Telerik.WinControls.RadItemCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.RadItem"/> to locate.</param>
            <returns>
            <para>The index of the <see cref="T:Telerik.WinControls.RadItem"/> of <paramref name="value"/> in the 
            <see cref="T:Telerik.WinControls.RadItemCollection"/>, if found; otherwise, -1.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.RadItemCollection.Contains(Telerik.WinControls.RadItem)"/>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.CopyTo(Telerik.WinControls.RadItem[],System.Int32)">
            <summary>
            <para>Copies the <see cref="T:Telerik.WinControls.RadItemCollection"/> values to a one-dimensional <see cref="T:System.Array"/> instance at the 
               specified index.</para>
            </summary>
            <param name="array"><para>The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from <see cref="T:Telerik.WinControls.RadItemCollection"/> .</para></param>
            <param name="index">The index in <paramref name="array"/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="array"/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref="T:Telerik.WinControls.RadItemCollection"/> is greater than the available space between <paramref name="index"/> and the end of <paramref name="array"/>.</para></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than <paramref name="array"/>'s lowbound. </exception>
            <seealso cref="T:System.Array"/>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.ToArray">
            <summary>Retrieves an array of the items in the collection.</summary>
        </member>
        <member name="E:Telerik.WinControls.RadItemCollection.ItemsChanged">
            <summary>
            Fires when item is changed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItemCollection.ItemTypes">
            <summary>
            Gets or sets an array of the items' types in the collection.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItemCollection.ExcludedTypes">
            <summary>
            Gets or sets an array of the excluded items' types for this collection.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItemCollection.SealedTypes">
            <summary>
            Gets or sets an array of the sealed items' types for this collection. 
            That are types that are allowed but not their descendants.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItemCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref="T:Telerik.WinControls.RadItem"/>.</para>
            </summary>
            <param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="P:Telerik.WinControls.RadItemCollection.Item(System.String)">
            <summary>
            Gets the first found item, with Name property equal to itemName specified, case-sensitive.
            </summary>
            <param name="itemName">item Name</param>
            <returns>RadItem if found, null (Nothing in VB.NET) otherwise</returns>
        </member>
        <member name="T:Telerik.WinControls.RadItemCollection.RadItemEnumerator">
            <summary>
            Represents an element enumerator. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.RadItemEnumerator.#ctor(Telerik.WinControls.RadItemCollection)">
            <summary>
            Initializes a new instance of the RadElementEnumerator class.
            </summary>
            <param name="mappings"></param>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.RadItemEnumerator.MoveNext">
            <summary>
            Moves to the next element in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.RadItemEnumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
            Moves to the the next element of the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.RadItemEnumerator.Reset">
            <summary>
            Resets the enumerator position.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.RadItemEnumerator.System#Collections#IEnumerator#Reset">
            <summary>
            Resets the enumerator position.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemCollection.RadItemEnumerator.System#IDisposable#Dispose">
            <summary>
            Disposes the enumeration.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItemCollection.RadItemEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadItemCollection.RadItemEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadItemOwnerCollection">
            <summary>
                <para>
                  A collection that stores <see cref="T:Telerik.WinControls.RadItem"/> objects.
               </para>
            </summary>
            <seealso cref="T:Telerik.WinControls.RadItemCollection"/>
        </member>
        <member name="M:Telerik.WinControls.RadItemOwnerCollection.#ctor(Telerik.WinControls.RadElement)">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WinControls.RadItemCollection"/>.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemOwnerCollection.#ctor">
            <summary>Initializes a new instance of the RadItemCollection class.</summary>
        </member>
        <member name="M:Telerik.WinControls.RadItemOwnerCollection.#ctor(Telerik.WinControls.RadItemOwnerCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WinControls.RadItemCollection"/> based on another <see cref="T:Telerik.WinControls.RadItemCollection"/>.
               </para>
            </summary>
            <param name="value">
                  A <see cref="T:Telerik.WinControls.RadItemCollection"/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WinControls.RadItemOwnerCollection.#ctor(Telerik.WinControls.RadItem[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WinControls.RadItemCollection"/> containing any array of <see cref="T:Telerik.WinControls.RadItem"/> objects.
               </para>
            </summary>
            <param name="value">
                  A array of <see cref="T:Telerik.WinControls.RadItem"/> objects with which to intialize the collection
            </param>
        </member>
        <member name="P:Telerik.WinControls.RadItemOwnerCollection.Owner">
            <summary>
            Gets or sets the owner of the collection.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.#ctor(Telerik.WinControls.RadItemOwnerCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WinControls.RadItemCollection"/> based on another <see cref="T:Telerik.WinControls.RadItemCollection"/>.
               </para>
            </summary>
            <param name="value">
                  A <see cref="T:Telerik.WinControls.RadItemCollection"/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.#ctor(Telerik.WinControls.RadItem[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WinControls.RadItemCollection"/> containing any array of <see cref="T:Telerik.WinControls.RadElement"/> objects.
               </para>
            </summary>
            <param name="value">
                  A array of <see cref="T:Telerik.WinControls.RadElement"/> objects with which to intialize the collection
            </param>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.Contains(Telerik.WinControls.RadItem)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref="T:Telerik.WinControls.RadItemCollection"/> contains the specified <see cref="T:Telerik.WinControls.RadElement"/>.</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.RadElement"/> to locate.</param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:Telerik.WinControls.RadElement"/> is contained in the collection; 
              otherwise, <see langword="false"/>.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.RadItemCollection.IndexOf(Telerik.WinControls.RadItem)"/>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.CopyTo(Telerik.WinControls.RadItem[],System.Int32)">
            <summary>
            <para>Copies the <see cref="T:Telerik.WinControls.RadItemCollection"/> values to a one-dimensional <see cref="T:System.Array"/> instance at the 
               specified index.</para>
            </summary>
            <param name="array"><para>The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from <see cref="T:Telerik.WinControls.RadItemCollection"/> .</para></param>
            <param name="index">The index in <paramref name="array"/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="array"/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref="T:Telerik.WinControls.RadItemCollection"/> is greater than the available space between <paramref name="index"/> and the end of <paramref name="array"/>.</para></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than <paramref name="array"/>'s lowbound. </exception>
            <seealso cref="T:System.Array"/>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.IndexOf(Telerik.WinControls.RadItem)">
            <summary>
               <para>Returns the index of a <see cref="T:Telerik.WinControls.RadElement"/> in 
                  the <see cref="T:Telerik.WinControls.RadItemCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.RadElement"/> to locate.</param>
            <returns>
            <para>The index of the <see cref="T:Telerik.WinControls.RadElement"/> of <paramref name="value"/> in the 
            <see cref="T:Telerik.WinControls.RadItemCollection"/>, if found; otherwise, -1.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.RadItemCollection.Contains(Telerik.WinControls.RadItem)"/>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.ToArray">
            <summary>Retrieves an array of the items in the collection.</summary>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.Sort">
            <summary>
            <para>Sorts the elements in the entire <see cref="T:Telerik.WinControls.RadElementCollection"/> using the IComparable implementation of each element.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.Sort(System.Collections.IComparer)">
            <summary>
            <para>Sorts the elements in the entire <see cref="T:Telerik.WinControls.RadElementCollection"/> using the specified comparer.</para>
            </summary>
            <param name="comparer">The IComparer implementation to use when comparing elements.</param>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            <para>Sorts the elements in a range of elements in <see cref="T:Telerik.WinControls.RadElementCollection"/> using the specified comparer.</para>
            </summary>
            <param name="index">The zero-based starting index of the range to sort. </param>
            <param name="count">The length of the range to sort. </param>
            <param name="comparer">The IComparer implementation to use when comparing elements.</param>
        </member>
        <member name="P:Telerik.WinControls.Elements.RadItemReadOnlyCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref="T:Telerik.WinControls.RadElement"/>.</para>
            </summary>
            <param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator">
            <summary>
            Represents an element enumerator. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator.#ctor(Telerik.WinControls.Elements.RadItemReadOnlyCollection)">
            <summary>
            Initializes a new instance of the RadElementEnumerator class.
            </summary>
            <param name="mappings"></param>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator.MoveNext">
            <summary>
            Moves to the next element in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
            Moves to the the next element of the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator.Reset">
            <summary>
            Resets the enumerator position.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator.System#Collections#IEnumerator#Reset">
            <summary>
            Resets the enumerator position.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator.System#IDisposable#Dispose">
            <summary>
            Disposes the enumeration.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Elements.RadItemReadOnlyCollection.RadItemReadOnlyEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RootRadElement.AutoSizeChangedEvent">
            <summary>
            Tunnels when the AutoSize property of RadControl changes in order to notify any children that should take special actions.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RootRadElement.StretchChangedEvent">
            <summary>
            Tunnels when some of the stretch properties (horizontal or vertical) has changed in order to notify any children that should take special actions.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RootRadElement.RootLayoutSuspendedEvent">
            <summary>
            Tunnels when the layout has been suspended in order to notify any children that should take special actions in this case - like RadHostItem.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RootRadElement.RootLayoutResumedEvent">
            <summary>
            Tunnels when the layout has been resumed in order to notify any children that should take special actions in this case - like RadHostItem.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RootRadElement.Paint(Telerik.WinControls.Paint.IGraphics,System.Drawing.Rectangle)">
            <summary>
            Paints the RootElement and its element tree. Intended for use by RadControl inheritors.
            </summary>
            <param name="graphics">IGrpahics object to be used to paint elements</param>
            <param name="clipRectangle">Clipping rectangle to be painted. Only those elements from the tree which intersect with this rectangle will be painted.</param>
        </member>
        <member name="M:Telerik.WinControls.RootRadElement.ForceApplyTheme">
            <summary>
            Forces theme re-applying to all elements in the element tree.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RootRadElement.SetElementInitialized">
            <summary>
            Sets internal element state to 'Initialized'. Method is generally used by custom control developers.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RootRadElement.ApplyShapeToControl">
            <summary>
            Gets or sets value indicating whether the shape set to the root element would be applied as a region to 
            the RadControl that contains the element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RootRadElement.ControlBounds">
            <summary>
                Gets or sets a value corresponding to the bounding rectangle of the owning Control.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RoutedEventBehaviorCollection">
            <summary>
            A collection of the RoutedEventBehavior objects. Used by the StyleSheet system.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ArrowDirection">
            <summary>
            Specifies arrow directions for the arrow primitive: Up, Right, Down, and
            Left.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ArrowDirection.Left">
            <summary>
            Indicates left pointed arrow.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ArrowDirection.Up">
            <summary>
            Indicates up pointed arrow.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ArrowDirection.Right">
            <summary>
            Indicates right pointed arrow.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ArrowDirection.Down">
            <summary>
            Indicates down pointed arrow.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.BorderBoxStyle">
            <summary>Defines the border rendering style.</summary>
        </member>
        <member name="F:Telerik.WinControls.BorderBoxStyle.SingleBorder">
            <summary>
            All four borders share same customization, using gradient, regarding parent element's shape.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.BorderBoxStyle.FourBorders">
            <summary>
            Each of the four borders and their "shadow" colors can have disparate customization. Note that shape and gradient would NOT be applied.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.BorderBoxStyle.OuterInnerBorders">
            <summary>
            Draw inner and outer gradient borders, regarding parent element's shape. Inner and outer borders would share the specified border width.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Enumerations.CheckPrimitiveStyleEnum">
            <summary>    
            Defines the options used by CheckPrimitive check box 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.CheckPrimitiveStyleEnum.XP">
            <summary>
            Indicates XP check primitive style.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.CheckPrimitiveStyleEnum.Vista">
            <summary>
            Indicates Vista check primitive style.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.CheckPrimitiveStyleEnum.Mac">
            <summary>
            Indicates Mac check primitive style.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ChildrenListOptions">
            <summary>
            Defines the options used by RadElement.GetChildren(options) method.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ChildrenListOptions.Normal">
            <summary>
            Indicates that all children are returned.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ChildrenListOptions.ZOrdered">
            <summary>
            Indicates that children are returned sorted according to their z-index.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ChildrenListOptions.ReverseOrder">
            <summary>
            Indicates that children are returned in reverse order.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ChildrenListOptions.IncludeCollapsed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ChildrenListOptions.IncludeOnlyVisible">
            <summary>
            Indicates that only visible children are included.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ClickMode">
            <summary>
            Defines the click modes.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ClickMode.Release">
            <summary>
            Indicates that the mouse is released.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ClickMode.Press">
            <summary>
            Indicates that the mouse is pressed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ClickMode.Hover">
            <summary>
            Indicates that the mouse hovers.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.DisplayStyle">
            <summary>
            Defines the display style of an item. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.DisplayStyle.None">
            <summary>
            Specifies that neither image nor text is rendered.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.DisplayStyle.Text">
                Specifies that only text is rendered.
        </member>
        <member name="F:Telerik.WinControls.DisplayStyle.Image">
            <summary>
             Specifies that only an image is rendered.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.DisplayStyle.ImageAndText">
            <summary>
             Specifies that both an image and text are to be rendered.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadDropDownStyle">
            <summary>
            Defines the drop down style used by RadComboBox.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadDropDownStyle.DropDown">
            <summary>
            Indicates that the text area is editable.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadDropDownStyle.DropDownList">
            <summary>
            Indicates that the text area cannot be edited. 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ElementVisibility">
            <summary>
            Defines element's visibility.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementVisibility.Visible">
            <summary>
            Indicates that the element is visible.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementVisibility.Hidden">
            <summary>
            Indicates that the element is hidden.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ElementVisibility.Collapsed">
            <summary>
            Indicates that the element is collapsed.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.GradientStyles">
            <summary>
            Defines the gradient effects: Solid, Linear,
            Radial, Glass, OfficeGlass, Gel, and Vista.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientStyles.Solid">
            <summary>
            Indicates that no gradient effect is used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientStyles.Linear">
            <summary>
            Indicates that linear gradient effect is used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientStyles.Radial">
            <summary>
            Indicates that radial gradient effect is used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientStyles.Glass">
            <summary>
            Indicates that glass gradient effect is used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientStyles.OfficeGlass">
            <summary>
            Indicates that OfficeGlass gradient effect is used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientStyles.OfficeGlassRect">
            <summary>
            Indicates that OfficeGlassRect gradient effect is used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientStyles.Gel">
            <summary>
            Indicates that gel gradient effect is used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GradientStyles.Vista">
            <summary>
            Indicates that vista gradient effect is used.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Enumerations.ImageScaling">
            <summary>
            	<para>Indicates how the image is scaled. ImageScaling members are None and
                SizeToFit. The latter fits the image to the parent size.</para>
            </summary>
        </member>
        <member name="T:Telerik.WinControls.PerformLayoutType">
            <summary>
             
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ProgressOrientation">
            <summary>Defines the progress bar orientation.</summary>
        </member>
        <member name="F:Telerik.WinControls.ProgressOrientation.Top">
            <summary>
            Indicates top orientation.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ProgressOrientation.Bottom">
            <summary>
            Indicates bottom orientation.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ProgressOrientation.Left">
            <summary>
            Indicates left orientation.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ProgressOrientation.Right">
            <summary>
            Indicates right orientation.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadAutoSizeMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadAutoSizeMode.FitToAvailableSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadAutoSizeMode.WrapAroundChildren">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadAutoSizeMode.Auto">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadDesignCategory">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.RadElementState">
            <summary>
            Defines the possible states of a RadElement.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElementState.Created">
            <summary>
            Indicates that the RadElement is created.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadElementState.Initialized">
            <summary>
            Indicates that the RadElement is initialized.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.SepOrientation">
            <summary>
            Defines separators orientation. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.SepOrientation.Vertical">
            <summary>
            Indicates Verical separators orientation.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.SepOrientation.Horizontal">
            <summary>
            Indicates Horizontal separators orientation. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.SepOrientation.Custom">
            <summary>
            Indicates Custom separators orientation. 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Enumerations.SortStyle">
            <summary>
            Defines the sorting style of items in a control.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.SortStyle.Ascending">
            <summary>
            Indicates ascending sorting. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.SortStyle.Descending">
            <summary>
            Indicates descending sorting.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.SortStyle.None">
            <summary>
            Indicates no sorting.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Enumerations.ToggleState">
            <summary>
            Defines the toggle states. Toggle states are used in RadToggleButton.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.ToggleState.Off">
            <summary>
            Indicates off state.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.ToggleState.On">
            <summary>
            Indicates on state.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.ToggleState.Indeterminate">
            <summary>
            Indicates a third state for the toggle button - indeterminate.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Enumerations.TypeRestriction">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.TypeRestriction.ValidateForbiddenTypes">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Enumerations.TypeRestriction.ValidateAllowedTypes">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Formatter.#ctor">
            <summary>
            Initializes a new instance of the Formatter class.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.KeyState">
             <summary>
             KeyState is a utility struct to parse KeyState property of DragEventArgs
             and QueryContinueDragEventArgs.
             </summary>
             <example><c>
             protected override void OnDragOver(DragEventArgs e)
            	{
            		KeyState keyState = new KeyState (e.KeyState);
            
            		if (keyState.Shift)
            			e.AllowedEffect = DragDropEffects.Move;
            		else if (keyState.Ctrl)
            			e.AllowedEffect = DragDropEffects.Copy;
            		else
            			e.AllowedEffect = DragDropEffects.Scroll;
            		}
            	</c></example>
        </member>
        <member name="P:Telerik.WinControls.KeyState.State">
            <summary>
            Gets/sets the current state.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.TelerikHelper.GetBoundingRect(System.Drawing.Rectangle,System.Drawing.Drawing2D.Matrix)">
            <summary>
            Get bounding rectangle arround rotated one.
            </summary>
            <param name="rect">Rectangle that is to be rotated</param>
            <param name="angle">Rotation angle in degrees</param>
            <returns>the bounding rectangle arround <see cref="!:rect"/>
            that is rotated at <see cref="!:angle"/> degrees</returns>
        </member>
        <member name="M:Telerik.WinControls.TelerikPaintHelper.InvalidateWindow(System.IntPtr)">
            <summary>
            This method should invalidate entire window including the non-client area.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.TelerikPaintHelper.GetRegionFromBmp(System.Drawing.Bitmap,System.Drawing.Color)">
            <summary>
            Slower and safe managed version of the method that gets a region from a bitmap
            </summary>
            <param name="image"></param>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.TelerikPaintHelper.GetRegionFromBmp(System.Drawing.Bitmap,System.Drawing.Color,Telerik.WinControls.Helpers.TransparencyMode)">
            <summary>
            the meat of this class
            converts the bitmap to a region by scanning each line one by one
            this method will not affect the original bitmap in any way
            </summary>
            <param name="bitmap">The bitmap to convert</param>
            <param name="transparencyKey">The color which will indicate either transparency or opacity</param>
            <param name="mode">Whether the transparency key should indicate the transparent or the opaque region</param>
        </member>
        <member name="T:Telerik.WinControls.Helpers.TransparencyMode">
            <summary>
            Defines the meaning of the transparencyKey argument of the Convert method.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Helpers.TransparencyMode.ColorKeyTransparent">
            <summary>
            The color key is used to define the transparent region of the bitmap.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Helpers.TransparencyMode.ColorKeyOpaque">
            <summary>
            The color key is used to define the area that should not be transparent.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.IHierarchicalItem">
            <summary>
            Exposes methods and properties for e hierarchical items such as 
            RadMenuItem. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IHierarchicalItem.Owner">
            <summary>
            Gets or sets the item's owner.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IHierarchicalItem.HasChildren">
            <summary>
            Gets a value indicating whether the item has children.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IHierarchicalItem.IsRootItem">
            <summary>
            Gets a value indicating whether the item is the root element if the
            hierarchy.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IHierarchicalItem.ParentItem">
            <summary>
            Gets or sets the item's parent. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IHierarchicalItem.Next">
            <summary>
            Gets the next item.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IHierarchicalItem.Previous">
            <summary>
            Gets the previous item.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.IVisualElementProvider">
            <summary>
            This interface gives the ability to create reusable providers for VisualElements
            that are in some relation with logical data objects.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Telerik.WinControls.IVisualElementProvider.CreateElement(System.Object)">
            <summary>
            Create element using the pased data
            </summary>
            <param name="data">Logical data that will be used to initialize the element.</param>
            <returns>The newly created element if everything is OK; null on error.</returns>
        </member>
        <member name="M:Telerik.WinControls.IVisualElementProvider.CleanupElement(Telerik.WinControls.VisualElement)">
            <summary>
            Cleans up when an element that is created with CreateElement() is no longer necessary.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Telerik.WinControls.IVisualElementProvider.SetElementData(Telerik.WinControls.VisualElement,System.Object)">
            <summary>
            Initialize already created element with logical data (if possible).
            </summary>
            <param name="element">the element to  be initilaized</param>
            <param name="data">with this data the given element should be initialized</param>
            <returns>false if the element cannot be initialized with the given data</returns>
        </member>
        <member name="M:Telerik.WinControls.IVisualElementProvider.IsElementCompatible(Telerik.WinControls.VisualElement,System.Object)">
            <summary>
            Check if an element can be initialized with some logical data.
            </summary>
            <param name="element"></param>
            <param name="data"></param>
            <returns>true if the lement can be initialized with the data.</returns>
        </member>
        <member name="T:Telerik.WinControls.Data.NotifyCollectionChangedAction">
            <summary>
            Describes the action that caused a CollectionChanged event. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.NotifyCollectionChangedAction.Add">
            <summary>
            One or more items were added to the collection. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.NotifyCollectionChangedAction.Remove">
            <summary>
            One or more items were removed from the collection. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.NotifyCollectionChangedAction.Replace">
            <summary>
            One or more items were replaced in the collection. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.NotifyCollectionChangedAction.Move">
            <summary>
            One or more items were moved within the collection.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.NotifyCollectionChangedAction.Reset">
            <summary>
            The content of the collection changed dramatically.  
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.NotifyCollectionChangedAction.Batch">
            <summary>
            The collection has been updated in a batch operation.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Data.NotifyCollectionChangedAction.ItemChanged">
            <summary>
            An item in the collection has changed.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs">
            <summary>
            Provides data for the CollectionChanged event. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a Reset change. 
            </summary>
            <param name="action">The action that caused the event. This must be set to Reset.</param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a multi-item change. 
            </summary>
            <param name="action"></param>
            <param name="changedItems"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a one-item change. 
            </summary>
            <param name="action"></param>
            <param name="changedItem"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a multi-item Replace change. 
            </summary>
            <param name="action"></param>
            <param name="newItems"></param>
            <param name="oldItems"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a multi-item change or a reset change. 
            </summary>
            <param name="action"></param>
            <param name="changedItems"></param>
            <param name="startingIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a one-item change. 
            </summary>
            <param name="action"></param>
            <param name="changedItem"></param>
            <param name="index"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a one-item Replace change. 
            </summary>
            <param name="action"></param>
            <param name="newItem"></param>
            <param name="oldItem"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a multi-item Replace change. 
            </summary>
            <param name="action"></param>
            <param name="newItems"></param>
            <param name="oldItems"></param>
            <param name="startingIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a multi-item Move change. 
            </summary>
            <param name="action"></param>
            <param name="changedItems"></param>
            <param name="index"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a multi-item Move change. 
            </summary>
            <param name="action"></param>
            <param name="changedItem"></param>
            <param name="index"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangedEventArgs class that describes a one-item Replace change. 
            </summary>
            <param name="action"></param>
            <param name="newItem"></param>
            <param name="oldItem"></param>
            <param name="index"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs"/> class.
            </summary>
            <param name="action">The action.</param>
            <param name="newItem">The new item.</param>
            <param name="oldItem">The old item.</param>
            <param name="index">The index.</param>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.PropertyName">
            <summary>
            Gets the name of the changed property when the Action is ItemChanged.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.Action">
            <summary>
            Provides data for the CollectionChanged event. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.NewItems">
            <summary>
            Gets the list of new items involved in the change.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.NewStartingIndex">
            <summary>
            Gets the index at which the change occurred.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.OldItems">
            <summary>
            Gets the list of items affected by a Replace, Remove, or Move action.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangedEventArgs.OldStartingIndex">
            <summary>
            Gets the index at which a Move, Remove, ore Replace action occurred.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Data.NotifyCollectionChangedEventHandler">
            <summary>
            Represents the method that handles the CollectionChanged event. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="T:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs">
            <summary>
            Provides data for the CollectionChanging event. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a Reset change. 
            </summary>
            <param name="action">The action that caused the event. This must be set to Reset.</param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a multi-item change. 
            </summary>
            <param name="action"></param>
            <param name="changedItems"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a one-item change. 
            </summary>
            <param name="action"></param>
            <param name="changedItem"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a multi-item Replace change. 
            </summary>
            <param name="action"></param>
            <param name="newItems"></param>
            <param name="oldItems"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a multi-item change or a reset change. 
            </summary>
            <param name="action"></param>
            <param name="changedItems"></param>
            <param name="startingIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a one-item change. 
            </summary>
            <param name="action"></param>
            <param name="changedItem"></param>
            <param name="index"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a one-item Replace change. 
            </summary>
            <param name="action"></param>
            <param name="newItem"></param>
            <param name="oldItem"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a multi-item Replace change. 
            </summary>
            <param name="action"></param>
            <param name="newItems"></param>
            <param name="oldItems"></param>
            <param name="startingIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a multi-item Move change. 
            </summary>
            <param name="action"></param>
            <param name="changedItems"></param>
            <param name="index"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a multi-item Move change. 
            </summary>
            <param name="action"></param>
            <param name="changedItem"></param>
            <param name="index"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.#ctor(Telerik.WinControls.Data.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the NotifyCollectionChangingEventArgs class that describes a one-item Replace change. 
            </summary>
            <param name="action"></param>
            <param name="newItem"></param>
            <param name="oldItem"></param>
            <param name="index"></param>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.Action">
            <summary>
            Provides data for the CollectionChanging event. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.NewItems">
            <summary>
            Gets the list of new items involved in the change.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.NewStartingIndex">
            <summary>
            Gets the index at which the change occurred.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.OldItems">
            <summary>
            Gets the list of items affected by a Replace, Remove, or Move action.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Data.NotifyCollectionChangingEventArgs.OldStartingIndex">
            <summary>
            Gets the index at which a Move, Remove, ore Replace action occurred.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Data.NotifyCollectionChangingEventHandler">
            <summary>
            Represents the method that handles the CollectionChanging event. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="T:Telerik.WinControls.Interfaces.PropertyChangingEventHandlerEx">
            <summary>
            Represents the method that will handle the Telerik.WinControls.Interfaces.INotifyPropertyChanging.PropertyChanging
            event of an Telerik.WinControls.Interfaces.INotifyPropertyChanging interface.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A System.ComponentModel.PropertyChangingEventArgs that contains the event data.</param>
        </member>
        <member name="T:Telerik.WinControls.ApplyGraphicsProperties">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.ClientUtils">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.DeviceCapabilities">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.DeviceContext">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.DeviceContextBackgroundMode">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.DeviceContextBinaryRasterOperationFlags">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.DeviceContextGraphicsMode">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.DeviceContextMapMode">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.DeviceContexts">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.DeviceContextTextAlignment">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.DeviceContextType">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.GdiObjectType">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.IntSecurity">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.IntTextFormatFlags">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.MeasurementDCInfo">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.TextPaddingOptions">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.WindowsFont">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.WindowsFontQuality">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.WindowsGraphics">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.WindowsGraphicsCacheManager">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.WindowsPen">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.WindowsPenStyle">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.WindowsRegion">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Keyboard.Chord">
            <summary>
            Represent a chord.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.#ctor">
            <summary>
            Initializes a new instance of the Chord class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.#ctor(System.Collections.Generic.List{System.Windows.Forms.Keys})">
            <summary>
            Initializes a new isntance of the Chord class using a list of keys.
            </summary>
            <param name="keys"></param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.#ctor(System.Collections.Generic.List{System.Windows.Forms.Keys},Telerik.WinControls.Keyboard.ChordModifier)">
            <summary>
            Initializes a new instance of the Chord class using a list of keys
            and %chord modifier:Telerik.WinControls.Keyboard.ChordModifier%.
            </summary>
            <param name="keys"></param>
            <param name="chordModifier"></param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Chord class using a string of keys.
            </summary>
            <param name="keys"></param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.Clear">
            <summary>Clears the chord.</summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.ToString">
            <summary>Retrieves the string representation of the instance.</summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.ProccessModifiers">
            <summary>Processes the modifiers.</summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Chord.ReverseProccessModifiers">
            <summary>
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.WinControls.Keyboard.Chord.CompareTo(System.Object)" -->
        <member name="P:Telerik.WinControls.Keyboard.Chord.KeysInternal">
            <summary>Gets or sets a list of keys in this instance.</summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.Chord.Keys">
            <summary>Gets or sets the keys in this chord.</summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.Chord.ModifierKeys">
            <summary>Gets the modifier strings.</summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.Chord.ChordKeys">
            <summary>Gets the chord keys.</summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.Chord.ChordModifier">
            <summary>Gets or sets the chord modifier.</summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordMessageFilter.CreateInstance">
            <summary>
            Initializes a new instance of the ChordMessageFilter class.
            </summary>
            <param name="owner">Shortcuts class instance that first created the ChordMessageFilter class instance</param>
            <returns>Instance of the ChordMessageFilter class</returns>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordMessageFilter.System#Windows#Forms#IMessageFilter#PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Filters out a message before it is dispatched. 
            </summary>
            <remarks>
            Use PreFilterMessage to filter out a message before it is dispatched to a control or form. 
            For example, to stop the Click event of a Button control from being dispatched to the control, 
            you implement the PreFilterMessage method and return a true value when the Click message occurs. 
            You can also use this method to perform code work that you might need to do before the message is
            dispatched.
            </remarks>
            <param name="msg">The message to be dispatched. You cannot modify this message. </param>
            <returns>true to filter the message and stop it from being dispatched; false to allow the message to continue to the next filter or control.</returns>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordMessageFilter.CharCodeFromKeys(System.Windows.Forms.Keys)">
            <summary>
            Calculates the character code of alphanumeric key of the Keys enum instance
            </summary>
            <param name="k">An instance of the Keys enumaration</param>
            <returns>The character code of the alphanumeric key</returns>
        </member>
        <member name="F:Telerik.WinControls.Keyboard.ChordKeysUI.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordKeysUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Telerik.WinControls.Keyboard.ChordModifier">
            <summary>
            Represents the state of the modifier keys (SHIFT, CTRL, and ALT) in a
            <strong>Chord</strong>.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.#ctor(System.Windows.Forms.Keys)">
            <summary>
            Initializes a new instance of the <strong>ChordModifier</strong> using data
            provided by Keys input.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <strong>ChordModifier</strong> using explicit
            setting for every property.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.#ctor(Telerik.WinControls.Keyboard.ChordModifier)">
            <summary>
            Initializes a new instance of the <strong>ChordModifier</strong> using data
            provided by another instance.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.#ctor">
            <summary>
            Initializes a new instance of the <b xmlns="">ChordModifier</b> class with
            default settings.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.GetModifiers(Telerik.WinControls.Keyboard.ChordModifier,System.Windows.Forms.Keys)">
            <summary>
            Updates a ChordModifier instance based on a Keys input value
            </summary>
            <param name="tempModifier">ChordModifier instance to update</param>
            <param name="pressedKey">Keys input value</param>
            <returns>ChordModifier instance with updated states</returns>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.GetModifiers(System.Windows.Forms.Keys)">
            <summary>
            Creates new ChordModifier instance based on a Keys input value
            </summary>
            <param name="pressedKey">Keys input value</param>
            <returns>ChordModifier instance</returns>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.Clear">
            <summary>
            Removes all data from the ChordModifier. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object or ChordModifier and returns an indication of their relative values. 
            </summary>
            <returns>
            	<para>A signed number indicating the relative values of this instance and
                value.</para>
            	<div class="tableSection">
            		<list type="table">
            			<listheader>
            				<term>
            					<para>Return Value</para>
            				</term>
            				<description>
            					<para>Description</para>
            				</description>
            			</listheader>
            			<item>
            				<term>
            					<para>Less than zero</para>
            				</term>
            				<description>
            					<para>This instance is less than
                                <span class="parameter">value</span>.</para>
            				</description>
            			</item>
            			<item>
            				<term>
            					<para>Zero</para>
            				</term>
            				<description>
            					<para>This instance is equal to
                                <span class="parameter">value</span>.</para>
            				</description>
            			</item>
            			<item>
            				<term>
            					<para>Greater than zero</para>
            				</term>
            				<description>
            					<para>This instance is greater than
                                <span class="parameter">value</span>.</para>
            					<para>-or-</para>
            					<para><span class="parameter">value</span> is a null reference
                                (<b>Nothing</b> in Visual Basic).</para>
            				</description>
            			</item>
            		</list>
            	</div>
            	<h1 class="heading"><span onkeypress="ExpandCollapse_CheckKey(exceptionsToggle)" style="CURSOR: default" onclick="ExpandCollapse(exceptionsToggle)" tabindex="0"><img class="toggle" id="exceptionsToggle" alt="Collapse image" src="ms-help://MS.MSDNQTR.v80.en/MS.MSDN.v80/MS.WinFX4VS.1033/cpref7/local/collapse_all.gif" onload="OnLoadImage()" name="toggleSwitch"/></span>Exceptions</h1>
            </returns>
            <param name="obj">
            An object to compare, or a null reference (<strong>Nothing</strong> in Visual
            Basic).
            </param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordModifier.OnNotifyPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.ChordModifier.IsEmpty">
            <summary>
            Gets a value indicating if any of the modifier keys (SHIFT, CTRL, and ALT) is in a pressed state. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.ChordModifier.ShiftModifier">
            <summary>
            Gets a value indicating if the SHIFT modifier key is in a pressed state. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.ChordModifier.ControlModifier">
            <summary>
            Gets a value indicating if the CTRL modifier key is in a pressed state. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.ChordModifier.AltModifier">
            <summary>
            Gets a value indicating if the ALT modifier key is in a pressed state. 
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Keyboard.ChordModifier.PropertyChanged">
            <summary>
            Notifies clients that a property value has changed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Keyboard.ChordsMappings.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordsMappings.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.ChordsMappings.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Keyboard.CommandChords.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.CommandChords.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.CommandChords.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.#ctor(Telerik.WinControls.Keyboard.InputBindingsCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref="!:Telerik.WinControls.InputBindingCollection"/> based on another <see cref="!:Telerik.WinControls.InputBindingCollection"/>.
               </para>
            </summary>
            <param name="value">
                  A <see cref="!:Telerik.WinControls.InputBindingCollection"/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.#ctor(Telerik.WinControls.Keyboard.InputBinding[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref="!:Telerik.WinControls.InputBindingCollection"/> containing any array of <see cref="!:Telerik.WinControls.InputBinding"/> objects.
               </para>
            </summary>
            <param name="value">
                  A array of <see cref="!:Telerik.WinControls.InputBinding"/> objects with which to intialize the collection
            </param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.Add(Telerik.WinControls.Keyboard.InputBinding)">
            <summary>
               <para>Adds a <see cref="!:Telerik.WinControls.InputBinding"/> with the specified value to the 
               <see cref="!:Telerik.WinControls.InputBindingCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="!:Telerik.WinControls.InputBinding"/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
            <seealso cref="!:Telerik.WinControls.InputBindingCollection.AddRange"/>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.AddRange(Telerik.WinControls.Keyboard.InputBinding[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref="!:Telerik.WinControls.InputBindingCollection"/>.</para>
            </summary>
            <param name="value">
               An array of type <see cref="!:Telerik.WinControls.InputBinding"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="!:Telerik.WinControls.InputBindingCollection.Add"/>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.AddRange(Telerik.WinControls.Keyboard.InputBindingsCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref="!:Telerik.WinControls.InputBindingCollection"/> to the end of the collection.
               </para>
            </summary>
            <param name="value">
               A <see cref="!:Telerik.WinControls.InputBindingCollection"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="!:Telerik.WinControls.InputBindingCollection.Add"/>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.Contains(Telerik.WinControls.Keyboard.InputBinding)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref="!:Telerik.WinControls.InputBindingCollection"/> contains the specified <see cref="!:Telerik.WinControls.InputBinding"/>.</para>
            </summary>
            <param name="value">The <see cref="!:Telerik.WinControls.InputBinding"/> to locate.</param>
            <returns>
            <para><see langword="true"/> if the <see cref="!:Telerik.WinControls.InputBinding"/> is contained in the collection; 
              otherwise, <see langword="false"/>.</para>
            </returns>
            <seealso cref="!:Telerik.WinControls.InputBindingCollection.IndexOf"/>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.CopyTo(Telerik.WinControls.Keyboard.InputBinding[],System.Int32)">
            <summary>
            <para>Copies the <see cref="!:Telerik.WinControls.InputBindingCollection"/> values to a one-dimensional <see cref="T:System.Array"/> instance at the 
               specified index.</para>
            </summary>
            <param name="array"><para>The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from <see cref="!:Telerik.WinControls.InputBindingCollection"/> .</para></param>
            <param name="index">The index in <paramref name="array"/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="array"/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref="!:Telerik.WinControls.InputBindingCollection"/> is greater than the available space between <paramref name="index"/> and the end of <paramref name="array"/>.</para></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than <paramref name="array"/>'s lowbound. </exception>
            <seealso cref="T:System.Array"/>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.IndexOf(Telerik.WinControls.Keyboard.InputBinding)">
            <summary>
               <para>Returns the index of a <see cref="!:Telerik.WinControls.InputBinding"/> in 
                  the <see cref="!:Telerik.WinControls.InputBindingCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="!:Telerik.WinControls.InputBinding"/> to locate.</param>
            <returns>
            <para>The index of the <see cref="!:Telerik.WinControls.InputBinding"/> of <paramref name="value"/> in the 
            <see cref="!:Telerik.WinControls.InputBindingCollection"/>, if found; otherwise, -1.</para>
            </returns>
            <seealso cref="!:Telerik.WinControls.InputBindingCollection.Contains"/>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.Insert(System.Int32,Telerik.WinControls.Keyboard.InputBinding)">
            <summary>
            <para>Inserts a <see cref="!:Telerik.WinControls.InputBinding"/> into the <see cref="!:Telerik.WinControls.InputBindingCollection"/> at the specified index.</para>
            </summary>
            <param name="index">The zero-based index where <paramref name="value"/> should be inserted.</param>
            <param name=" value">The <see cref="!:Telerik.WinControls.InputBinding"/> to insert.</param>
            <returns><para>None.</para></returns>
            <seealso cref="!:Telerik.WinControls.InputBindingCollection.Add"/>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.InputBindingsCollection.Remove(Telerik.WinControls.Keyboard.InputBinding)">
            <summary>
               <para> Removes a specific <see cref="!:Telerik.WinControls.InputBinding"/> from the 
               <see cref="!:Telerik.WinControls.InputBindingCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="!:Telerik.WinControls.InputBinding"/> to remove from the <see cref="!:Telerik.WinControls.InputBindingCollection"/> .</param>
            <returns><para>None.</para></returns>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not found in the Collection. </exception>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.InputBindingsCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref="!:Telerik.WinControls.InputBinding"/>.</para>
            </summary>
            <param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:Telerik.WinControls.Keyboard.ChordsEventHandler">
            <summary>
                Represents the method that will handle the
                <see cref="E:Telerik.WinControls.Keyboard.Shortcuts.Activate">Activate</see> event.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Keyboard.Shortcuts">
            <summary>
            Represents keyboard shortcuts. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Shortcuts.#ctor">
            <summary>Initializes a new instance of the Shortcuts class.</summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Shortcuts.#ctor(System.ComponentModel.IContainer)">
            <summary>Initializes a new instance of the Shortcuts class.</summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Shortcuts.AddCommandBindings(Telerik.WinControls.Keyboard.InputBinding)">
            <summary>
            Adds the command bindings.
            </summary>
            <param name="binding"></param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Shortcuts.AddCommandBindings(System.Collections.Generic.List{Telerik.WinControls.Keyboard.InputBinding})">
            <summary>
            Adds command bindings.
            </summary>
            <param name="bindings"></param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Shortcuts.AddCommandBindings(Telerik.WinControls.Keyboard.InputBindingsCollection)">
            <summary>
            Adds commands bindings.
            </summary>
            <param name="bindings"></param>
        </member>
        <member name="F:Telerik.WinControls.Keyboard.Shortcuts.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Shortcuts.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.Keyboard.Shortcuts.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Keyboard.Shortcuts.Activate">
            <summary>
            Fires when a shortcut is activated.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Keyboard.Shortcuts.InputBindings">
            <summary>
            Gets the input bindings.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.BoxLayout">
            <summary>
            Represents the BoxLayout class
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.LayoutPanel">
            <summary>
            Represents a base class for all layout panels. Layout panels are RadElements. 
            They are the elements in the control tree responsible for the layout of primitives. 
            Layout panels determine the position and size of the primitives inside them. 
            Because panels are RadElements, panels can be nested thus providing an 
            arbitrary complex layout. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.LayoutPanel.OverridesDefaultLayout">
            <summary>
            The property is always set to true. RadElements may override the 
            default layout. Layout panels are RadElements and always override the 
            default layout.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Layouts.BoxLayout.ProportionProperty">
            <summary>
            Registers the Proportion dependancy property of BoxLayout
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Layouts.BoxLayout.OrientationProperty">
            <summary>
            Registers the Orientation dependancy proeprty of BoxLayout
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Layouts.BoxLayout.StripPositionProperty">
            <summary>
            Registers the StripPosition dependancy property of BoxLayout
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.BoxLayout.GetProportion(Telerik.WinControls.RadElement)">
            <summary>
            Gets the proportion based on a given element
            </summary>
            <param name="element">The element which proportion will be get.</param>
            <returns>The proportion value.</returns>
        </member>
        <member name="M:Telerik.WinControls.Layouts.BoxLayout.SetProportion(Telerik.WinControls.RadElement,System.Single)">
            <summary>
            Sets the proportion (attached property) of a given element.
            </summary>
            <param name="element">The element which proportion will be set.</param>
            <param name="proportion">The proportion value.</param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.BoxLayout.OnPropertyChanged(Telerik.WinControls.RadPropertyChangedEventArgs)">
            <summary>
            Handles the properties values changes of BoxLayout 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.BoxLayout.MeasureOverride(System.Drawing.SizeF)">
            <summary>
            measures the size to layout the children
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Layouts.BoxLayout.ArrangeOverride(System.Drawing.SizeF)">
            <summary>
            arranges the children by a given criteria 
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.Layouts.BoxLayout.Orientation">
            <summary>
            Gets or sets strip orientation - it could be horizontal or vertical.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.BoxLayout.StripPosition">
            <summary>
            represents StripPosition enumeration
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.CellLayoutPanel">
            <summary>Represents a cell layout panel for each cell in a 
            TableLayoutPanel instance. </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.CellLayoutPanel.#ctor">
            <summary>Initialize a new instance of the CellLayoutPanel class.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.CellLayoutPanel.GetRow">
            <summary>Gets the row of the cell in the TableLayoutPanel.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.CellLayoutPanel.GetColumn">
            <summary>Gets the column of the cell in the TableLayoutPanel.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.CellLayoutPanel.#ctor(Telerik.WinControls.Layouts.TableLayoutPanelBase)">
            <summary>
            Initializes a new instance of the CellLayoutPanel class using the table that
            contains the cell.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.CellLayoutPanel.PerformLayoutCore(Telerik.WinControls.RadElement)">
            <summary>Performs layout changes based on the element given as a paramater. 
            Sizes and places are determined by the concrete layout panel that is used. 
            Since all layout panels update their layout automatically through events, 
            this function is rarely used directly.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.CellLayoutPanel.GetPreferredSizeCore(System.Drawing.Size)">
            <summary>
            Retrieves the preferred size of the layout panel. If the proposed size is 
            smaller than the minimal one, the minimal one is retrieved. Since all layout 
            panels update their layout automatically through events, this function is 
            rarely used directly.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.RadLayoutManagerHelper">
            <summary>
            Class that provides methods for creation of the default ILayoutMnager implementation.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.RadLayoutManagerHelper.CreateLayoutManager(Telerik.WinControls.ILayoutHandler)">
            <summary>
            Creates new instance of a class that represents the default ILayoutManager implementation. Intended for use by RadControl inheritors or for IComponentTreeHandler implementaion.
            </summary>
            <param name="handler">reference to ILayout handler instance</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Layouts.RadLayoutManagerHelper.GetGlobalLayoutManagerInstance">
            <summary>
            Return the static instance of the ILayoutManager implementation. This layout manager is used in RadControl to calculate layouts even prior to creation of the Control's window handle.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.Layouts.ControlLayoutEngine">
            <exclude/> 
            <summary>
            Represents a layout engine for RadControls. Each RadControl has one layout
            engine.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ControlLayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Initializes the layout.
            </summary>
            <param name="child"></param>
            <param name="specified"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ControlLayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Retrieves a value indicating whether the parent should perform layout.
            </summary>
            <param name="container"></param>
            <param name="layoutEventArgs"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.Layouts.Dock">
            <summary>
            Represents the different positions where an item can be docked
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.DockLayoutPanel">
            <summary>
            Layout panel which docks its children to the sides of the area it contains
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.DockLayoutPanel.GetDock(Telerik.WinControls.RadElement)">
            <summary>
            Gets the dock property of an element
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Layouts.DockLayoutPanel.SetDock(Telerik.WinControls.RadElement,Telerik.WinControls.Layouts.Dock)">
            <summary>
            Sets the docking position of an element
            </summary>
            <param name="element"></param>
            <param name="dock"></param>
        </member>
        <member name="P:Telerik.WinControls.Layouts.DockLayoutPanel.LastChildFill">
            <summary>
            Gets or sets a property indicating whether the last child will fill the remaining area
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.ElementWithCaptionLayoutPanel">
            <summary>ElementWithCaptionLayoutPanel is a container for elements with a caption.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ElementWithCaptionLayoutPanel.PerformLayoutCore(Telerik.WinControls.RadElement)">
            <summary>
            Performs layout changes based on the element given as a paramater. 
            Sizes and places are determined by the concrete layout panel that is used. 
            Since all layout panels update their layout automatically through events, 
            this function is rarely used directly.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ElementWithCaptionLayoutPanel.GetPreferredSizeCore(System.Drawing.Size)">
            <summary>
            Retrieves the preferred size of the layout panel. If the proposed size is 
            smaller than the minimal one, the minimal one is retrieved. Since all layout 
            panels update their layout automatically through events, this function is 
            rarely used directly.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ElementWithCaptionLayoutPanel.CaptionOnTop">
            <summary>
            Gets or sets a boolean value indicating whether there is a caption on the
            top.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.IBoxElement">
            <summary>
            Defines properties for the box-model; Elements are nodes of a tree, and a
            rectangular box is generated for each element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.Width">
            <summary>Gets or sets a value indicating the box width.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.LeftWidth">
            <summary>Gets or sets a value indicating the left width.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.TopWidth">
            <summary>Gets or sets a value indicating the top width.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.RightWidth">
            <summary>Gets or sets a value indicating the right width.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.BottomWidth">
            <summary>Gets or sets a value indicating the botton width.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.Offset">
            <summary>Gets a value indicating the offset.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.BorderSize">
            <summary>Gets a value indicating the border size.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.HorizontalWidth">
            <summary>Gets a value indicating the horizontal width.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IBoxElement.VerticalWidth">
            <summary>Gets a value indicating the vertical width.</summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.ICollapsibleElement">
            <summary>
            Defines methods and properties for a calapsible element. For example, 
            RadRibonBarChunk is a collapsible element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ICollapsibleElement.ExpandElement">
            <summary>
            Expands the element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ICollapsibleElement.CollapseElement(System.Drawing.Size)">
            <summary>
            Collapses the element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ICollapsibleElement.ExpandedSize">
            <summary>
            Gets or sets a value indicating the expanded size of the element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ICollapsibleElement.CollapseMaxSteps">
            <summary>
            Gets the max number of steps needed for collapsing the collapsible element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ICollapsibleElement.CollapseStep">
            <summary>
            Gets the current collapse step for the collapsible element.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.ILayoutEngine">
            <summary>Defines properties and methods for the default layout engine.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.GetParentPadding">
            <summary>Retrieves parent's padding.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.CheckSize(System.Drawing.Size)">
            <summary>Retrieves check size structure.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.SetCoercedSize(System.Drawing.Size)">
            <summary>Sets coerced size taken as parameter.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.GetFaceRectangle">
            <summary>Gets the face rectangle.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.PerformLayout(Telerik.WinControls.RadElement,System.Boolean)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.IRadLayoutElement.PerformLayout(Telerik.WinControls.RadElement)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.PerformLayoutCore(Telerik.WinControls.RadElement)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.IRadLayoutElement.PerformLayout(Telerik.WinControls.RadElement)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.PerformParentLayout">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.IRadLayoutElement.PerformLayout(Telerik.WinControls.RadElement)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.GetPreferredSize(System.Drawing.Size)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.IRadLayoutElement.GetPreferredSize(System.Drawing.Size)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.GetPreferredSizeCore(System.Drawing.Size)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.IRadLayoutElement.GetPreferredSize(System.Drawing.Size)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.InvalidateLayout">
            <summary>Invalidates layout - needs redrawing.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.LayoutPropertyChanged(Telerik.WinControls.RadPropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.IsValidWrapElement">
            <summary>Retrieves a value indicating whether the element is valid wrap element.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.PerformRegisteredSuspendedLayouts">
            <summary>Performs registered suspended layout.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.GetTransformationPoint">
            <summary>Retrieves transformation point. The point is a Point structure.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.TransformByAlignment(System.Drawing.Size,System.Drawing.Rectangle)">
            <summary>Retrieves transformation by alignment point using size and inner bounds.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.GetBorderOffset">
            <summary>Retrieves Border offset.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.GetBorderSize">
            <summary>Retrieves border size.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.GetChildBorderSize">
            <summary>Retrieves the border size of its child.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ILayoutEngine.InvalidateCachedBorder">
            <summary>Invalidates the cached border.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ILayoutEngine.AvailableSize">
            <summary>Gets a value indicating the available size.</summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.ImageAndTextLayoutPanel">
            <summary>Represents a layout</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ImageAndTextLayoutPanel.#ctor">
            <summary>Initializes a new instance of ImageAndTextLayoutPanel class.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ImageAndTextLayoutPanel.LayoutTextAndImage(System.Drawing.Size,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            
            </summary>
            <param name="fieldSize"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ImageAndTextLayoutPanel.PerformLayoutCore(Telerik.WinControls.RadElement)">
            <summary>
             Performs layout changes based on the element given as a paramater. 
             Sizes and places are determined by the concrete layout panel that is used. 
             Since all layout panels update their layout automatically through events, 
             this function is rarely used directly.
             </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.ImageAndTextLayoutPanel.GetPreferredSizeCore(System.Drawing.Size)">
            <summary>
            Retrieves the preferred size of the layout panel. If the proposed size is 
            smaller than the minimal one, the minimal one is retrieved. Since all layout 
            panels update their layout automatically through events, this function is 
            rarely used directly.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ImageAndTextLayoutPanel.ImageAlignment">
            <summary>Gets or sets a value indicating the image alignment.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ImageAndTextLayoutPanel.TextAlignment">
            <summary>Gets or sets a value indicating text alignment.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ImageAndTextLayoutPanel.TextImageRelation">
            <summary>
                Gets or sets a value indicating the TextImageRelation: ImageAboveText,
                ImageBeforeText, Overlay, TextAboveImage, and TextBeforeImage. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ImageAndTextLayoutPanel.DisplayStyle">
            <summary>
            Gets or sets a value indicating the DisplayStyle: None, Image, Text, 
            and ImageAndText.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.IScrollViewer">
            <summary>
            	<para>Content within a user interface is often larger than the visible area that
                the user can see. Large Telerik elements can be put in scroll viewer in order to
                scroll their content in small visible area.</para>
            	<para>
                    Every element that support scrolling must implement this interface. Currently
                    only class <see cref="!:RadScrollViewer"/> implements this interface and all
                    Telerik elements that can be scrolled inherit that class.
                </para>
            </summary>
            <seealso cref="!:Telerik.WinControls.UI.RadScrollViewer" cat="Reference">RadScrollViewer Class</seealso>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.LineDown">
            <summary>
            Scrolls down within viewport by one logical unit.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.LineLeft">
            <summary>
            Scrolls left within viewport by one logical unit.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.LineRight">
            <summary>
            Scrolls right within viewport by one logical unit.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.LineUp">
            <summary>
            Scrolls up within viewport by one logical unit.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.PageDown">
            <summary>
            Scrolls down within viewport by one page.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.PageLeft">
            <summary>
            Scrolls left within viewport by one page.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.PageRight">
            <summary>
            Scrolls right within viewport by one page.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.PageUp">
            <summary>
            Scrolls up within viewport by one page.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.ScrollToTop">
            <summary>
            Scrolls vertically to the beginning of the content.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.ScrollToBottom">
            <summary>
            Scrolls vertically to the end of the content.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.ScrollToLeftEnd">
            <summary>
            Scrolls horizontally to the beginning of the content.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.ScrollToRightEnd">
            <summary>
            Scrolls horizontally to the end of the content.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.ScrollToHome">
            <summary>
            Scrolls both horizontally and vertically to the beginning of the content.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.IScrollViewer.ScrollToEnd">
            <summary>
            Scrolls both horizontally and vertically to the end of the content.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.IScrollViewer.Virtualized">
            <summary>
            Gets whether the scroll viewer uses a virtualized viewport
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.LayoutData">
            <summary>Represents layout data.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.LayoutData.ClientRectangle">
            <summary>
            Gets or sets a value indicating the client rectangle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.LayoutData.FaceRectangle">
            <summary>
            Gets or sets a value indicating the face rectangle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.LayoutData.FieldRectangle">
            <summary>
            Gets or sets a value indicating the field rectangle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.LayoutData.FocusRectangle">
            <summary>
            Gets or sets a value indicating the focus rectangle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ItemLayoutData.CheckArea">
            <summary>
            Gets or sets a value indicating the check area.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ItemLayoutData.CheckBounds">
            <summary>
            Gets or sets a value indicating the checkbounds.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.ItemLayoutData.ImageStart">
            <summary>
            Gets or sets a point indicating the image start position.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.LayoutUtils">
            <exclude/> 
        </member>
        <member name="T:Telerik.WinControls.Layout.NewLayoutImageAndTextLayoutPanel">
            <summary>Represents a layout</summary>
        </member>
        <member name="M:Telerik.WinControls.Layout.NewLayoutImageAndTextLayoutPanel.#ctor">
            <summary>Initializes a new instance of NewLayoutImageAndTextLayoutPanel class.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layout.NewLayoutImageAndTextLayoutPanel.ImageAlignment">
            <summary>Gets or sets a value indicating the image alignment.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layout.NewLayoutImageAndTextLayoutPanel.TextAlignment">
            <summary>Gets or sets a value indicating text alignment.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layout.NewLayoutImageAndTextLayoutPanel.TextImageRelation">
            <summary>
                Gets or sets a value indicating the TextImageRelation: ImageAboveText,
                ImageBeforeText, Overlay, TextAboveImage, and TextBeforeImage. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layout.NewLayoutImageAndTextLayoutPanel.DisplayStyle">
            <summary>
            Gets or sets a value indicating the DisplayStyle: None, Image, Text, 
            and ImageAndText.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.NewStackLayoutPanel">
            <summary>
            	<para>Layout panel is a container for other elements. It orders the contained
                elements as a stack vertically or horizontally. When the elements pass through the
                left end of the stacklayout, the last one is put on a new line. If horizontal is
                chosen the width of all elements is the width of the largest element in the
                column.</para>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.NewStackLayoutPanel.Orientation">
            <summary>
            Gets or sets the elements orientation inside the stacklayout. 
            Possible values are horizontal and vertical.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.NewStackLayoutPanel.RightToLeft">
            <summary>
            Gets or sets the elements right to left flow inside the stacklayout. 
            Possible values are true and false.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.PreferredSizeData">
            <exclude/> 
        </member>
        <member name="T:Telerik.WinControls.Layouts.StackLayoutPanel">
            <summary>
            	<para>Layout panel is a container for other elements. It orders the contained
                elements as a stack vertically or horizontally. When the elements pass through the
                left end of the stacklayout, the last one is put on a new line. If horizontal is
                chosen the width of all elements is the width of the largest element in the
                column.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.StackLayoutPanel.PerformLayoutCore(Telerik.WinControls.RadElement)">
            <summary>
            Performs layout changes based on the element given as a paramater. 
            Sizes and places are determined by the concrete layout panel that is used. 
            Since all layout panels update their layout automatically through events, 
            this function is rarely used directly.
            </summary>
            <param name="affectedElement"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.StackLayoutPanel.GetPreferredSizeCore(System.Drawing.Size)">
            <summary>
            Retrieves the preferred size of the layout panel. If the proposed size is 
            smaller than the minimal one, the minimal one is retrieved. Since all layout 
            panels update their layout automatically through events, this function is 
            rarely used directly.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.StackLayoutPanel.ArrangeOverride(System.Drawing.SizeF)">
            <summary>
            ArrangeOverride
            </summary>
            <param name="arrangeSize"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.Orientation">
            <summary>
            Gets or sets the elements orientation inside the stacklayout. 
            Possible values are horizontal and vertical.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.AllElementsEqualSize">
            <summary>
            Gets or sets a value indicating whether the elements have equal size.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.EqualChildrenWidth">
            <summary>
            Gets or sets a value indicating whether the elements have equal width.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.EqualChildrenHeight">
            <summary>
            Gets or sets a value indicating whether the elements have equal height.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.ChildrenForcedSize">
            <summary>
            ChildrenForcedSize
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.FlipMaxSizeDimensions">
            <summary>
            Gets or sets a value indicating whether maximum size dimensions are
            flipped.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.CollapseElementsOnResize">
            <summary>Gets or sets a value indicating whether elements are collapsed on resize.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.UseParentSizeAsAvailableSize">
            <summary>
            Gets or sets a value indicating whether the panel will use its direct parent size to arrange the child elements or
            whether it will use the first ancestor which is a layout panel or an element with AutoSizeMode = FitToAvailableSize.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.IsInStripMode">
            <summary>
            Gets or sets a value indicating whether the panel is in Strip mode or not. When in Strip mode the panel doesn't
            move the child elements to a new row when there's not enough space but rather arranges all elements on a single row.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.InvalidateChildrenOnChildChanged">
            <summary>
            Notifies all children when same child changes. Effectively redraws all
            children in the panel.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StackLayoutPanel.SuppressChildrenAlignment">
            <summary>Gets a value indicating whether children are suppressed.</summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.StripLayoutPanel">
            <summary>
            StripLayoutPanel is a container for elements. StripLayoutPanel orders the elements
            in a single line vertically or horizontally.
            <para>
            Extends %LayoutPanel:Telerik.WinControls.LayoutPanel%.
            </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.StripLayoutPanel.PerformLayoutCore(Telerik.WinControls.RadElement)">
            <summary>
            Performs layout changes based on the element given as a paramater. 
            Sizes and places are determined by the concrete layout panel that is used. 
            Since all layout panels update their layout automatically through events, 
            this function is rarely used directly.
            </summary>
            <param name="affectedElement"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.StripLayoutPanel.GetPreferredSizeCore(System.Drawing.Size)">
            <summary>
             Retrieves the preferred size of the layout panel. If the proposed size is 
             smaller than the minimal one, the minimal one is retrieved. Since all layout 
             panels update their layout automatically through events, this function is 
             rarely used directly.
             </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StripLayoutPanel.Orientation">
            <summary>
            Gets or sets strip orientation - it could be horizontal or vertical.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.StripLayoutPanel.ItemsOffset">
            <summary>
            Gets or sets global offset for the containing items
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.TableLayoutPanel">
            <summary>
            Represents a table layout panel. The class is a container for
            CelllayoutPanel(s).
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.TableLayoutPanelBase">
            <summary>Represenst a base class for the TableLayoutPanel class. </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TableLayoutPanelBase.#ctor">
            <summary>Initializes a new instance of the TableLayoutPanelBase class.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TableLayoutPanelBase.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the TableLayoutPanelBase class using the numbers of
            rows and columns.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TableLayoutPanelBase.GetElement(System.Int32,System.Int32)">
            <summary>Retrieves the first element in the specified cell.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TableLayoutPanelBase.SetElement(System.Int32,System.Int32,Telerik.WinControls.RadElement)">
            <summary>
            Sets the element in the specified cell. If the cell is not empty, all elements 
            are deleted beforehand. Retrieved boolean value indicates the success of the 
            insertion operation.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TableLayoutPanelBase.AddColumns(System.Int32,System.Int32)">
            <summary>
            Inserts the given number of columns before the specified column. 
            </summary>
            <param name="beforeColumn"></param>
            <param name="numColumns"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TableLayoutPanelBase.AddColumn(System.Int32,Telerik.WinControls.RadElement[])">
            <summary>
            Inserts a column before the specified one. The second parameter contains the 
            elements of the new column. The array must have the same dimension
            as the rows in the table. If this is not true, the insert operation fails.
            </summary>
            <param name="beforeColumn"></param>
            <param name="elements"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TableLayoutPanelBase.AddRows(System.Int32,System.Int32)">
            <summary>
            Inserts rows before the specified one.
            </summary>
            <param name="beforeRow"></param>
            <param name="numRows"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TableLayoutPanelBase.AddRow(System.Int32,Telerik.WinControls.RadElement[])">
            <summary>
            Inserts a row before the specified one. The second parameter contains the 
            elements of the new row. The array must have the same dimension
            as the columns in the table. If this is not true, the insert operation fails.
            </summary>
            <param name="beforeRow"></param>
            <param name="elements"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TableLayoutPanelBase.DeleteColumns(System.Int32,System.Int32)">
            <summary>
            Removes columns. Bounds are inclusive.
            </summary>
            <param name="fromColumn"></param>
            <param name="numColumns"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TableLayoutPanelBase.DeleteRows(System.Int32,System.Int32)">
            <summary>
            Removes rows. Bounds are inclusive.
            </summary>
            <param name="fromRow"></param>
            <param name="numRows"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TableLayoutPanelBase.Clear">
            <summary>
            Clears the TableLayoutPanelBase.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TableLayoutPanelBase.PerformLayoutCore(Telerik.WinControls.RadElement)">
            <summary>
            Performs layout changes based on the element given as a paramater. 
            Sizes and places are determined by the concrete layout panel that is used. 
            Since all layout panels update their layout automatically through events, 
            this function is rarely used directly.
            </summary>
            <param name="affectedElement"></param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TableLayoutPanelBase.GetPreferredSizeCore(System.Drawing.Size)">
            <summary>
            Retrieves the preferred size of the layout panel. If the proposed size is 
            smaller than the minimal one, the minimal one is retrieved. Since all layout 
            panels update their layout automatically through events, this function is 
            rarely used directly.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Layouts.TableLayoutPanelBase.CellMouseMove">
            <summary>Fires when the mouse is moved.</summary>
        </member>
        <member name="E:Telerik.WinControls.Layouts.TableLayoutPanelBase.CellMouseDown">
            <summary>Fires when the mouse is down.</summary>
        </member>
        <member name="E:Telerik.WinControls.Layouts.TableLayoutPanelBase.CellMouseUp">
            <summary>Fires when the mouse is up.</summary>
        </member>
        <member name="E:Telerik.WinControls.Layouts.TableLayoutPanelBase.CellMouseEnter">
            <summary>Fires when the mouse enters the cell.</summary>
        </member>
        <member name="E:Telerik.WinControls.Layouts.TableLayoutPanelBase.CellMouseLeave">
            <summary>Fires when the mouse leaves the cell.</summary>
        </member>
        <member name="E:Telerik.WinControls.Layouts.TableLayoutPanelBase.StructureChanged">
            <summary>Fires when the structure is changed.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.TableLayoutPanelBase.Rows">
            <summary>Gets a value indicating the number of rows.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.TableLayoutPanelBase.Columns">
            <summary>Gets a value indicating the number of columns.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.TableLayoutPanelBase.GridThickness">
            <summary>Gets or sets the grid thickness.</summary>
        </member>
        <member name="P:Telerik.WinControls.Layouts.TableLayoutPanelBase.Item(System.Int32,System.Int32)">
            <summary>Gets a reference to the TableLayoutBase instance.</summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.CellMouseEventHandler">
            <summary>
             Represents the method that will handle the following events: 
             %CellMouseMove:CellMouseMove%, 
             %CellMouseDown:CellMouseDown%, %CellMouseUp:CellMouseUp, %CellMouseEnter:CellMouseEnter%, 
             and %CellMouseLeave:CellMouseLeave%.
             </summary>
            <param name="sender">
                Represents the event sender - an instance of the
                <see cref="T:Telerik.WinControls.Layouts.TableLayoutPanelBase">TableLayoutPanelBase</see> class.
            </param>
            <param name="e">
             Represents the event arguments for following events: 
             %CellMouseMove:CellMouseMove%, 
             %CellMouseDown:CellMouseDown%, %CellMouseUp:CellMouseUp, 
             %CellMouseEnter:CellMouseEnter%, and %CellMouseLeave:CellMouseLeave%.
            </param>
        </member>
        <member name="T:Telerik.WinControls.Layouts.StructureChangedEventHandler">
             <summary>
             Represents the method that will handle the StructureChanged event.
             </summary>
             <param name="sender">
             Initializes the event sender.    
             </param>
             <param name="e">
             Initializes the %event arguments:CellMouseEventArgs%. 
            </param>
        </member>
        <member name="T:Telerik.WinControls.Layouts.CellMouseEventArgs">
            <summary>Represents event arguments for the following events:
            %CellMouseMove:CellMouseMove%, %CellMouseDown:CellMouseDown%, 
            %CellMouseUp:CellMouseUp, %CellMouseEnter:CellMouseEnter%, 
            and %CellMouseLeave:CellMouseLeave%.</summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.CellMouseEventArgs.#ctor(System.Windows.Forms.MouseEventArgs,Telerik.WinControls.Layouts.CellLayoutPanel)">
             <summary>
             Initializes a new instance of the CellMouseEventArgs class.
             </summary>
             <param name="mouseArgs">
             Initializes the event arguments for the base MouseEvent.
             </param>
             <param name="cell">
             Initializes the cell where the event was fired.
            </param>
        </member>
        <member name="M:Telerik.WinControls.Layouts.CellMouseEventArgs.#ctor(Telerik.WinControls.Layouts.CellLayoutPanel)">
            <summary>
            Initializes a new instance of the CellMouseEventArgs class. 
            </summary>
            <param name="cell">
              Initializes the cell where the event was fired. 
            </param>
        </member>
        <member name="P:Telerik.WinControls.Layouts.CellMouseEventArgs.Cell">
            <summary>
            Gets the CellLayoutPanel where the event was fired.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.StructureChangedEventArgs">
            <summary>
                Represents event data for the
                <see cref="E:Telerik.WinControls.Layouts.TableLayoutPanelBase.StructureChanged">StructureChanged</see> event.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Layouts.TelerikLayoutEngine">
            <summary>
            Represents the Telerik layout engine. The telerik layout engine manages the system
            of layouts in telerik controls.  
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.#ctor(Telerik.WinControls.RadElement)">
            <summary>
            Initializes a new instance of the TelerikLayoutEngine class; 
            it is responsible fo managing layouts system.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.GetParentPadding">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.GetParentPadding" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.CheckSize(System.Drawing.Size,System.Drawing.Size,System.Drawing.Size)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.CheckSize(System.Drawing.Size)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.CheckSize(System.Drawing.Size)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.CheckSize(System.Drawing.Size)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.SetCoercedSize(System.Drawing.Size)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.SetCoercedSize(System.Drawing.Size)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.GetFaceRectangle">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.GetFaceRectangle" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.PerformLayout(Telerik.WinControls.RadElement,System.Boolean)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.PerformLayout(Telerik.WinControls.RadElement,System.Boolean)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.PerformLayoutCore(Telerik.WinControls.RadElement)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.PerformLayoutCore(Telerik.WinControls.RadElement)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.PerformParentLayout">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.PerformParentLayout" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.GetPreferredSize(System.Drawing.Size)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.GetPreferredSize(System.Drawing.Size)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.GetPreferredSizeCore(System.Drawing.Size)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.GetPreferredSizeCore(System.Drawing.Size)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.InvalidateLayout">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.InvalidateLayout" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.LayoutPropertyChanged(Telerik.WinControls.RadPropertyChangedEventArgs)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.LayoutPropertyChanged(Telerik.WinControls.RadPropertyChangedEventArgs)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.IsValidWrapElement">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.IsValidWrapElement" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.SetLayoutInvalidated(System.Boolean)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.SetLayoutInvalidated(System.Boolean)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.PerformRegisteredSuspendedLayouts">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.PerformRegisteredSuspendedLayouts" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.RegisterChildSuspendedLayout(Telerik.WinControls.RadElement,Telerik.WinControls.PerformLayoutType)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.RegisterChildSuspendedLayout(Telerik.WinControls.RadElement,Telerik.WinControls.PerformLayoutType)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.RegisterLayoutRunning">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.RegisterLayoutRunning" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.GetTransformationPoint">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.GetTransformationPoint" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.GetBorderOffset">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.GetBorderOffset" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.TransformByAlignment(System.Drawing.Size,System.Drawing.Rectangle)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.TransformByAlignment(System.Drawing.Size,System.Drawing.Rectangle)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.GetBorderSize">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.GetBorderSize" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.InvalidateCachedBorder">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.InvalidateCachedBorder" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Layouts.TelerikLayoutEngine.GetChildBorderSize">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.ILayoutEngine.GetChildBorderSize" filter=""/>
        </member>
        <member name="P:Telerik.WinControls.Layouts.TelerikLayoutEngine.AvailableSize">
            <commentsfrom cref="P:Telerik.WinControls.Layouts.ILayoutEngine.AvailableSize" filter=""/>
        </member>
        <member name="P:Telerik.WinControls.Layout.IntegralScrollWrapPanel.MaxColumns">
            <summary>
            Gets or sets the maximum number of columns to be shown in the in-ribbon portion of the gallery. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.EvaluationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.EvaluationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.EvaluationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Licensing.LicenseManager.LicenseKey">
            <summary>
            Gets or sets the license key used to license this product. 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.HookEventArgs">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.WindowsHook">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.WindowsHook.HookType">
            <summary>
            You can use hook types to monitor and change window messages.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.WindowsHook.HookType.WH_JOURNALRECORD">
            <summary>
            Use this hook type to control and record input events.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.WindowsHook.HookType.WH_JOURNALPLAYBACK">
            <summary>
            Use this hook type to insert messages in the windows system queue. 
            For example, you can play recorded mouse events. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.WindowsHook.HookType.WH_KEYBOARD">
            <summary>
            Use this hook type to monitor the keyboard events.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.WindowsHook.HookType.WH_GETMESSAGE">
            <summary>
            Use this hook type to get messages returned by the GetMessage and PeekMessage
            functions.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.WindowsHook.HookType.WH_CALLWNDPROC">
            <summary>
            Use this hook type to get the message passed to some of the windows 
            procedures before it's actually handled by the procedure.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.WindowsHook.HookType.WH_CBT">
            <summary>
            This hook type is used in CBT (computer base training) applications.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.WindowsHook.HookType.WH_SYSMSGFILTER">
            <summary>
            Use this hook type to monitor messages passed to menus, message box, etc and
            the activation of different window by a keyboard shortcut.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.WindowsHook.HookType.WH_MOUSE">
            <summary>
            Use this hook type to monitor mouse messages.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.WindowsHook.HookType.WH_HARDWARE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.WindowsHook.HookType.WH_DEBUG">
            <summary>
            Hook procedure that is invoked before any other hook.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.WindowsHook.HookType.WH_SHELL">
            <summary>
            Used in shell applications.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.WindowsHook.HookType.WH_FOREGROUNDIDLE">
            <summary>
            Invoked when the foreground thread is to become idle. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.WindowsHook.HookType.WH_CALLWNDPROCRET">
            <summary>
            Use this hook type to get the message passed to some of the windows 
            procedures after it is handled by the procedure.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.WindowsHook.HookType.WH_KEYBOARD_LL">
             <summary>
            Use this hook type to get keyboard events.
             </summary>
        </member>
        <member name="F:Telerik.WinControls.WindowsHook.HookType.WH_MOUSE_LL">
             <summary>
            Use this hook type to get mouse events.
             </summary>
        </member>
        <member name="T:Telerik.WinControls.FillRepository">
            <summary>
            This class supports the TPF internal infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Paint.IGraphics">
            <summary>
            	<para>Classes that implement IGraphics interface are capable of drawing on the
                computer screen. Classes that implement this interface can use different APIs to
                perform the actual drawing: GDI+, DirectX, etc.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.ChangeOpacity(System.Double)">
            <summary><para>Changes the opacity level of the current device context.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.RestoreOpacity">
            <summary>Restores the opacity of the current device context to the previous value.</summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.ChangeSmoothingMode(System.Drawing.Drawing2D.SmoothingMode)">
            <summary>
            Saves the current smothingMode, and changes the smoothingmode for the current device
            context.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.RestoreSmoothingMode">
            <summary>Restores the smoothing mode to the previous value.</summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>Draws a rectangle specified by a rectangle structure, and a color.</summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>
            Draws a rectangle specified by rectangle structure, color, PenAlignment, and pen
            width.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRectangle(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>
            Draws a rectangle specified by rectangle structure, color, PenAlignment, and pen
            width.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.ExcludeClip(System.Drawing.Rectangle)">
            <summary>
            	<para>Updates the clipping region of the current Graphics object to exclude 
                the area specified by a Rectangle structure.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,Telerik.WinControls.Layouts.IBoxElement,Telerik.WinControls.IBoxStyle)">
            <summary>
            Draws a rectangle specified by rectangle structure, color, penAlignment,
            IboxElement, and IBoxStyle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRectangle(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,Telerik.WinControls.Layouts.IBoxElement,Telerik.WinControls.IBoxStyle)">
            <summary>
            Draws a rectangle specified by rectangle structure, color, penAlignment,
            IboxElement, and IBoxStyle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLinearGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Single)">
            <summary>
            Draws a linear gradient rectangle specified by rectangle structure, color array,
            penalignment, penWidth and angle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLinearGradientRectangle(System.Drawing.RectangleF,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Single)">
            <summary>
            Draws a linear gradient rectangle specified by rectangle structure, color array,
            penalignment, penWidth and angle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLinearGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,Telerik.WinControls.Layouts.IBoxElement,Telerik.WinControls.IBoxStyle,System.Single)">
            <summary>
            Draws a linear gradient rectangle specified by rectangle structure, color array,
            penalignment, IBoxElement, IBoxStyle, and penWidth.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRadialGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>
            Draws a radial gradient rectangle specified by rectangle structure, color, color
            array for gradient effect, penalignment, and penWidth.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRadialGradientRectangle(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>
            Draws a radial gradient rectangle specified by rectangle structure, color, color
            array for gradient effect, penalignment, and penWidth.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawCustomGradientRectangle(System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>
            Draws a custom gradient rectangle specified by rectangle structure, graphicsPath,
            color, color array for the gradient effect, penalignment, and penwidth.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawCustomGradientRectangle(System.Drawing.RectangleF,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>
            Draws a custom gradient rectangle specified by rectangle structure, graphicsPath,
            color, color array for the gradient effect, penalignment, and penwidth.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawEllipse(System.Drawing.Rectangle,System.Drawing.Color)">
            <summary><para>Draws an ellipse defined by a bounding rectangle and color.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawString(System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Color,System.Drawing.ContentAlignment,System.Drawing.StringFormat,System.Windows.Forms.Orientation,System.Boolean)">
            <summary>
            	<para>Draws the specified text string with specified Rectangle, Font, Color,
                ContentAlignment, StringFormat, and Orientation.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawString(System.String,System.Drawing.RectangleF,System.Drawing.Font,System.Drawing.Color,System.Drawing.ContentAlignment,System.Drawing.StringFormat,Telerik.WinControls.Paint.ShadowSettings,System.Drawing.Text.TextRenderingHint,System.Windows.Forms.Orientation,System.Boolean)">
            <summary>
            	<para>Draws the specified text string with specified Rectangle, Font, Color,
                ContentAlignment, StringFormat, and Orientation.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawString(System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Color,System.Drawing.ContentAlignment,System.Drawing.StringFormat,Telerik.WinControls.Paint.ShadowSettings,System.Drawing.Text.TextRenderingHint,System.Windows.Forms.Orientation,System.Boolean)">
            <summary>
            	<para>Draws the specified text string with specified Rectangle, Font, Color,
                ContentAlignment, StringFormat, ShadowSettings, TextRenderingHint, and
                Orientation.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawImage(System.Drawing.Rectangle,System.Drawing.Image,System.Drawing.ContentAlignment,System.Boolean)">
            <summary>
            Draws the specified Image object with the specified Rectangle, Image,
            ContentAlignment, and disable flag.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawImage(System.Drawing.Point,System.Drawing.Image,System.Boolean)">
            <summary>
            	<para>Draws the specified Image object with the specified Point, Image, and disable
                flag.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawBitmap(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Draws a bitmap image specified by image object, and position from the left-upper
            corner of the current device context.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawBitmap(System.Drawing.Image,System.Int32,System.Int32,System.Double)">
            <summary>
            Draws a bitmap image specified by image object, and position from the left-upper
            corner of the current device context and specified opacity.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawBitmap(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a bitmap image specified by image object, position from the left-upper
            corner of the current device context and specified size.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawBitmap(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Draws a bitmap image specified by image object, position from the left-upper
            corner of the current device context, opacity and specified size.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>Draws a path specified by GraphicsPath, color, penalignment, and penwidth.</summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLinearGradientPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Single)">
            <summary>
            Draws a linear gradient path specified by GraphicsPath, bounding Rectangle, color
            gradient array, penalignment, and penwidth, and angle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLine(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a line specified by color, initial x point, initial y point, final x, and
            final y point.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLine(System.Drawing.Color,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line specified by color, initial x point, initial y point, final x, and
            final y point.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawLine(System.Drawing.Color,System.Drawing.Drawing2D.DashStyle,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a line specified by color, DashStyle, initial x point, initial y point, final x,
            and final y point.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRadialGradientPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>
            Draws a redial gradient path specified by Graphicspath, bounding rectangle, color,
            color gradient array, penalignment, and penwidth.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawCustomGradientPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <summary>
            Draws a custom gradient path specified by GraphicsPath, GraphicsPath for the
            gradient, color, gradient color array, penalignment, and penwidth.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.CreateBitmapMask(System.Drawing.Color,System.Drawing.Bitmap)">
            <summary>Creates a mask specified by color and bitmap.</summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillRectangle(System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Fills the interior of a rectangle specified by the
            borderRectangle and using for color the second argument.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,Telerik.WinControls.GradientStyles,System.Single)">
            <summary>
            Fills gradient rectangle specified by rectangle structure, color, color, color,
            color, GradientStyles, and angle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color[],System.Single[],Telerik.WinControls.GradientStyles,System.Single,System.Single,System.Single)">
            <summary>
            Fills the gradient rectangle specified by rectangle structure, color gradient array,
            float offset array, GradientStyles, angle, gradientPercentage, and
            gradientPercentage2.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)">
            <summary>
            Fills the gradient rectangle specified by rectangle structure, color gradient array,
            float offset array, GradientStyles, angle, gradientPercentage, and
            gradientPercentage2.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillGlassRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single)">
            <summary>
            Fills the glass gradient rectangle specified by rectangle structure, color, color,
            color, color, and gradient percentage.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillOfficeGlassRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single,System.Boolean)">
            <summary>
            Fills the office glass gradient rectangle specified by rectangle structure, color,
            color, color, color, and gradientPercentage and gradientPercentage2.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillVistaRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single)">
            <summary>
            Fills the vista gradient rectangle specified by rectangle structure, color, color,
            color, color, gradient percentage, and gradientPercentage2.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillGellRectangle(System.Drawing.Rectangle,System.Drawing.Color[],System.Single,System.Single)">
            <summary>
            Fills the gel gradient rectangle specified by rectangle structure, color, color, and
            gradientPercentage.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillPolygon(System.Drawing.Color,System.Drawing.Point[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by
               <a href="frlrfsystemdrawingpointclasstopic.asp">Point</a> structures and
               color.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillPolygon(System.Drawing.Color,System.Drawing.PointF[])">
            <summary>
            Fills the interior of a polygon defined by color and an array of points specified
            by <a href="frlrfsystemdrawingpointclasstopic.asp">Point</a> structures.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
            <summary>
            Fills the interior of a polygon defined by brush and an array of points specified
            by <a href="frlrfsystemdrawingpointclasstopic.asp">Point</a> structures.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.DrawRoundRect(System.Drawing.Rectangle,System.Drawing.Color,System.Single,System.Int32)">
            <summary>
            Draws a round rectangle specified by Rectangle structure, color, float borderWidth,
            and radius in pixels.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.TranslateTransform(System.Int32,System.Int32)">
            <summary>
            	<para>Translates the local geometric transformation of this TextureBrush object by
                the specified dimensions. This method prepends the translation to the
                transformation.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.TranslateTransform(System.Single,System.Single)">
            <summary>
            Translates the local geometric transformation of this TextureBrush object by the
            specified dimensions. This method prepends the translation to the
            transformation.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.RotateTransform(System.Single)">
            <summary>
            Rotates the local geometric transformation by the specified angle. This method
            prepends the rotation to the transformation.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.IGraphics.ResetTransform">
            <summary>
            	<span id="ctl00_ContentPlaceHolder1_src1_resRC_ctl01_LabelAbstract">Resets the
            world transformation matrix of this Graphics to the identity matrix.</span>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Paint.IGraphics.IsNonClient">
            <summary>Gets whether the graphics paints on the whole window area (true) or on the client area only (false).</summary>
        </member>
        <member name="P:Telerik.WinControls.Paint.IGraphics.ClipRectangle">
            <summary>Gets the clipping rectangle; the rectangle which needs redrawing.</summary>
        </member>
        <member name="P:Telerik.WinControls.Paint.IGraphics.UnderlayGraphics">
            <summary>Gets the current context device - graphics object.</summary>
        </member>
        <member name="P:Telerik.WinControls.Paint.IGraphics.Opacity">
            <summary>Gets or sets the opacity level of the device context.</summary>
        </member>
        <member name="T:Telerik.WinControls.Paint.RadGdiGraphics">
            <summary>Implements functionality for drawing GDI+ graphics.</summary>
        </member>
        <member name="T:Telerik.WinControls.Paint.RadGraphics">
            <summary>
                Represents a base class for the <see cref="T:Telerik.WinControls.Paint.RadGdiGraphics">RadGDIGraphics</see>
                class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGraphics.#ctor">
            <summary>
            Initializes a new instance of the RadGraphics class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.#ctor(System.Drawing.Graphics)">
            <summary>
            Initializes a new instance of RadGdiGraphics class using GDI graphics context. 
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.#ctor(System.Drawing.Graphics,System.Boolean)">
            <summary>
            Initializes a new instance of RadGdiGraphics class using GDI graphics context. 
            </summary>
            <param name="graphics"></param>
            <param name="isNonClient"> true for non-client graphics (like a graphics that is taken from WindowDC)</param>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.ChangeOpacity(System.Double)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.ChangeOpacity(System.Double)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.RestoreOpacity">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.RestoreOpacity" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.ChangeSmoothingMode(System.Drawing.Drawing2D.SmoothingMode)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.ChangeSmoothingMode(System.Drawing.Drawing2D.SmoothingMode)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.ExcludeClip(System.Drawing.Rectangle)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.ExcludeClip(System.Drawing.Rectangle)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.RestoreSmoothingMode">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.RestoreSmoothingMode" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.RotateTransform(System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.RotateTransform(System.Single)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.TranslateTransform(System.Single,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.TranslateTransform(System.Int32,System.Int32)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.TranslateTransform(System.Int32,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.TranslateTransform(System.Int32,System.Int32)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.ResetTransform">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.ResetTransform" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawEllipse(System.Drawing.Rectangle,System.Drawing.Color)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawEllipse(System.Drawing.Rectangle,System.Drawing.Color)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawLine(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawLine(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawLine(System.Drawing.Color,System.Single,System.Single,System.Single,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawLine(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawLine(System.Drawing.Color,System.Drawing.Drawing2D.DashStyle,System.Int32,System.Int32,System.Int32,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawLine(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawRectangle(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,Telerik.WinControls.Layouts.IBoxElement,Telerik.WinControls.IBoxStyle)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawRectangle(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,Telerik.WinControls.Layouts.IBoxElement,Telerik.WinControls.IBoxStyle)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawLinearGradientRectangle(System.Drawing.RectangleF,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawLinearGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Single)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawLinearGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,Telerik.WinControls.Layouts.IBoxElement,Telerik.WinControls.IBoxStyle,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawLinearGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Single)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawRadialGradientRectangle(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawRadialGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawCustomGradientRectangle(System.Drawing.RectangleF,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawCustomGradientRectangle(System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawCustomGradientRectangle(System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawCustomGradientRectangle(System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawRectangle(System.Drawing.RectangleF,Telerik.WinControls.Layouts.IBoxElement,Telerik.WinControls.IBoxStyle)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.FillRectangle(System.Drawing.Rectangle,System.Drawing.Color)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.FillRectangle(System.Drawing.Rectangle,System.Drawing.Color)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.FillRectangle(System.Drawing.RectangleF,System.Drawing.Color)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.FillRectangle(System.Drawing.Rectangle,System.Drawing.Color)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.FillGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,Telerik.WinControls.GradientStyles,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.FillGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,Telerik.WinControls.GradientStyles,System.Single)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.FillGradientRectangle(System.Drawing.RectangleF,System.Drawing.Color[],System.Single[],Telerik.WinControls.GradientStyles,System.Single,System.Single,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.FillGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,Telerik.WinControls.GradientStyles,System.Single)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.FillGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.FillGradientRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,Telerik.WinControls.GradientStyles,System.Single)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.FillGlassRectangleNew(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.FillGlassRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.FillVistaRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.FillVistaRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.FillOfficeGlassRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single,System.Boolean)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.FillOfficeGlassRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single,System.Boolean)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.FillGellRectangle(System.Drawing.Rectangle,System.Drawing.Color[],System.Single,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.FillGellRectangle(System.Drawing.Rectangle,System.Drawing.Color[],System.Single,System.Single)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.FillPolygon(System.Drawing.Color,System.Drawing.Point[])">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.FillPolygon(System.Drawing.Color,System.Drawing.Point[])" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.FillPolygon(System.Drawing.Color,System.Drawing.Point[])" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.FillPolygon(System.Drawing.Color,System.Drawing.PointF[])">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.FillPolygon(System.Drawing.Color,System.Drawing.Point[])" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawRoundRect(System.Drawing.Rectangle,System.Drawing.Color,System.Single,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawRoundRect(System.Drawing.Rectangle,System.Drawing.Color,System.Single,System.Int32)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Drawing2D.PenAlignment,System.Single)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.NormalizeRect(System.Drawing.RectangleF)">
            <commentsfrom cref="!:IGraphics.NormalizeRect" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawLinearGradientPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawLinearGradientPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single,System.Single)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawRadialGradientPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawRadialGradientPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawCustomGradientPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawCustomGradientPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Color[],System.Drawing.Drawing2D.PenAlignment,System.Single)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.ImageFromText(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color)">
            <commentsfrom cref="!:IGraphics.ImageFromText" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawString(System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Color,System.Drawing.ContentAlignment,System.Drawing.StringFormat,System.Windows.Forms.Orientation,System.Boolean)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawString(System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Color,System.Drawing.ContentAlignment,System.Drawing.StringFormat,System.Windows.Forms.Orientation,System.Boolean)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawString(System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Color,System.Drawing.ContentAlignment,System.Drawing.StringFormat,Telerik.WinControls.Paint.ShadowSettings,System.Drawing.Text.TextRenderingHint,System.Windows.Forms.Orientation,System.Boolean)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawString(System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Color,System.Drawing.ContentAlignment,System.Drawing.StringFormat,System.Windows.Forms.Orientation,System.Boolean)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawImage(System.Drawing.Rectangle,System.Drawing.Image,System.Drawing.ContentAlignment,System.Boolean)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawImage(System.Drawing.Rectangle,System.Drawing.Image,System.Drawing.ContentAlignment,System.Boolean)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawImage(System.Drawing.Point,System.Drawing.Image,System.Boolean)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawImage(System.Drawing.Rectangle,System.Drawing.Image,System.Drawing.ContentAlignment,System.Boolean)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawBitmap(System.Drawing.Image,System.Int32,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawBitmap(System.Drawing.Image,System.Int32,System.Int32)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawBitmap(System.Drawing.Image,System.Int32,System.Int32,System.Double)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawBitmap(System.Drawing.Image,System.Int32,System.Int32)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawBitmap(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawBitmap(System.Drawing.Image,System.Int32,System.Int32)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.DrawBitmap(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.DrawBitmap(System.Drawing.Image,System.Int32,System.Int32)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.CreateBitmapMask(System.Drawing.Color,System.Drawing.Bitmap)">
            <commentsfrom cref="M:Telerik.WinControls.Paint.IGraphics.CreateBitmapMask(System.Drawing.Color,System.Drawing.Bitmap)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.StringFormat)">
            <commentsfrom cref="!:IGraphics.MeasureString" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
            <commentsfrom cref="!:IGraphics.MeasureString" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.GetRoundedRect(System.Drawing.RectangleF,System.Single)">
            <commentsfrom cref="!:IGraphics.GetRoundedRect" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.Destroy">
            <summary>
            Disposes the object. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.RadGdiGraphics.Dispose">
            <summary>Disposes the GDI+ graphics context.</summary>
        </member>
        <member name="P:Telerik.WinControls.Paint.RadGdiGraphics.IsNonClient">
            <commentsfrom cref="P:Telerik.WinControls.Paint.IGraphics.IsNonClient" filter=""/>
        </member>
        <member name="P:Telerik.WinControls.Paint.RadGdiGraphics.ClipRectangle">
            <commentsfrom cref="P:Telerik.WinControls.Paint.IGraphics.ClipRectangle" filter=""/>
        </member>
        <member name="P:Telerik.WinControls.Paint.RadGdiGraphics.UnderlayGraphics">
            <commentsfrom cref="P:Telerik.WinControls.Paint.IGraphics.UnderlayGraphics" filter=""/>
        </member>
        <member name="P:Telerik.WinControls.Paint.RadGdiGraphics.Opacity">
            <commentsfrom cref="P:Telerik.WinControls.Paint.IGraphics.Opacity" filter=""/>
        </member>
        <member name="P:Telerik.WinControls.Paint.RadGdiGraphics.Graphics">
            <summary>
            Gets or sets current GDI+ graphics context.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Paint.ShadowSettings">
            <summary>Represents shadow settings.</summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.ShadowSettings.#ctor(System.Drawing.Point,System.Int32,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the ShadowSettings class using point, thickness, and
            shadow color.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.ShadowSettings.#ctor(System.Drawing.Point,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the ShadowSettings class using point and
            shadow color.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Paint.ShadowSettings.#ctor">
            <summary>Initializes a new instance of the ShadowSettings class.</summary>
        </member>
        <member name="P:Telerik.WinControls.Paint.ShadowSettings.Depth">
            <summary>Gets or sets the shadow depth.</summary>
        </member>
        <member name="P:Telerik.WinControls.Paint.ShadowSettings.Thickness">
            <summary>Gets or sets the shadow thickness.</summary>
        </member>
        <member name="P:Telerik.WinControls.Paint.ShadowSettings.ShadowColor">
            <summary>Gets or sets the shadow color.</summary>
        </member>
        <member name="F:Telerik.WinControls.Commands.CommandComponentBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandComponentBase.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandComponentBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.Commands.CommandComponentBase.HandleExecute">
            <summary>
            Represents the method that will handle HandleExecute, and Execucted events.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Commands.CommandEventHandler">
            <summary>
            Represents the method that will handle HandleExecute, and Executed events.
            </summary>
            <param name="sender">Initializes the event sender.</param>
            <param name="e">Initializes the event argument data.</param>
        </member>
        <member name="T:Telerik.WinControls.Commands.ICommandSource">
            <exclude/>
        </member>
        <member name="F:Telerik.WinControls.Commands.CommandListComponent.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandListComponent.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.Commands.CommandListComponent.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Patterns.Memento.IMemento">
            <summary>
            <exclude/>
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Patterns.Memento.IMementoManager">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Patterns.Memento.IMementoSource">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Patterns.Memento.IStateBuffer">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Patterns.Memento.Memento">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Patterns.Memento.StateBase">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Patterns.Memento.StateBufferBase">
            <exclude/>
            <summary>
            A class that manages an array of IMemento objects, implementing
            undo/redo capabilities for the IMemento originator class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Patterns.Memento.StateBufferBase.#ctor(Telerik.WinControls.Patterns.Memento.IMementoSource)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Patterns.Memento.StateBufferBase.Do">
            <summary>
            Save the current state at the index position.  Anything past the index position is lost.  This means that the "redo" action is no longer possible.
            Scenario--The user does 10 things.  The user undo's 5 of them, then does something new.  He can only undo now, he cannot "redo".  If he does one 
            undo, then he can do one "redo".
            </summary>
            <param name="mem">The memento holding the current state.</param>
        </member>
        <member name="M:Telerik.WinControls.Patterns.Memento.StateBufferBase.Undo">
            <summary>
            Returns the current memento.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Patterns.Memento.StateBufferBase.Redo">
            <summary>
            Returns the next memento.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Patterns.Memento.StateBufferBase.PushCurrentState">
            <summary>
            Saves the current state.  This does not adjust the current undo indexer.
            Use this method only when performing an Undo and AtTop==true, so that 
            the current state, before the Undo, can be saved, allowing a Redo to 
            be applied.
            </summary>
            <param name="mem"></param>
        </member>
        <member name="M:Telerik.WinControls.Patterns.Memento.StateBufferBase.Reset">
            <summary>
            Clears all state objects, handled by the class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Patterns.Memento.StateBufferBase.CanUndo">
            <summary>
            Returns true if there are items in the undo buffer.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Patterns.Memento.StateBufferBase.CanRedo">
            <summary>
            Returns true if the current position in the undo buffer will
            allow for redo's.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Patterns.Memento.StateBufferBase.IsTop">
            <summary>
            Returns true if at the top of the undo buffer.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Patterns.Memento.StateException">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Patterns.Memento.StateManagerBase">
            <summary>
            A class that manages an array of IMemento objects, implementing
            undo/redo capabilities for the IMemento originator class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Patterns.Memento.StateManagerBase.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Patterns.Memento.StateManagerBase.Clear">
            <summary>
            Removes all state information.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Patterns.Memento.StateManagerBase.Count">
            <summary>
            Returns the count of undo items in the buffer.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.FormattedText.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.FormattedText.#ctor(Telerik.WinControls.TextPrimitiveUtils.FormattedText)">
            <summary>
            Copy constructor
            </summary>
            <param name="originalFormattedText"></param>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.HtmlTag">
            <summary>
            Get or sets HTML tag of the current text block
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.FontSize">
            <summary>
            Get or sets FontSize  the current text block
            Note: recreate the font
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.BlockSize">
            <summary>
            Get or sets the Size the current text block
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.ContentAlignment">
            <summary>
            curent block content alignment
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TextPrimitiveUtils.FormattedText.Text">
            <summary>
            Get or set the text
            </summary>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.FormattedTextBlock.ArrangeLines(System.Boolean,System.Drawing.SizeF,System.Boolean,System.Drawing.StringFormat,System.Windows.Forms.TextFormatFlags)">
            <summary>
            Move text blocks to next line if there is not avaible space for the current line
            </summary>
            <param name="TextWrap"></param>
            <param name="proposedSize"></param>
            <param name="useCompatibleTextRendering"></param>
            <param name="sf"></param>
            <param name="textFormatFlags"></param>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.FormattedTextBlock.GetTextSize(System.Drawing.SizeF,System.Boolean,System.Drawing.StringFormat,System.Windows.Forms.TextFormatFlags,System.Boolean)">
            <summary>
            Calculate Size of the whole FormattedTextBlock
            </summary>
            <param name="proposedSize"></param>
            <param name="useCompatibleTextRendering"></param>
            <param name="sf"></param>
            <param name="textFormatFlags"></param>
            <param name="wrapText"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.FormattedTextBlock.GetTextLineSize(System.Boolean,System.Drawing.StringFormat,System.Windows.Forms.TextFormatFlags,Telerik.WinControls.TextPrimitiveUtils.TextLine)">
            <summary>
            Calculate text size of the Single Text Line
            </summary>
            <param name="useCompatibleTextRendering"></param>
            <param name="sf"></param>
            <param name="textFormatFlags"></param>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.FormattedTextBlock.PaintFormatTextBlock(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF,System.Drawing.RectangleF,System.Boolean,System.Drawing.StringFormat,System.Windows.Forms.TextFormatFlags,Telerik.WinControls.Paint.ShadowSettings,System.Drawing.Text.TextRenderingHint,System.Boolean)">
            <summary>
            Draw whole FormattedTextBlock
            </summary>
            <param name="graphics"></param>
            <param name="angle"></param>
            <param name="scale"></param>
            <param name="rect"></param>
            <param name="useCompatibleTextRendering"></param>
            <param name="format"></param>
            <param name="flags"></param>
            <param name="shadow"></param>
            <param name="textRenderingHint"></param>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.Parse(System.String,System.Drawing.Color,System.String,System.Single,System.Drawing.ContentAlignment)">
            <summary>
            Main function for parsing process
            </summary>
            <param name="text">text to parse</param>
            <param name="baseForeColor">base Font color</param>
            <param name="baseFont">base font</param>
            <param name="fontSize">base font size</param>
            <param name="aligment">base textaligment</param>
            <returns>Formated text block that contains the whole structure</returns>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.ProcessToken(Telerik.WinControls.TextPrimitiveUtils.FormattedText@,Telerik.WinControls.UI.StringTokenizer,System.Boolean)">
            <summary>
            process single token from Html string
            </summary>
            <param name="prevItem"></param>
            <param name="tokenizer"></param>
            <param name="hasOpenTag"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.ApplyHTMLSettingsFromTag(Telerik.WinControls.TextPrimitiveUtils.FormattedText,Telerik.WinControls.TextPrimitiveUtils.FormattedText,System.String)">
            <summary>
            Parse single HTML tag and apply settings
            </summary>
            <param name="currentFormattedText"></param>
            <param name="prevText"></param>
            <param name="htmlTag"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.ProcessFontStyle(System.Drawing.FontStyle,System.Drawing.FontStyle,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.ParseColor(System.String,System.Drawing.Color)" -->
        <!-- Badly formed XML comment ignored for member "M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.ParseSize(System.String,System.Single)" -->
        <!-- Badly formed XML comment ignored for member "M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.ParseFont(System.String)" -->
        <member name="M:Telerik.WinControls.TextPrimitiveUtils.TinyHTMLParsers.IsHTMLMode(System.String)">
            <summary>
            check is the Text contains html command
            </summary>
            <param name="text">text to be cheked</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.UI.StringTokenizer">
            <summary>
            A String Tokenizer that accepts Strings as source and delimiter. Only 1 delimiter is supported (either String or char[]).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.StringTokenizer.#ctor(System.String,System.String)">
            <summary>
            Constructor for StringTokenizer Class.
            </summary>
            <param name="source">The Source String.</param>
            <param name="delimiter">The Delimiter String. If a 0 length delimiter is given, " " (space) is used by default.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.StringTokenizer.#ctor(System.String,System.Char[])">
            <summary>
            Constructor for StringTokenizer Class.
            </summary>
            <param name="source">The Source String.</param>
            <param name="delimiter">The Delimiter String as a char[].  Note that this is converted into a single String and
            expects Unicode encoded chars.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.StringTokenizer.#ctor(System.String)">
            <summary>
            Constructor for StringTokenizer Class.  The default delimiter of " " (space) is used.
            </summary>
            <param name="source">The Source String.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.StringTokenizer.#ctor">
            <summary>
            Empty Constructor.  Will create an empty StringTokenizer with no source, no delimiter, and no tokens.
            If you want to use this StringTokenizer you will have to call the NewSource(string s) method.  You may
            optionally call the NewDelim(string d) or NewDelim(char[] d) methods if you don't with to use the default
            delimiter of " " (space).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.StringTokenizer.NewSource(System.String)">
            <summary>
            Method to add or change this Instance's Source string.  The delimiter will
            remain the same (either default of " " (space) or whatever you constructed 
            this StringTokenizer with or added with NewDelim(string d) or NewDelim(char[] d) ).
            </summary>
            <param name="newSrc">The new Source String.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.StringTokenizer.NewDelim(System.String)">
            <summary>
            Method to add or change this Instance's Delimiter string.  The source string
            will remain the same (either empty if you used Empty Constructor, or the 
            previous value of source from the call to a parameterized constructor or
            NewSource(string s)).
            </summary>
            <param name="newDel">The new Delimiter String.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.StringTokenizer.NewDelim(System.Char[])">
            <summary>
            Method to add or change this Instance's Delimiter string.  The source string
            will remain the same (either empty if you used Empty Constructor, or the 
            previous value of source from the call to a parameterized constructor or
            NewSource(string s)).
            </summary>
            <param name="newDel">The new Delimiter as a char[].  Note that this is converted into a single String and
            expects Unicode encoded chars.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.StringTokenizer.CountTokens">
            <summary>
            Method to get the number of tokens in this StringTokenizer.
            </summary>
            <returns>The number of Tokens in the internal ArrayList.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.StringTokenizer.HasMoreTokens">
            <summary>
            Method to probe for more tokens.
            </summary>
            <returns>true if there are more tokens; false otherwise.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.StringTokenizer.NextToken">
            <summary>
            Method to get the next (string)token of this StringTokenizer.
            </summary>
            <returns>A string representing the next token; null if no tokens or no more tokens.</returns>
        </member>
        <member name="P:Telerik.WinControls.UI.StringTokenizer.Source">
            <summary>
            Gets the Source string of this Stringtokenizer.
            </summary>
            <returns>A string representing the current Source.</returns>
        </member>
        <member name="P:Telerik.WinControls.UI.StringTokenizer.Delim">
            <summary>
            Gets the Delimiter string of this StringTokenizer.
            </summary>
            <returns>A string representing the current Delimiter.</returns>
        </member>
        <member name="T:Telerik.WinControls.Primitives.ArrowPrimitive">
             <summary>Represents an arrow that is drawn on the screen.
             <para>
             Extends %BasePrimitive:Telerik.WinControls.Primitives.BasePrimitive%. 
             </para> 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.BasePrimitive">
            <summary>
            Represents a base type for all primitives. Defines PaintPrimitive method that is
            overridden in all derived classes.
            <para>Primitives are these RadElement(s) that are actually drawn on the 
            screen.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.IPrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Draws the primitive on the screen.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.IPrimitive.ShouldPaint">
            <summary><para>Gets or sets a value indicating whether the primitive should 
            be painted.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.BasePrimitive.#ctor">
            <summary><para>Initializes a new instance of the BasePrimitive class.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.BasePrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Virtual function that draws the primitive on the screen.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BasePrimitive.IsEmpty">
            <summary><para>Gets a value indicating whether the primitive has content.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.ArrowPrimitive.#cctor">
            <summary><para>Initializes a new instance of the ArrowPrimitive class.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.ArrowPrimitive.#ctor(Telerik.WinControls.ArrowDirection)">
            <summary>
            	<para>Initializes a new instance of the ArrowPrimitive class using the
                ArrowDirection enumeration. Possible directions are up, bottom, left, and
                right.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.ArrowPrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Draws the primitive on the screen.</summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.ArrowPrimitive.GetPreferredSizeCore(System.Drawing.Size)">
            <summary>
            	<para>Retrieves the size of a rectangular area into which a primitive can be
                fitted. If proposed size is too small, the minimal size is retrieved.</para>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ArrowPrimitive.StretchHorizontally">
            <commentsfrom cref="P:Telerik.WinControls.RadElement.StretchHorizontally" filter="##SUMMARY,##OVERLOADS,##REMARKS,##VALUE,##NOTES"/>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ArrowPrimitive.StretchVertically">
            <commentsfrom cref="P:Telerik.WinControls.RadElement.StretchVertically" filter="##SUMMARY,##OVERLOADS,##REMARKS,##VALUE,##NOTES"/>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ArrowPrimitive.Direction">
            <summary>
            Gets or sets the arrow direction. The possible values are contained in the
            ArrowDirection enumeration: up, left, right, and bottom.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.BorderPrimitive">
            <summary><para>Represents a border that is drawn on the screen.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.BorderPrimitive.#cctor">
            <summary>Initializes a new instance of the BorderPrimitive class.</summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.BorderPrimitive.#ctor">
            <summary>
            Initializes a new instance of the BorderPrimitive class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.BorderPrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>
            Virtual method that paints the primitive on the screen. It may be overriden by
            the derived types.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.BoxStyle">
            <summary>
            	<para class="MsoNormal" style="MARGIN: 0in 0in 0pt">
            		<span style="FONT-SIZE: 8pt; COLOR: black; FONT-FAMILY: Verdana">Gets or sets the
                Border style. The two possible values are SingleBorder and FourBorder. In the
                single border case, all four sides share the same appearance although the entire
                border may have gradient. In four border case, each of the four sides may differ in
                appearance. For example, the left border may have different color, shadowcolor, and
                width from the rest. When SingleBorder is chosen, you should use the general
                properties such as width and color, and respectively, when the FourBorder style is
                chosen you should use properties prefixed with the corresponding side, for example,
                LeftColor, LeftWidth for the left side.</span></para>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.Width">
            <summary>
            Gets or sets float value indicating the width of the border
            measured in pixels. It is only used when <em>SingleBorder</em> style is chosen for the
            <em>BoxStyle</em> property which effectively means that all four borders share the same
            width.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.LeftWidth">
            <summary>
            Gets or sets a float value width of the left border. This property
            has effect only if <em>FourBorders</em> style is used in <em>BoxStyle</em> property and
            affects only the width of the left border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.TopWidth">
            <summary>
            Gets or sets a float value width of the top border . This property
            has effect only if <em>FourBorders</em> style is used in <em>BoxStyle</em> property,
            and affects only the top border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.RightWidth">
            <summary>
            Gets or sets a float value width of the right border. This
            property has effect only if <em>FourBorders</em> style is used in <em>BoxStyle</em>
            property, and affects only the right border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.BottomWidth">
            <summary>
            Gets or sets a float value width. This property has effect only if
            <em>FourBorders</em> style is used in <em>BoxStyle</em> property, and affects only the
            bottom border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.LeftColor">
            <summary>
            Gets and sets the left border color. This applies only if FourBorders is chosen
            for BoxStyle property, and affects only the left border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.TopColor">
            <summary>
            Gets and sets the top border color. This applies only if FourBorders is chosen
            for BoxStyle property, and affects only the top border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.RightColor">
            <summary>
            Gets and sets the right border color. This applies only if FourBorders is chosen
            for BoxStyle property, and affects only the right border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.BottomColor">
            <summary>
            Gets and sets the bottom border color. This applies only if FourBorders is chosen
            for BoxStyle property, and affects only the bottom border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.LeftShadowColor">
            <summary>
            Gets and sets the left shadow color. This option applies only if
            fourBorders is chosen, and affects only the left border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.TopShadowColor">
            <summary>
            Gets and sets the top shadow color. This option applies only if
            fourBorders is chosen, and affects only the top border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.RightShadowColor">
            <summary>
            Gets and sets the right shadow color. This option applies only if
            fourBorders is chosen, and affects only the right border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.BottomShadowColor">
            <summary>
            Gets and sets the bottom shadow color. This option applies only if
            fourBorders is chosen, and affects only the bottom border.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.Offset">
            <summary>
            Gets the border offset of the primitive. It effectively retrieves the upper-left
            corner inside the primitive border. It takes into consideration the BoxStyle property
            and possible different widths of the left and the upper side.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.BorderSize">
            <summary>Retrieves size of the combined bottom, right, upper, and left border.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.HorizontalWidth">
            <summary>Gets the horizontal width of the combined left and right border.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.VerticalWidth">
            <summary>Gets the vertical width of the combined bottom and upper border.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.GradientAngle">
            <summary>Gets or sets gradient angle for linear gradient measured in degrees.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.GradientStyle">
            <summary>
            Gets or sets gradient style. Possible styles are solid, linear, radial, glass,
            office glass, gel, and vista.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.ForeColor2">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.ForeColor3">
            <summary>
            Gets or sets color used by radial, glass, office glass, and vista gradients. This
            is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.ForeColor4">
            <summary>
            Gets or sets color used by radial, glass, office glass, and vista gradients. This
            is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.InnerColor">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.InnerColor2">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.InnerColor3">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.InnerColor4">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.BorderPrimitive.PaintUsingParentShape">
            <summary>
            Specifies whether the BorderPrimitive should draw the GraphicsPath defined by its Parent.Shape. If false, it will draw its bounding rectangle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.BorderPrimitiveImpl.PaintBorder(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>
            Virtual method that paints the primitive on the screen. It may be overriden by
            the derived types.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.BorderPrimitiveImpl.PaintBorder(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF,System.Drawing.RectangleF)">
            <summary>
            Virtual method that paints the primitive on the screen. It may be overriden by
            the derived types.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.CheckPrimitive">
            <summary><para>Represents a check box primitive that is drawn on the screen.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.CheckPrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Draws the primitive on the screen.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.CheckPrimitive.CheckPrimitiveStyle">
            <summary>Gets or sets a value indicating the style of the check box primitive.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.CheckPrimitive.MinimalSize">
            <summary>
            Gets the minimal size of the check primitive. Its default value is Size(13,
            13).
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.FillPrimitive">
            <summary>Represents a filling that is drawn on the screen.</summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.FillPrimitive.#ctor">
            <summary><para>Initializes a new instance of the FillPrimitive class.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.FillPrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Draws the primitive on the screen.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.BackColor2">
            <summary>
            Gets or sets background color. This property is applicable to radial, glass,
            office glass, gel, and vista gradients.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.BackColor3">
            <summary>
            Gets or sets background color. This property is applicable to radial, glass,
            office glass, and vista gradients.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.BackColor4">
            <summary>
            Gets or sets background color. This property is applicable to radial, glass,
            office glass, and vista gradients.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.NumberOfColors">
            <summary>Gets or sets the number of used colors in the gradient effect.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.GradientStyle">
            <summary>
            Gets and sets the gradient style. The possible values are defined in the gradient
            style enumeration: solid, linear, radial, glass, office glass, gel, and vista.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.GradientAngle">
            <summary><para>Gets or sets gradient angle for linear gradient.</para></summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.GradientPercentage">
            <summary>
            Gets or sets GradientPercentage for linear, glass, office glass, gel, vista, and
            radial gradients.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.GradientPercentage2">
            <summary>
            Gets or sets GradientPercentage for office glass, vista, and radial
            gradients.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FillPrimitive.PaintUsingParentShape">
            <summary>
            Specifies whether the FillPrimitive should fill the GraphicsPath defined by its Parent.Shape. If false, it will fill its bounding rectangle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.ForeColor2">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.ForeColor3">
            <summary>
            Gets or sets color used by radial, glass, office glass, and vista gradients. This
            is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.ForeColor4">
            <summary>
            Gets or sets color used by radial, glass, office glass, and vista gradients. This
            is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.InnerColor">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.InnerColor2">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.InnerColor3">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.InnerColor4">
            <summary>
            Gets or sets color used by radial, glass, office glass, gel, and vista gradients.
            This is one of the colors that are used in the gradient effect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.GradientStyle">
            <summary>
            Gets or sets gradient style. Possible styles are solid, linear, radial, glass,
            office glass, gel, and vista.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.FocusPrimitive.GradientAngle">
            <summary>Gets or sets gradient angle for linear gradient measured in degrees.</summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.ImagePrimitive">
            <summary>Represents an image that is drawn on the screen.</summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.ImagePrimitive.#ctor">
            <summary><para>Initializes a new instance of the ImagePrimitive class.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.ImagePrimitive.GetPreferredSizeCore(System.Drawing.Size)">
            <summary>
            	<para>Retrieves the size of a rectangular area into which a primitive can be
                fitted. If the proposed size is too small, the minimal size is retrieved.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.ImagePrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Draws the primitive on the screen.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.StretchHorizontally">
            <summary>
            Gets or sets the flag controlling whether the image primitive fills up the available area horizontally
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.StretchVertically">
            <summary>
            Gets or sets the flag controlling whether the image primitive fills up the available area vertically
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.DefaultImagePlace">
            <summary>
            Gets or sets the flag controlling whether the image is rendered in the default image position
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.ImagePosition">
            <summary>
            Gets or sets the image position
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.ImageLayout">
            <summary>
            Gets or sets the way ImagePrimitive will layout its image on the screen.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.ForcedScalingSize">
            <summary>
            Gets or sets a value that scales the image size to it.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.Image">
            <summary>Gets or sets the image that is displayed.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.ImageIndex">
            <summary>Gets or sets the image list index value of the displayed image.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.ImageKey">
            <summary>Gets or sets the key accessor for the image in the ImageList.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.UseSmallImageList">
            <summary>Specifies whether the image should be taken from the SmallImageList or from the ImageList when the ImageIndex/ImageKey property is set.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.ImageScaling">
            <summary>
            Gets or sets image scaling. Possible values are members of ImageScaling
            enumeration: None and SizeToFit.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.ActualIndex">
            <summary>Gets actual index.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.DrawShadow">
            <summary>
            	<para>Gets a value indicating whether the primitive can draw shadow. The
                ImagePrimitive cannot draw shodow, and consequently, the return value is always
                false.</para>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.IsEmpty">
            <summary><para>Gets a value indicating whether the primitive has content.</para></summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.TransparentColor">
            <summary>
            Gets or sets the transparent color for the image
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ImagePrimitive.RotateFlipType">
            <summary>
            Gets or sets the type of rotate/flip to be applied
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.LinePrimitive">
            <summary>Represents a line that is drawn on the screen.</summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.LinePrimitive.#ctor">
            <summary>Initializes a new instance of the ArrowPrimitive class.</summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.LinePrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Draws the primitive on the screen.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.LinePrimitive.LineWidth">
            <summary>Gets or sets the line width in pixels.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.LinePrimitive.SeparatorOrientation">
            <summary>
            Gets or sets the line orientation. Possible values are defined in the SepOrientation
            enumeration.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.LinePrimitive.SweepAngle">
            <summary>Gets or sets the line angle in degrees.</summary>
        </member>
        <member name="F:Telerik.WinControls.Primitives.OverflowPrimitive.MinHorizontalSize">
            <summary>
            Specifies arrow directions for the arrow primitive: Up, Right, Down, and
            Left.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.OverflowPrimitive.#cctor">
            <summary><para>Initializes a new instance of the ArrowPrimitive class.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.OverflowPrimitive.#ctor(Telerik.WinControls.ArrowDirection)">
            <summary>
            	<para>Initializes a new instance of the ArrowPrimitive class using the
                ArrowDirection enumeration. Possible directions are up, bottom, left, and
                right.</para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.OverflowPrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Draws the primitive on the screen.</summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.OverflowPrimitive.GetPreferredSizeCore(System.Drawing.Size)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.IRadLayoutElement.GetPreferredSize(System.Drawing.Size)" filter=""/>
        </member>
        <member name="P:Telerik.WinControls.Primitives.OverflowPrimitive.Direction">
            <summary>
            Gets or sets the arrow direction. The possible values are contained in the
            ArrowDirection enumeration: up, left, right, and bottom.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.ProgressBarPrimitive">
            <summary>Represents the internal part of the progress bar.</summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.ProgressBarPrimitive.#ctor">
            <summary><para>Initializes a new instance of the ProgressBarPrimitive class.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.ProgressBarPrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Draws the primitive on the screen.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.HasImage">
            <summary>
            indicates that Progress Bar has Image
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.Orientation">
            <summary>
            Gets or sets progress bar orientation. Possible values are indicates in
            ProgressOrientaion enumeration: up, left, bottom, and right.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.Dash">
            <summary>
            	<para>Indicates whether the progress bar style is dash. If both dash and hash are
                true, hatch style is chosen.</para>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.Hatch">
            <summary>
            Indicates whether the progress bar style is hatch. When true, the style is Hatch.
            When both dash and hatch are true the style is hatch.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.SweepAngle">
            <summary>Gets or sets the angle in degrees of the progress bar dash or hatch parts.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.StepWidth">
            <summary>Gets or sets the step width in pixels between separators.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.SeparatorWidth">
            <summary>Gets or sets separators width in pixels.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.Value1">
            <summary>
            Gets or sets the value of the first progress line. There could be two progress
            lines in the progress bar.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.Value2">
            <summary>
            Gets or sets the value of the second progress line. There could be two progress
            lines in the progress bar.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.Minimum">
            <summary>Specifies minimum value for the progress.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.Maximum">
            <summary>Gets or sets maximum value for the progress.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.Step">
            <summary>
            indicates Stap value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.SeparatorColor1">
            <summary>Gets or sets the first color that is used in gradient effect.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.ProgressBarPrimitive.SeparatorColor2">
            <summary>Gets or sets the second color that is used in gradient effect.</summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.RadioPrimitive">
            <summary><para>Represents a check box primitive that is drawn on the screen.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.RadioPrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Draws the primitive on the screen.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.RadioPrimitive.StretchHorizontally">
            <summary>
            Gets or sets whether the radio primitive is strechable vertically 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.RadioPrimitive.StretchVertically">
            <summary>
            Gets or sets whether the radio primitive is strechable horizontally  
            </summary> [DefaultValue(false)]
        </member>
        <member name="P:Telerik.WinControls.Primitives.RadioPrimitive.MinimalSize">
            <summary>
            Gets the minimal size of the check primitive. Its default value is Size(13,
            13).
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.RectanglePrimitive">
            <summary>Represents a rectangle that is drawn on the sceen.</summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.RectanglePrimitive.#ctor">
            <summary><para>Initializes a new instance of the RectanglePrimitive class.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.RectanglePrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Draws the primitive on the screen.</summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.TextWrapExpandMode">
            <summary>
            TextWrapExpand Modes
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.TextPrimitive">
             <summary>Represents text that is drawn on the screen.
             <para>
              Extends %BasePrimitive:Telerik.WinControls.Primitives.BasePrimitive%.
            </para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.TextPrimitive.#ctor">
            <summary><para>Initializes a new instance of the TextPrimitive class.</para></summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.TextPrimitive.GetPreferredSizeCore(System.Drawing.Size)">
            <commentsfrom cref="M:Telerik.WinControls.Layouts.IRadLayoutElement.GetPreferredSize(System.Drawing.Size)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Primitives.TextPrimitive.GetTextSize">
            <summary>Retrieves the text size.</summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.TextPrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Draws the primitive on the screen.</summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.TextPrimitive.ToString">
            <summary>Returns the text as a string.</summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.TextPrimitive.Dispose">
            <summary>Disposes the unmanaged resources used by the TextPrimitive.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.Text">
            <summary>Gets or sets the displayed text.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.StretchHorizontally">
            <summary>
            Allow StretchHorizontally
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.StretchVertically">
            <summary>
            Allow StretchVertically
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.TextWithoutMnemonics">
            <summary>
            Gets the text without the mnemonic symbols.<br/>
            For example the text "a&amp;bc" will be returned as "abc".
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Telerik.WinControls.Primitives.TextPrimitive.UseMnemonic" -->
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.TextOrientation">
            <summary>Gets or sets the text orientation. Possible values are horizontal 
            and vertical.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.FlipText">
            <summary>Gets or sets whether the text will be flipped.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.TextFormatFlags">
            <summary>
            Gets or sets the TextFormatFlags. The TextFormatEumeration specifies the 
            display and layout information for the text strings.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.TextAlignment">
            <summary>
            Gets or sets the text alignment. Possible values are included in 
            the ContentAlignment enumeration.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.StringAlignment">
            <summary>
            Gets or sets the string alignment. Possible values are Near, Center, Far.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.IsEmpty">
            <summary><para>Gets a value indicating whether the primitive has content.</para></summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.LayoutStringFormat">
            <summary>
            LayoutStringFormat
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TextPrimitive.Shadow">
            <summary>Gets or sets the shadow settings.</summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.TrackBarPrimitive">
            <summary>
            	<para>Represents a track bar that is drawn on the screen.</para>
            	<para>
                    Extends
                    <see cref="T:Telerik.WinControls.Primitives.BasePrimitive">BasePrimitive</see>
            	</para>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.TickColor">
            <summary> Gets or Sets RadTrackBar's ticks color </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.SliderAreaGradientAngle">
            <summary> Gets or Sets the gradient angle of the SliderArea </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.FitToAvailableSize">
            <summary> Gets or Sets whether the TrackBar should fit to available size </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.ShowSlideArea">
            <summary> Gets or Sets whether the SlideArea should be visible </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.ShowTicks">
            <summary> Gets or Sets Ticks Visibility </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.BackColor5">
            <summary>
            Gets or sets background color. This property is applicable to radial, glass,
            office glass, and vista gradients.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.BackColor6">
            <summary>
            Gets or sets background color. This property is applicable to radial, glass,
            office glass, and vista gradients.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.ThumbWidth">
            <summary>
            Gets or Sets TrackBar's thumbWidth
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.TrackBarOrientation">
            <summary>
            Gets or Sets TrackBar's Orientation
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.TickStyle">
            <summary>
            Indicates the tick style of the progress bar. Possible values are members of
            %TickStyles enumeration:Telerik.WinControls.Enumerations.TickStyles%: none, 
            topleft, BottomRight, and both.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.TickFrequency">
            <summary>
            The number of positions between tick marks
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.SlideAreaWidth">
            <summary>
            Gets or Sets the width of TrackBar's SlideArea
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.Minimum">
            <summary>Gets or sets a minimum int value for the trackbar position.</summary>
        </member>
        <member name="P:Telerik.WinControls.Primitives.TrackBarPrimitive.Maximum">
            <summary>Gets or sets a maximum int value for the trackbar position.</summary>
        </member>
        <member name="T:Telerik.WinControls.Primitives.TrackBarThumbPrimitive">
             <summary>Represents a trackbar thumb that is drawn on the screen.
            <para>
             Extends %BasePrimitive:Telerik.WinControls.Primitives.BasePrimitive%.
            </para> 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Primitives.TrackBarThumbPrimitive.PaintPrimitive(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>Draws the primitive on the screen.</summary>
        </member>
        <member name="T:Telerik.WinControls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RoutedEvent">
            <summary>
            Represents a routed event. Routed events can be tunnel or bubble event 
            according to the routed direction of the event.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoutedEvent.EventName">
            <summary>
            Gets or sets the event name.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoutedEvent.OwnerType">
            <summary>
            Gets the owner's type.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RaisedRoutedEvent">
            <summary>
            Represents a raised routed event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RaisedRoutedEvent.#ctor">
            <summary>
            Initializes a new instance of the RaisedRoutedEvent class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RaisedRoutedEvent.#ctor(Telerik.WinControls.RoutedEvent,System.String,Telerik.WinControls.EventBehaviorSenderType,Telerik.WinControls.RoutingDirection)">
            <summary>
            Initializes a new instance of the RaisedRoutedEvent class using
            routed event, event sender, sender's type, and routing direction (tunnel 
            or bubble).
            </summary>
            <param name="routedEvent"></param>
            <param name="sender"></param>
            <param name="senderType"></param>
            <param name="direction"></param>
        </member>
        <member name="M:Telerik.WinControls.RaisedRoutedEvent.IsSameEvent(Telerik.WinControls.RadElement,Telerik.WinControls.RoutedEventArgs)">
            <summary>
            Compares the instance with the other event arguments and the sender of the event.
            </summary>
            <param name="senderElement"></param>
            <param name="eventArgs"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RaisedRoutedEvent.IsSameEvent(Telerik.WinControls.RaisedRoutedEvent)">
            <summary>
            Compares the instance with another event passed as a parameter.
            </summary>
            <param name="targetEvent"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RaisedRoutedEvent.RoutedEvent">
            <summary>
            Gets or sets a value indicating the routed event.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RaisedRoutedEvent.RoutedEventFullName">
            <summary>
            Gets or sets a string value indicating the routed event name.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RaisedRoutedEvent.SenderType">
            <summary>
            Gets or sets the sender's type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RaisedRoutedEvent.Sender">
            <summary>
            Gets or sets the sender.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RaisedRoutedEvent.Direction">
            <summary>
            Gets or sets the routing direction - tunnel or bubble.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RoutingDirection">
            <summary>
            Defines the routing directions for an events.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RoutingDirection.Tunnel">
            <summary>
            Indicates a tunnel event.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RoutingDirection.Bubble">
            <summary>
            Indicates a bubble event.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RoutedEventArgs">
            <summary>
            Represents event arguments for a routed event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RoutedEventArgs.#ctor(System.EventArgs,Telerik.WinControls.RoutedEvent)">
            <summary>
            Initializes a new instance of the RoutedEventArgs class using EventsArgs to 
            initializes its base class and the RoutedEvent.
            </summary>
            <param name="args"></param>
            <param name="routedEvent"></param>
        </member>
        <member name="P:Telerik.WinControls.RoutedEventArgs.OriginalEventArgs">
            <summary>
            Gets or sets the original EventArgs.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoutedEventArgs.RoutedEvent">
             <summary>
            Gets or sets a value indicating the RoutedEvent. 
             </summary>
        </member>
        <member name="P:Telerik.WinControls.RoutedEventArgs.Canceled">
            <summary>
            Gets or sets a value indicating whether the event is canceled.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoutedEventArgs.Direction">
            <summary>
            Gets or sets a value indicating the routing direction for the event.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RoutedEventStyleBehavior">
            <summary>
            Specializes the PropertyChangeBehavior used internally by StlyeSheet system with the
            functionality to change element appearance/behavior defined in a StyleSheet when a 
            certain RoutedEvent bubbles or tunnels through an element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RoutedEventStyleBehavior.#ctor(Telerik.WinControls.RaisedRoutedEvent,Telerik.WinControls.IElementSelector,Telerik.WinControls.PropertySettingCollection)">
            <summary>
            Initializes a new instance of the RoutedEventStyleBehavior class using 
            the fired routed event, element selector, and property settings.
            </summary>
            <param name="raisedRoutedEvent"></param>
            <param name="selector"></param>
            <param name="propertySettings"></param>
        </member>
        <member name="M:Telerik.WinControls.RoutedEventStyleBehavior.BehaviorRemoving(Telerik.WinControls.RadElement)">
            <summary>
            Removes the behavior from the given element.
            </summary>
            <param name="fromElement"></param>
        </member>
        <member name="T:Telerik.WinControls.Serialization.LongList">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Serialization.ObjectIDGenerator">
            <exclude/>
            <summary>Generates IDs for objects.</summary>
        </member>
        <member name="M:Telerik.WinControls.Serialization.ObjectIDGenerator.#ctor">
            <summary>Initializes a new instance of the 
            <see cref="T:Telerik.WinControls.Serialization.ObjectIDGenerator"></see> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)">
            <summary>Returns the ID for the specified object, generating a new ID if the specified object has not already been identified by the <see cref="T:System.Runtime.Serialization.ObjectIDGenerator"></see>.</summary>
            <returns>The object's ID is used for serialization. firstTime is set to true if this is the first time the object has been identified; otherwise, it is set to false.</returns>
            <param name="obj">The object you want an ID for. </param>
            <param name="firstTime">true if obj was not previously known to the <see cref="T:System.Runtime.Serialization.ObjectIDGenerator"></see>; otherwise, false. </param>
            <exception cref="T:System.ArgumentNullException">The obj parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The <see cref="T:System.Runtime.Serialization.ObjectIDGenerator"></see> has been asked to keep track of too many objects. </exception>
        </member>
        <member name="M:Telerik.WinControls.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)">
            <summary>Determines whether an object has already been assigned an ID.</summary>
            <returns>The object ID of obj if previously known to the <see cref="T:System.Runtime.Serialization.ObjectIDGenerator"></see>; otherwise, zero.</returns>
            <param name="obj">The object you are asking for. </param>
            <param name="firstTime">true if obj was not previously known to the <see cref="T:System.Runtime.Serialization.ObjectIDGenerator"></see>; otherwise, false. </param>
            <exception cref="T:System.ArgumentNullException">The obj parameter is null. </exception>
        </member>
        <member name="T:Telerik.WinControls.Serialization.Repository">
            <exclude/>
        </member>
        <member name="M:Telerik.WinControls.Serialization.Repository.Serialize(System.Object,System.String)">
            <summary>
            Serializes object graph into an Xml node/document section
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Telerik.WinControls.Serialization.Repository.Serialize(System.IO.MemoryStream,System.String)">
            <summary>
            Serializes external stream into an Xml node/document section.
            Preferred when serializing lists of values that have no hierarchical relations.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Telerik.WinControls.Serialization.Repository.DeSerialize(System.String)">
            <summary>
            Deserializes object graph from an Xml node/document section
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Serialization.Repository.DeSerialize(System.String,System.IO.MemoryStream)">
            <summary>
            Deserializes an Xml node/document section into a stream.
            Preferred when deserializing lists of entires that have no hierarchical relations and 
            must be processed all (not possible when deserializing to object - only the current read from the buffer is deserialized).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Serialization.Repository.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:Telerik.WinControls.Serialization.Repository.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Serialization.Repository.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Serialization.SerializationSetupException">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Serialization.SerializationType">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Serialization.SurrogateHashtable">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Serialization.SurrogateKey">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.ElementShape">
            <summary>Represents element shape. Base class for specialized shapes such as 
            EllipseShape, RoundRectShape, Office12Shape, etc. </summary>
        </member>
        <member name="M:Telerik.WinControls.ElementShape.GetElementShape(Telerik.WinControls.RadElement)">
            <summary>
            Retrieves the shape of the element. GraphicsPath represents a series of connected
            lines and curves.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ElementShape.GetElementContour(Telerik.WinControls.RadElement)">
            <summary>
            Retrieves the contour of the element0. GraphicsPath represents a series of
            connected lines and curves.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ElementShape.CreatePath(System.Drawing.Rectangle)">
            <summary>Creates path using a rectangle for bounds.</summary>
        </member>
        <member name="M:Telerik.WinControls.ElementShape.CreatePath(System.Drawing.RectangleF)">
            <summary>Creates path using a rectangle for bounds.</summary>
        </member>
        <member name="M:Telerik.WinControls.ElementShape.SerializeProperties">
            <summary>
            Serializes properties. Required for serialization mechanism of telerik
            framework.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ElementShape.DeserializeProperties(System.String)">
            <summary>
            Deserializes properties. Required for the deserialization mechanism of telerik
            framework.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.CustomShape.SerializeProperties">
            <summary>Serializes properties. Required for telerik serialization mechanism.</summary>
        </member>
        <member name="M:Telerik.WinControls.CustomShape.DeserializeProperties(System.String)">
            <summary>Deserializes properties. Required for telerik deserialization mechanism.</summary>
        </member>
        <member name="F:Telerik.WinControls.CustomShapeEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.CustomShapeEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.CustomShapeEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.IShapeCurve.SnapToCurve(System.Drawing.PointF,System.Single)">
            <summary>
            Should snap to the line or curve
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="F:Telerik.WinControls.RadShapeEditorControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadShapeEditorControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.RadShapeEditorControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.SnapToGrid.#ctor">
            <summary>
            The default constructor sets the following default values:
                FieldWidth = 1.0f;
                SnapRelative = 0.2f;
                SnapDelta = 0.2f;
                SnapType = SnapTypes.Relative;
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SnapToGrid.SnapType">
            <summary>
            Set the snap type to be one of the following:
                SnapTypes.Relative - snap distance is relative to the FieldWidth
            <see cref="P:Telerik.WinControls.SnapToGrid.SnapFixed"/>
                SnapTypes.Fixed    - snap distance is fixed
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SnapToGrid.FieldWidth">
            <summary>
            Width of a single box in the snap grid.
            It's value cannot be less than or equal to zero.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SnapToGrid.SnapFixed">
            <summary>
            Sets/Gets the snap distance for fixed type snapping. 
            Does not activate fixed type snapping.
            <see cref="P:Telerik.WinControls.SnapToGrid.SnapType"/>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SnapToGrid.SnapRelative">
            <summary>
            Sets/Gets the relative snap distance.
            Does not activate relative type snapping.
            <see cref="P:Telerik.WinControls.SnapToGrid.SnapType"/>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SnapToGrid.CachedSnap">
            <summary>
            Gets the precached snap distance.
            Doesn't need to be equal to any of the SnapFixed or SnapRelative properties. 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.OldShapeEditor.CustomShape">
            <summary>Represents custom shape of an element.</summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.CustomShape.#ctor">
            <summary>Initializes a new instance of the CustomShape class.</summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.CustomShape.CreatePath(System.Drawing.Rectangle)">
            <summary>Creates a path using a ractangle for bounds.</summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.CustomShape.SerializeProperties">
            <summary>Serializes properties. Required for telerik serialization mechanism.</summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.CustomShape.DeserializeProperties(System.String)">
            <summary>Deserializes properties. Required for telerik deserialization mechanism.</summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.CustomShape.Points">
            <summary>Gets a List of Shape points.</summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.CustomShape.Dimension">
            <summary>Gets or sets a Rectangle indicating the dimension of the shape.</summary>
        </member>
        <member name="T:Telerik.WinControls.OldShapeEditor.RadShapeEditorControl">
            <summary>
            Represents a shape editor control.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.RadShapeEditorControl.DrawGridLines(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draws grid lines in the specified rectangle with the specified color
            </summary>
            <param name="graphics"></param>
            <param name="rect"></param>
            <param name="color"></param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.RadShapeEditorControl.GetRealFromVirtualRect(System.Drawing.Rectangle)">
            <summary>
            Translates a rectangle in accordance with the offsets due to scrolling
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.RadShapeEditorControl.GetRealFromVirtualPoint(Telerik.WinControls.OldShapeEditor.ShapePointBase)">
            <summary>
            Translates a point in accordance with the offsets due to scrolling
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.RadShapeEditorControl.UpdateMaxSize(Telerik.WinControls.OldShapeEditor.ShapePointBase)">
            <summary>
            Updates the bounds of the drawable area
            </summary>
            <param name="pt"></param>
        </member>
        <member name="F:Telerik.WinControls.OldShapeEditor.RadShapeEditorControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.RadShapeEditorControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.RadShapeEditorControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.OldShapeEditor.CustomShapeEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.CustomShapeEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.CustomShapeEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.OldShapeEditor.ShapePoint">
            <summary>
            Represents a shape point.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.OldShapeEditor.ShapePointBase">
            <summary>
            Represents a base class of the ShapePoint class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.#ctor">
            <summary>
            Initializes a new instance of the ShapePointbase class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the ShapePoint class using X and Y
            coordinates.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.#ctor(System.Drawing.Point)">
            <summary>
            Initializes a new instance of the ShapePoint class using a Point structure.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.#ctor(Telerik.WinControls.OldShapeEditor.ShapePointBase)">
            <summary>
            Initializes a new instance of the ShapePoint class using an instance of the
            ShapePointBase class.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.Set(System.Single,System.Single)">
            <summary>
            Sets the X and Y coordinates of the shape point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.Set(System.Drawing.Point)">
            <summary>
            Sets the point position from a Point structure.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.GetPoint">
            <summary>
            Retrieves a Point structure corresponding to the point position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.GetPoint(System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePointBase.ToString">
            <summary>
            Retrieves a string representation of the ShapePointBase class.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.ShapePointBase.X">
            <summary>
            Gets or sets a float value indicating the X coordinate of the shape point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.ShapePointBase.Y">
            <summary>
            Gets or sets a float value indicating the Y coordinate of the shape point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.ShapePointBase.Anchor">
            <summary>
            Gets or sets a value indicating the anchor style.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.ShapePointBase.Locked">
            <summary>
            Gets or sets a boolean value indicating whether the shape point is locked.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.#ctor">
            <summary>
            Initializes a new instance of the ShapePoint class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ShapePoint class from
            the X and Y coordinates of the point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.#ctor(System.Drawing.Point)">
            <summary>
            Initializes a new instance of the ShapePoint class from a Point structure.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.#ctor(Telerik.WinControls.OldShapeEditor.ShapePoint)">
            <summary>
            Initializes a new instance of the ShapePoint class using a ShapePoint instance.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.GetLineDirection(Telerik.WinControls.OldShapeEditor.ShapePointBase)">
            <summary>
            Retrieves the line direction of the line that passes through the instance
            point and the point given as an argument.
            </summary>
            <param name="nextPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.CreateBezier(Telerik.WinControls.OldShapeEditor.ShapePointBase)">
            <summary>
            Creates a Bezier curve between the current point and the point given as a
            parameter.
            </summary>
            <param name="nextPoint"></param>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.GetCurve(Telerik.WinControls.OldShapeEditor.ShapePoint)">
            <summary>
            
            </summary>
            <param name="nextPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.IsVisible(Telerik.WinControls.OldShapeEditor.ShapePoint,System.Drawing.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="nextPoint"></param>
            <param name="pt"></param>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.ShapePoint.IsCurveVisible(System.Drawing.Point[],System.Drawing.Point,System.Double)">
            <summary>
            
            </summary>
            <param name="points"></param>
            <param name="pt"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.ShapePoint.ControlPoint1">
            <summary>
            Gets or sets the first control point.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.ShapePoint.ControlPoint2">
            <summary>
            Gets or sets the second control point.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.OldShapeEditor.ShapePoint.LineDirections">
            <summary>
            Exposes the line direction.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.OldShapeEditor.ShapePoint.LinePositions">
            <summary>
            Exposes the line position.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.OldShapeEditor.ShapePoint.LinePositions.Horizontal">
            <summary>
            Indicates horizontal position.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.OldShapeEditor.ShapePoint.LinePositions.Vertical">
            <summary>
            Indicates vertical position.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.OldShapeEditor.SnapToGrid.#ctor">
            <summary>
            The default constructor sets the following default values:
                FieldWidth = 1.0f;
                SnapRelative = 0.2f;
                SnapDelta = 0.2f;
                SnapType = SnapTypes.Relative;
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.SnapToGrid.SnapType">
            <summary>
            Set the snap type to be one of the following:
                SnapTypes.Relative - snap distance is relative to the FieldWidth
            <see cref="P:Telerik.WinControls.OldShapeEditor.SnapToGrid.SnapFixed"/>
                SnapTypes.Fixed    - snap distance is fixed
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.SnapToGrid.FieldWidth">
            <summary>
            Width of a single box in the snap grid.
            It's value cannot be less than or equal to zero.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.SnapToGrid.SnapFixed">
            <summary>
            Sets/Gets the snap distance for fixed type snapping. 
            Does not activate fixed type snapping.
            <see cref="P:Telerik.WinControls.OldShapeEditor.SnapToGrid.SnapType"/>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.SnapToGrid.SnapRelative">
            <summary>
            Sets/Gets the relative snap distance.
            Does not activate relative type snapping.
            <see cref="P:Telerik.WinControls.OldShapeEditor.SnapToGrid.SnapType"/>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.OldShapeEditor.SnapToGrid.CachedSnap">
            <summary>
            Gets the precached snap distance.
            Doesn't need to be equal to any of the SnapFixed or SnapRelative properties. 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Tests.DonutShape">
            <summary>Represents donut like shape.</summary>
        </member>
        <member name="M:Telerik.WinControls.Tests.DonutShape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates donut-like path. Overrides the method defined in its base class -
            ElementShape.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ElementShapeConverter">
            <summary>Represents element shape converter.</summary>
        </member>
        <member name="T:Telerik.WinControls.ElementShapeEditor">
            <exclude/> 
        </member>
        <member name="T:Telerik.WinControls.EllipseShape">
            <summary>Represents ellipse shape.</summary>
        </member>
        <member name="M:Telerik.WinControls.EllipseShape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates ellipse shape. Overrides the method defined in its base class -
            ElementShape.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Tests.QAShape.CreatePath(System.Drawing.Rectangle)">
            <summary>
            Creates donut-like path. Overrides the method defined in its base class -
            ElementShape.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RoundRectShape">
            <summary>Represents round rectangle shape.</summary>
        </member>
        <member name="M:Telerik.WinControls.RoundRectShape.#ctor">
            <summary>Initializes a new instance of the RoundRectShape class.</summary>
        </member>
        <member name="M:Telerik.WinControls.RoundRectShape.#ctor(System.ComponentModel.IContainer)">
            <summary>Initializes a new instance of the RoundRectShape class.</summary>
        </member>
        <member name="M:Telerik.WinControls.RoundRectShape.#ctor(System.Int32)">
            <summary>Initializes a new instance of the RoundRectShape class using a radius.</summary>
        </member>
        <member name="M:Telerik.WinControls.RoundRectShape.CreatePath(System.Drawing.RectangleF)">
            <summary>Greates round rectangle like path.</summary>
        </member>
        <member name="M:Telerik.WinControls.RoundRectShape.SerializeProperties">
            <summary>Serializes properties. Required for telerik serialization mechanism.</summary>
        </member>
        <member name="M:Telerik.WinControls.RoundRectShape.DeserializeProperties(System.String)">
            <summary>Deserializes properties. Required for telerik deserialization mechanism.</summary>
        </member>
        <member name="P:Telerik.WinControls.RoundRectShape.Radius">
            <summary><para>Gets or sets the radius of the shape.</para></summary>
        </member>
        <member name="P:Telerik.WinControls.RoundRectShape.BottomLeftRounded">
            <summary>
            Gets or sets value indicating whether the bottom left corner of the shape should be round
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoundRectShape.TopLeftRounded">
            <summary>
            Gets or sets value indicating whether top left corner of the shape should be round
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoundRectShape.BottomRightRounded">
            <summary>
            Gets or sets value indicating whether bottom right corner of the shape should be round
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoundRectShape.TopRightRounded">
            <summary>
            Gets or sets value indicating whether top right corner of the shape should be round
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueColorCalculator">
            <summary>
            Animates color values using ColorAnimationStep objects.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueCalculator">
            <summary>
            Calculates values used in each frame of property animation.
            Also supports converting animation step values to and from a string for 
            theme serialization.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)">
            <summary>
            Calculates the animated value from start value, end value, current value, 
            current frame, total number of frames and the specified animation calulator.
            </summary>
            <param name="startValue"></param>
            <param name="endValue"></param>
            <param name="currValue"></param>
            <param name="step"></param>
            <param name="currFrameNum"></param>
            <param name="totalFrameNum"></param>
            <param name="calc"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueCalculator.CalculateInversedStep(System.Object)">
            <summary>
            
            </summary>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueCalculator.ConvertAnimationStepToString(System.Object)">
            <summary>
            Retrieves the animation step as a string value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueCalculator.ConvertToAnimationStepFromString(System.String)">
            <summary>
            Converts a string to an animation value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)">
            <summary>
            Calculates the animation step from start value, end value, and the total number of frames.
            </summary>
            <param name="animationStartValue"></param>
            <param name="animationEndValue"></param>
            <param name="numFrames"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueColorCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueColorCalculator.CalculateInversedStep(System.Object)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateInversedStep(System.Object)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueColorCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)" filter=""/>
        </member>
        <member name="T:Telerik.WinControls.Styles.Animation.Calculators.AnimationValueDoubleCalculator">
            <summary>
            Calculates double values for the property animation.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Styles.Animation.Calculators.AnimationValueDoubleCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Styles.Animation.Calculators.AnimationValueDoubleCalculator.CalculateInversedStep(System.Object)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateInversedStep(System.Object)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.Styles.Animation.Calculators.AnimationValueDoubleCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)" filter=""/>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueFloatCalculator">
            <summary>
            Calculates float values for the property animation.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueFloatCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueFloatCalculator.CalculateInversedStep(System.Object)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateInversedStep(System.Object)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueFloatCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)" filter=""/>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueFontCalculator">
            <summary>
            Calculates Font values for property animation, using FontAnimationStep values.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueFontCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueFontCalculator.CalculateInversedStep(System.Object)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateInversedStep(System.Object)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueFontCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)" filter=""/>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueIntCalculator">
            <summary>
            Calculates int values for property animation.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueIntCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueIntCalculator.CalculateInversedStep(System.Object)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateInversedStep(System.Object)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueIntCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)" filter=""/>
        </member>
        <member name="T:Telerik.WinControls.AnimationValuePaddingCalculator">
            <summary>
            Calculates animation rectangle values.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.AnimationValuePaddingCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValuePaddingCalculator.CalculateInversedStep(System.Object)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateInversedStep(System.Object)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValuePaddingCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)" filter=""/>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueRectangleCalculator">
            <summary>
            Calculates animation rectangle values.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueRectangleCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueRectangleCalculator.CalculateInversedStep(System.Object)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateInversedStep(System.Object)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueRectangleCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)" filter=""/>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueSizeCalculator">
            <summary>
            Represents a value size animation calculator.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueSizeCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueSizeCalculator.CalculateInversedStep(System.Object)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateInversedStep(System.Object)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueSizeCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)" filter=""/>
        </member>
        <member name="T:Telerik.WinControls.AnimationValuePointCalculator">
            <summary>
            Represents a value point animation calculator.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.AnimationValuePointCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValuePointCalculator.CalculateInversedStep(System.Object)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateInversedStep(System.Object)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValuePointCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)" filter=""/>
        </member>
        <member name="T:Telerik.WinControls.AnimationValuePointFCalculator">
            Represents a value point animation calculator using floating point values.
        </member>
        <member name="M:Telerik.WinControls.AnimationValuePointFCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValuePointFCalculator.CalculateInversedStep(System.Object)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateInversedStep(System.Object)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValuePointFCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)" filter=""/>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueSizeFCalculator">
             <summary>
            Represents a value size animation calculator using floating point values.
             </summary>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueSizeFCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimatedValue(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Int32,Telerik.WinControls.EasingCalculator)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueSizeFCalculator.CalculateInversedStep(System.Object)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateInversedStep(System.Object)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.AnimationValueSizeFCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)">
            <commentsfrom cref="M:Telerik.WinControls.AnimationValueCalculator.CalculateAnimationStep(System.Object,System.Object,System.Int32)" filter=""/>
        </member>
        <member name="F:Telerik.WinControls.AnimationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.AnimationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.AnimationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ColorAnimationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ColorAnimationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.ColorAnimationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ColorComboBox.SelectedColor">
            <summary>
            Gets or sets the selected color
            </summary>
        </member>
        <member name="F:Telerik.WinControls.DigitAnimationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.DigitAnimationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.DigitAnimationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.FontAnimationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.FontAnimationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.FontAnimationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.Styles.Animation.Dialogs.FontComboBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Styles.Animation.Dialogs.FontComboBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.Styles.Animation.Dialogs.FontComboBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.GeneralAnimationSettings.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.GeneralAnimationSettings.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.GeneralAnimationSettings.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.PaddingAnimationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PaddingAnimationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.PaddingAnimationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.PointAnimationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PointAnimationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.PointAnimationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.PointFAnimationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PointFAnimationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.PointFAnimationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RectangleAnimationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RectangleAnimationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.RectangleAnimationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.SizeAnimationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.SizeAnimationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.SizeAnimationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.SizeFAnimationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.SizeFAnimationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.SizeFAnimationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationState">
            <summary>
            Defines the animation state.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AnimationState.NotRunning">
            <summary>
            Indicates that the animation is not running.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AnimationState.Applying">
            <summary>
            Indicates that the animation is running.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AnimationState.Reversing">
            <summary>
            Indicates that the animation is running backwards.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimatorStyles">
            <summary>
            Defines the time of the animation occurrence. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AnimatorStyles.DoNotAnimate">
            <summary>
            Indicates that no animation is played.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AnimatorStyles.AnimateWhenApply">
            <summary>
            Indicates that animation is played on applying a setting.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AnimatorStyles.AnimateWhenUnapply">
            <summary>
            Indicates that animation is played on up-apply a setting.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.AnimatorStyles.AnimateAlways">
            <summary>
            Indicates that animation is always played.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadAnimationType">
            <summary>
            Defines the animation type.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadAnimationType.ByStep">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadAnimationType.ByStartEndValues">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.IPropertySetting">
            <summary>
            Exposes methods and properties for a concrete property setttings used in StyleSheets and Themes.
            PropertySetting can customize the current value of any RadPropertry of any RadElement instance.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.IPropertySetting.GetCurrentValue(Telerik.WinControls.RadObject)">
            <summary>
            Retrieves the current value of the property.
            </summary>
            <param name="forObject">
                
            </param>
            <returns>
            
            </returns>
        </member>
        <member name="M:Telerik.WinControls.IPropertySetting.ApplyValue(Telerik.WinControls.RadElement)">
            <summary>
            Applies the value to the element given as a parameter.
            </summary>
            <param name="element">
            the element that the property value is applied to.
            </param>
        </member>
        <member name="M:Telerik.WinControls.IPropertySetting.UnapplyValue(Telerik.WinControls.RadElement)">
            <summary>
            Unapply the property to the element given as a parameter.
            </summary>
            <param name="element">
            the element that the property value is unapplied to.
            </param>
        </member>
        <member name="M:Telerik.WinControls.IPropertySetting.Serialize">
            <summary>
            Serializes the property setting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.IPropertySetting.UnregisterValue(Telerik.WinControls.RadElement)">
            <summary>
            Unregisters the value.
            </summary>
            <param name="selectedElement"></param>
        </member>
        <member name="M:Telerik.WinControls.IPropertySetting.PropertySettingRemoving(Telerik.WinControls.RadObject)">
            <summary>
            Called when the property setting is not valid any more, since the target element property has been set to
            another value.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IPropertySetting.Property">
            <summary>
            Gets or sets the property itself.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.AnimatedPropertySetting.GetStartValueProvider">
            <summary>
            This method supports internal TPF infrastructure and is not intended for use elsewhere
            </summary>
        </member>
        <member name="M:Telerik.WinControls.AnimatedPropertySetting.GetEndValueProvider">
            <summary>
            This method supports internal TPF infrastructure and is not intended for use elsewhere
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimatedPropertySetting.ApplyDelay">
            <summary>
            Gets or sets animation start Delay in milliseconds
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationValueCalculatorFactory">
            <summary>
            Represents a map of CLR types and corresponding <see cref="T:Telerik.WinControls.AnimationValueCalculator"/> type using when property animation is running and
            for animations serialization in themes.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.EasingCalculator">
            <summary>
            Represents a numerical value calculator. It is used internally by StyleSheet 
            system to calculate the value changes when animating RadElement properties.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.EasingCalculator.CalculateCurrentValue(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the current value of some property from the initial value, end value, current frame, and the numbers of frames.
            </summary>
            <param name="initialValue"></param>
            <param name="endValue"></param>
            <param name="currentFrame"></param>
            <param name="numFrames"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.EasingCalculator.CalculateCurrentValue(System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            Calculates the current value of some property from the initial value, end value, current frame, and the number of frames.
            </summary>
            <param name="initialValue"></param>
            <param name="endValue"></param>
            <param name="currentFrame"></param>
            <param name="numFrames"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.EasingCalculator.CalculateCurrentValue(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Caclulates the current value of a property from the initial value, end value, current frame, and the number of frames.
            </summary>
            <param name="initialValue"></param>
            <param name="endValue"></param>
            <param name="currentFrame"></param>
            <param name="numFrames"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.RadEasingType">
            <summary>
            Defines the easing equations for the easing animations.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationStatusEventArgs">
            <summary>
            Contains information about the way Animation has finished
            </summary>
        </member>
        <member name="P:Telerik.WinControls.AnimationStatusEventArgs.IsInterrupt">
            <summary>
            Gets value indicating whether the animation has been interrupted by another one.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.AnimationStartedEventHandler">
            <summary>
            AnimationStartedEventHandler delegate
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Telerik.WinControls.AnimationFinishedEventHandler">
            <summary>
            AnimationFinishedEventHandler delegate
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Telerik.WinControls.BinaryOperator">
            <summary>
            A binary opeartor used by the CompolexCondition class.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.BinaryOperator.AndOperator">
            <summary>
            Indicates conjunction.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.BinaryOperator.OrOperator">
            <summary>
            Indicates disjunction.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.BinaryOperator.XorOperator">
            <summary>
            Indicates exclusive or.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UnaryOperator">
            <summary>
                See <see cref="T:Telerik.WinControls.BinaryOperator">BinaryOperator</see>,
                <see cref="T:Telerik.WinControls.Condition">Condition</see>
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UnaryOperator.None">
            <summary>
                  
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UnaryOperator.NotOperator">
            <summary>
                 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ComplexCondition">
            <summary>
            ComplexCondition evaluates two conditions related with a binary operator.
            Inherits <commentsfrom cref="T:Telerik.WinControls.Condition" filter=""/>
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Condition">
             <summary>
            Defines a base abstract class that describes a condition which checks when to apply 
            a style rule. SimpleCondition evaluates when a property of an Element equals a
            certain value. RoutedEventCondition evaluates if a routed event is currently 
            tunneling/bubbling through an Element. ComplexCondition evaluates two conditions 
            related with a binary operator.
             </summary>
        </member>
        <member name="M:Telerik.WinControls.Condition.Evaluate(Telerik.WinControls.RadElement)">
            <summary>
            Retrieves a value indicating whether to apply a style rule.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Condition.Serialize">
            <summary>
            Serializes the condition by creating a serializabe instance of the XmlCondition 
            class.  
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Condition.CreateSerializableInstance">
            <summary>
            Creates an instance of the XmlCondition class which is a serializable 
            condition.         
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.Condition.AffectedProperties">
            <summary>
            Retrieves a list of the affected properties of the current condition.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Condition.AffectedEvents">
            <summary>
            Retrieves a list of the affected events of the current condition.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComplexCondition.#ctor">
            <summary>
            Initializes a new instance of the ComplexCondition class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ComplexCondition.#ctor(Telerik.WinControls.Condition,Telerik.WinControls.BinaryOperator,Telerik.WinControls.Condition)">
            <summary>
            Initializes a new instance of the ComplexCondition class from the first condition, 
            binary operator, and second condition.
            </summary>
            <param name="condition1"></param>
            <param name="binaryOperator"></param>
            <param name="condition2"></param>
        </member>
        <member name="M:Telerik.WinControls.ComplexCondition.Evaluate(Telerik.WinControls.RadElement)">
            <summary>
            Evaluates the complex condition.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ComplexCondition.CreateSerializableInstance">
            <summary>
            Retrieves a serializable instance of the ComplexCondtion - 
            /// <commentsfrom cref="T:Telerik.WinControls.XmlComplexCondition" filter=""/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ComplexCondition.ToString">
            <summary>
            Retrives a string representation of the ComplexCondition class.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.ComplexCondition.Condition1">
            <summary>
            Gets or sets the first condition.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComplexCondition.BinaryOperator">
            <summary>
            Gets or sets the binary operator to be used for evaluating the condition.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ComplexCondition.Condition2">
            <summary>
            Gets or sets the second condition.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RoutedEventCondition">
            <summary>
            RoutedEventCondition evaluates if a routed event is currently 
            tunneling/bubbling through an Element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RoutedEventCondition.#ctor(Telerik.WinControls.RoutedEvent,System.String,Telerik.WinControls.EventBehaviorSenderType,Telerik.WinControls.RoutingDirection)">
            <summary>
            Initializes a new instance of the RoutedEventCondtion class.
            </summary>
            <param name="routedEvent"></param>
            <param name="sender"></param>
            <param name="senderType"></param>
            <param name="direction"></param>
        </member>
        <member name="M:Telerik.WinControls.RoutedEventCondition.#ctor(Telerik.WinControls.RoutedEvent,System.String,Telerik.WinControls.EventBehaviorSenderType,Telerik.WinControls.RoutingDirection,Telerik.WinControls.UnaryOperator)">
            <summary>
            Initializes a new instance of the RoutedEventCondition class from 
            routed event, sender, sender's type, and unary operator used in the condition. 
            </summary>
            <param name="routedEvent"></param>
            <param name="sender"></param>
            <param name="senderType"></param>
            <param name="direction"></param>
            <param name="unaryOperator"></param>
        </member>
        <member name="M:Telerik.WinControls.RoutedEventCondition.Evaluate(Telerik.WinControls.RadElement)">
            <summary>
            Evaluates the 
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RoutedEventCondition.CreateSerializableInstance">
            <summary>
            Creates a serializable instance of the the RoutedEventCondition.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RoutedEventCondition.Direction">
            <summary>
            Gets or sets the direction. Events could be tunneling or bubbling.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoutedEventCondition.UnaryOperator">
            <summary>
            Gets or sets the unary operator for the condition.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoutedEventCondition.SenderType">
            <summary>
            Gets or sets the sender's type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoutedEventCondition.Sender">
            <summary>
            Gets or sets the sender of the event.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RoutedEventCondition.RoutedEvent">
            <summary>
            Gets or sets the routed event.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.SimpleCondition">
            <summary>
            SimpleCondition evaluates when a property of an Element equals a certain value.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.SimpleCondition.#ctor(Telerik.WinControls.IPropertySetting)">
            <summary>
            Initializes a new instance of the SimpleCondition class.
            </summary>
            <param name="settingToCheck"></param>
        </member>
        <member name="M:Telerik.WinControls.SimpleCondition.#ctor(Telerik.WinControls.IPropertySetting,Telerik.WinControls.UnaryOperator)">
            <summary>
            Initializes a new instance of the SimpleCondition class from the setting to check, and the
            unary operator to use.
            </summary>
            <param name="settingToCheck"></param>
            <param name="unaryOperator"></param>
        </member>
        <member name="M:Telerik.WinControls.SimpleCondition.#ctor(Telerik.WinControls.RadProperty,System.Object,Telerik.WinControls.UnaryOperator)">
            <summary>
            Initializes a new instance of the SimpleCondition class from the property, value and unary operator
            </summary>        
        </member>
        <member name="M:Telerik.WinControls.SimpleCondition.#ctor(Telerik.WinControls.RadProperty,System.Object)">
            <summary>
            Initializes a new instance of the SimpleCondition class from the property and value
            </summary>        
        </member>
        <member name="M:Telerik.WinControls.SimpleCondition.Evaluate(Telerik.WinControls.RadElement)">
            <summary>
            Evaluates the target RadElement using the unary operator.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.SimpleCondition.CreateSerializableInstance">
            <summary>
            Creates a Serializable instance of the SimpleCondition class - /// 
            <commentsfrom cref="!:XMLSimpleCondtion" filter=""/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.SimpleCondition.ToString">
            <summary>
            Retrieves the string representation of the current instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.SimpleCondition.UnaryOperator">
            <summary>
            Gets or sets the unary operator of the simple condition.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SimpleCondition.Setting">
            <summary>
            Gets or sets the setting of the current property.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySetting.GetValueProvider">
            <summary>
            This method supports internal TPF infrastructure and is not intended for use elsewhere
            </summary>
        </member>
        <member name="T:Telerik.WinControls.PropertySettingCollection">
            <summary>
            Represents a property settings collection. Property settings are very
            similar to CSS style properties.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.PropertySettingGroup">
            <summary>
            Defines a set of IPropertySetting objects that form a group that 
            can be applied to a RadElement. Used by StyleSheets system.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroup.#ctor">
            <summary>
            Initializes a new instance of the PropertySettingGroup class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroup.#ctor(System.String,Telerik.WinControls.IPropertySetting[])">
            <summary>
            Initializes a new instance of the PropertySettingGroup class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroup.#ctor(System.String,Telerik.WinControls.Condition,Telerik.WinControls.IPropertySetting[])">
            <summary>
            Initializes a new instance of the PropertySettingGroup class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroup.#ctor(System.Type,Telerik.WinControls.IPropertySetting[])">
            <summary>
            Initializes a new instance of the PropertySettingGroup class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroup.#ctor(System.Type,Telerik.WinControls.Condition,Telerik.WinControls.IPropertySetting[])">
            <summary>
            Initializes a new instance of the PropertySettingGroup class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PropertySettingGroup.Selectors">
            <summary>
            Gets a collection of the selectors for this property setting group.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.PropertySettingGroup.PropertySettings">
            <summary>
            Gets a collection of the property settings for the property setting group.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.PropertySettingGroupCollection">
            <summary>
            Represents a collection of PropertySettingGroup objects.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroupCollection.#ctor">
            <summary>
            Initializes a new instance of the PropertySettingGroupCollection class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.PropertySettingGroupCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the PropertySettingGroupCollection class
            using proposed capacity.
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="T:Telerik.WinControls.ClassSelector">
            <summary>
            Represents a class selector. Class selectors are used to apply the same
            customization to all elements that belong to the same class. This 
            behavior is very similar to that of the CSS class selectors.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.HierarchicalSelector">
            <summary>
            Represents a base class for other selectors. telerik presentation framework
            selectors are similar to CSS selectors.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.SelectorBase">
            <summary>Represents a base class for the HierarchicalSelector class.
            Selectors in telerik presentation framework are very similar to CSS 
            selectors.</summary>
        </member>
        <member name="T:Telerik.WinControls.IElementSelector">
            <summary>Exposes methods and properties required for a general selector. 
            Selectors in telerik presentation framework are like CSS selectors.</summary>
        </member>
        <member name="M:Telerik.WinControls.IElementSelector.ShouldApply(Telerik.WinControls.RadElement)">
            <summary>Retrieves a boolean value indicating whether customization should 
            apply to the element given as an argument.</summary>
        </member>
        <member name="M:Telerik.WinControls.IElementSelector.GetSelectedElements(Telerik.WinControls.RadElement)">
            <summary>Retrieves an array of selected elements of the element given as an 
            argument.</summary>
        </member>
        <member name="M:Telerik.WinControls.IElementSelector.Apply(Telerik.WinControls.RadElement,Telerik.WinControls.PropertySettingCollection)">
            <summary>Applies the property settings to the given element.</summary>
        </member>
        <member name="M:Telerik.WinControls.IElementSelector.Serialize">
            <summary>Retrieves a serializable wrapper for the selector.</summary>
        </member>
        <member name="M:Telerik.WinControls.IElementSelector.Unregister(Telerik.WinControls.RadElement,Telerik.WinControls.PropertySettingCollection)">
            <summary>Unregisters the propertySettings for the given element.</summary>
        </member>
        <member name="P:Telerik.WinControls.IElementSelector.HasApplyCondition">
            <summary>Gets a value indicating whether a condition has been applied.</summary>
        </member>
        <member name="M:Telerik.WinControls.SelectorBase.ShouldApply(Telerik.WinControls.RadElement)">
            <commentsfrom cref="M:Telerik.WinControls.IElementSelector.ShouldApply(Telerik.WinControls.RadElement)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.SelectorBase.ShouldUnapply(Telerik.WinControls.RadElement)">
            <summary>Retrieves a value indicating whether the customization should be 
            un-applied to the given element..</summary>
        </member>
        <member name="M:Telerik.WinControls.SelectorBase.IsValueApplied(Telerik.WinControls.RadElement)">
            <summary>Retrieves a value indicating whether value is set for the element.</summary>
        </member>
        <member name="M:Telerik.WinControls.SelectorBase.Apply(Telerik.WinControls.RadElement,Telerik.WinControls.PropertySettingCollection)">
            <commentsfrom cref="M:Telerik.WinControls.IElementSelector.Apply(Telerik.WinControls.RadElement,Telerik.WinControls.PropertySettingCollection)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.SelectorBase.Unregister(Telerik.WinControls.RadElement,Telerik.WinControls.PropertySettingCollection)">
            <commentsfrom cref="M:Telerik.WinControls.IElementSelector.Unregister(Telerik.WinControls.RadElement,Telerik.WinControls.PropertySettingCollection)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.SelectorBase.GetSelectedElements(Telerik.WinControls.RadElement)">
            <commentsfrom cref="M:Telerik.WinControls.IElementSelector.GetSelectedElements(Telerik.WinControls.RadElement)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.SelectorBase.GetBehaviors(Telerik.WinControls.PropertySettingGroup)">
            <commentsfrom cref="M:Telerik.WinControls.IElementSelector.GetBehaviors(Telerik.WinControls.PropertySettingGroup)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.SelectorBase.GetRoutedEventBehaviors(Telerik.WinControls.PropertySettingGroup)">
            <commentsfrom cref="M:Telerik.WinControls.IElementSelector.GetRoutedEventBehaviors(Telerik.WinControls.PropertySettingGroup)" filter=""/>
        </member>
        <member name="M:Telerik.WinControls.SelectorBase.Telerik#WinControls#IElementSelector#Serialize">
            <commentsfrom cref="M:Telerik.WinControls.IElementSelector.Serialize" filter=""/>
        </member>
        <member name="P:Telerik.WinControls.SelectorBase.Condition">
            <summary>Gets or sets the Condition upon which to apply the customization.</summary>
        </member>
        <member name="P:Telerik.WinControls.SelectorBase.UnapplyCondition">
            <summary>Gets or sets the condition upon which to un-apply the customization.</summary>
        </member>
        <member name="P:Telerik.WinControls.SelectorBase.AutoUnapply">
            <summary>Gets or sets a value indicating whether auto-un-apply is on or off.</summary>
        </member>
        <member name="P:Telerik.WinControls.SelectorBase.IsActiveSelectorInStyleBuilder">
            <summary> Gets or sets a value indicating whether the current selector is the active one in style builder</summary>
        </member>
        <member name="P:Telerik.WinControls.SelectorBase.HasApplyCondition">
            <summary>Gets a value indicating whether the an apply condition is set.</summary>
        </member>
        <member name="M:Telerik.WinControls.HierarchicalSelector.GetSelectedElements(Telerik.WinControls.RadElement)">
            <summary>Retrieves the selected elements of the given element.</summary>
        </member>
        <member name="M:Telerik.WinControls.ClassSelector.#ctor">
            <summary>Initializes a new instance of the class selector class.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.WinControls.ClassSelector.#ctor(System.String)" -->
        <member name="P:Telerik.WinControls.ClassSelector.ElementClass">
            <summary>Gets or sets a value indicating the class name.</summary>
        </member>
        <member name="T:Telerik.WinControls.GeneralSelector">
            <summary>
            Represents a general selector. General selectors are used to apply customization
            to all elements. Behavior is very similar to that of CSS universal selectors.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.GeneralSelector.GetSelectedElements(Telerik.WinControls.RadElement)">
            <summary>Retrieves the selected elements of the given element.</summary>
        </member>
        <member name="T:Telerik.WinControls.NameSelector">
            <summary>
            Represents a name selector. Name selectors are used to apply customization to the
            element having the specified name. This behavior is very similar to that of CSS id
            selectors.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.NameSelector.#ctor">
            <summary>Initializes a new instance of the NameSelector class.</summary>
        </member>
        <member name="M:Telerik.WinControls.NameSelector.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NameSelector class using the name of the
            element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.NameSelector.ElementName">
            <summary>
            Gets or sets the element's name. Customization is applied only to the element
            having this name.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.SelectorCollection.#ctor">
            <summary>
            Initializes a new instance of the SelectorCollection class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.SelectorCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the SelectorCollection class.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.TypeSelector">
            <summary>
            Represents a type selector. Type selectors are used to apply the same
            customization to all elements of the same type. Behavior is very similar to that 
            of the CSS type selectors.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.TypeSelector.#ctor">
            <summary>Initializes a new instance of the TypeSelector class.</summary>
        </member>
        <member name="M:Telerik.WinControls.TypeSelector.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the TypeSelector class using the type that will be
            affected.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.TypeSelector.ElementType">
            <summary>Gets or sets the element type that will be affected by the Type selector.</summary>
        </member>
        <member name="T:Telerik.WinControls.PartiallyLoadedStyleSheet">
            <summary>
            This class supports internal TPF infrastructure and is not ment to be used elsewere.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.StyleSheet">
            <seealso cref="P:Telerik.WinControls.RadControl.ThemeName"/>
            <summary>
            	<strong>StyleSheet</strong> object defines the appearance and/or certain aspects
            of behavior of one <strong>RadControl</strong> or <strong>RadItem</strong>.
            </summary>
            <remarks>
            	<strong>StyleSheet</strong> objects can be persisted (in XML) and used within
                <see cref="T:Telerik.WinControls.Theme"/> (described in a topic above). This
                class can also be used programmatically to define values of certain properties of
                <strong>RadElements</strong> by assigning an instance of
                <strong>StyleSheet</strong> class to <see cref="P:Telerik.WinControls.RadElement.Style"/>
                property.<br/>
                Values can also be applied to properties of <strong>RadElement</strong>, only when
                certain condition occurs (on mouse hover for example).
            </remarks>
        </member>
        <member name="M:Telerik.WinControls.StyleSheet.SaveStylesheet(System.IO.Stream)">
            <summary>
            Saves the current Stylesheet object tree to stream
            </summary>
            <param name="toStream"></param>
        </member>
        <member name="M:Telerik.WinControls.StyleSheet.LoadStylesheet(System.IO.Stream)">
            <summary>
            Read the current Stylesheet object from stream /file/, previously created with <see cref="M:Telerik.WinControls.StyleSheet.SaveStylesheet(System.IO.Stream)"/>
            </summary>
            <param name="fromStream"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.StyleSheet.ThemeLocation">
            <summary>
            Gets theme location if the StyleSheet originates from a theme file.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.PartiallyLoadedStyleSheet.LoadedCompletely">
            <summary>
            Occurs when the PropertySettingGroups are finally loaded from the underlaying data
            </summary>
        </member>
        <member name="T:Telerik.WinControls.PropertyChangeBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.PropertyChangeBehaviorCollection">
            <summary>
            Represents a collection of PropertyChangeBahavior instances.
            See also RadElement.AddBehavior: /// 
            <commentsfrom cref="M:Telerik.WinControls.RadElement.AddBehavior(Telerik.WinControls.PropertyChangeBehavior)" filter=""/>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Telerik.WinControls.PropertyChangeStyleBehavior" -->
        <member name="M:Telerik.WinControls.PropertyChangeStyleBehavior.#ctor(Telerik.WinControls.RadProperty,Telerik.WinControls.IElementSelector,Telerik.WinControls.PropertySettingCollection)">
            <summary>
            Initializes a new instance of the PropertyChangeStyleBehavior class.
            </summary>
            <param name="executeBehaviorPropertyTrigger"></param>        
            <param name="selector"></param>
            <param name="propertySettings"></param>
        </member>
        <member name="T:Telerik.WinControls.ISupportSystemSkin">
            <summary>
            Defines a visual element which may be displayed using system skins (UxTheme semantic).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ISupportSystemSkin.GetXPVisualStyle">
            <summary>
            Gets the VisualStyleElement which represents the current state of this instance for Windows XP.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ISupportSystemSkin.GetVistaVisualStyle">
            <summary>
            Gets the VisualStyleElement which represents the current state of this instance for Windows Vista.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.ISupportSystemSkin.UseSystemSkin">
            <summary>
            Determines whether to use system skins or not.
            If this is false, the default TPF rendering will be used.
            If this is true and there is no system skin enabled, TPF rendering will be used.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadHdcWrapper">
            <summary>
            Represents a wrapper for native GDI HDC handle.
            Transforms a GDI+ graphics to its HDC counterpart, preserving any clipping and transformations applied.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadHdcWrapper.#ctor(System.Drawing.Graphics,System.Boolean)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="useTransfrom"></param>
        </member>
        <member name="M:Telerik.WinControls.RadHdcWrapper.GetHdc">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RadHdcWrapper.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadHdcWrapper.XFORM">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.WinControls.SystemSkinManager.GetThemeColor(System.Windows.Forms.VisualStyles.ColorProperty)">
            <summary>
            Gets the Color defined for the current element.
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.SystemSkinManager.SetCurrentElement(System.Windows.Forms.VisualStyles.VisualStyleElement)">
            <summary>
            Sets the specified element as the "Current" for painting.
            </summary>
            <param name="element"></param>
            <returns>True if the element may be painted (there is a theme part defined for it), false otherwise.</returns>
        </member>
        <member name="M:Telerik.WinControls.SystemSkinManager.PaintCurrentElement(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the current element (previously specified by the SetCurrentElement method)
            on the provided graphics surface, within the desired bounds.
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:Telerik.WinControls.SystemSkinManager.NotifyChange">
            <summary>
            Invalidates all opened forms upon a user-triggered change in this class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.SystemSkinManager.CloseAllHandles">
            <summary>
            closes all currently opened HTheme handles
            </summary>
        </member>
        <member name="M:Telerik.WinControls.SystemSkinManager.GetHTheme(System.String)">
            <summary>
            Looks-up a HTheme handle.
            </summary>
            <param name="windowClass"></param>
            <returns></returns>
        </member>
        <member name="F:Telerik.WinControls.SystemSkinManager.EmptyElement">
            <summary>
            Used internally by the framework to determine whether we just want to skip TPF's drawing.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SystemSkinManager.CurrentElement">
            <summary>
            Gets the currently attached element.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SystemSkinManager.IsVistaOrLater">
            <value>
            Returns true on Windows Vista or newer operating systems; otherwise, false.
            </value>
        </member>
        <member name="P:Telerik.WinControls.SystemSkinManager.UseSystemSkin">
            <summary>
            Determines whether system skins will be applied on RadControls
            </summary>
        </member>
        <member name="P:Telerik.WinControls.SystemSkinManager.Instance">
            <summary>
            Gets the only instance of this manager.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UseSystemSkinMode.Inherit">
            <summary>
            Mode is inherited by the parent chain.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UseSystemSkinMode.YesLocal">
            <summary>
            Only direct element can use skins, value cannot be used for inheritance
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UseSystemSkinMode.YesInheritable">
            <summary>
            The element and all its descendants may use skins.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UseSystemSkinMode.NoLocal">
            <summary>
            Only direct element is forbidden to use skins, its children can compose this value up from the parent chain.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UseSystemSkinMode.NoInheritable">
            <summary>
            Element and all its descendants are forbidden to use system skins.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VistaAeroTheme">
            <summary>
            Contains definitions for the MS Windows Vista Aero theme.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VistaAeroTheme.ComboBox">
            <summary>
            Vista comboboxes
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VistaAeroTheme.DatePicker">
            <summary>
            Vista DateTimePickers
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VistaAeroTheme.TextBox">
            <summary>
            Vista TextBoxes
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VistaAeroTheme.Header">
            <summary>
            Vista Headers
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VistaAeroTheme.ListBox">
            <summary>
            Vista Listboxes
            </summary>
        </member>
        <member name="T:Telerik.WinControls.VistaAeroTheme.ListView">
            <summary>
            Vista ListViews
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ColorChangedEventArgs">
            <summary>
            Represent the ColorChangedEventArgs class
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ColorChangedEventArgs.#ctor(Telerik.WinControls.HslColor)">
             <summary>
             Represents event arguments for the 
             %ColorChanged:Telerik.WinControls.CaptureBox.ColorChanged% event.
             </summary>
             <param name="selectedHslColor">
             Represents the changed color. 
            </param>
        </member>
        <member name="M:Telerik.WinControls.ColorChangedEventArgs.#ctor(System.Drawing.Color)">
             <summary>
             Represents event arguments for the 
             <see cref="T:Telerik.WinControls.ColorChangedEventHandler"/> event.
             </summary>
             <param name="selectedColor">
             Represents the changed color. 
            </param>
        </member>
        <member name="T:Telerik.WinControls.ColorListBox">
            <exclude/>
        </member>
        <member name="E:Telerik.WinControls.ColorListBox.ColorChanged">
            <summary>
            Fires when the selected color has changed
            </summary>
        </member>
        <member name="T:Telerik.WinControls.IColorSelector">
            <summary>
            Wraps the functionality provided by the color picker
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.SelectedColor">
            <summary>
            Gets or sets the selected color
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.SelectedHslColor">
            <summary>
            Gets or sets the selected color
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.OldColor">
            <summary>
            Gets or sets the old color
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.ShowBasicColors">
            <summary>
            Shows or hides the basic colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.ActiveMode">
            <summary>
            Gets or sets the active mode of the color tabs
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.ShowSystemColors">
            <summary>
            Shows or hides the system colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.ShowWebColors">
            <summary>
            Shows or hides the web colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.ShowProfessionalColors">
            <summary>
            Shows or hides the professional colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.ShowCustomColors">
            <summary>
            Shows or hides the custom colors panel
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.ShowHEXColorValue">
            <summary>
            Shows or hides the hex color textbox
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.AllowEditHEXValue">
            <summary>
            Allows or disallows editing the hex value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.AllowColorPickFromScreen">
            <summary>
            Allows or disallows picking colors from the screen
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.AllowColorSaving">
            <summary>
            Allows or disallows color saving
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.CustomColors">
            <summary>
            Gets the custom colors
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.BasicTabHeading">
            <summary>
            Gets or sets the heading of the basic colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.SystemTabHeading">
            <summary>
            Gets or sets the heading of the system colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.WebTabHeading">
            <summary>
            Gets or sets the heading of the web colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.ProfessionalTabHeading">
            <summary>
            Gets or sets the heading of the professional colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.SelectedColorLabelHeading">
            <summary>
            Gets or sets the heading of the selected color label
            </summary>
        </member>
        <member name="P:Telerik.WinControls.IColorSelector.OldColorLabelHeading">
            <summary>
            Gets or sets the heading of the old color label
            </summary>
        </member>
        <member name="E:Telerik.WinControls.IColorSelector.OkButtonClicked">
            <summary>
            Fires when the OK Button is clicked
            </summary>
        </member>
        <member name="E:Telerik.WinControls.IColorSelector.CancelButtonClicked">
            <summary>
            Fires when the Cancel Button is clicked
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadColorDialog">
            <summary>
            Represents a dialog that can be used to select color with rich UI and extended functionality.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadColorDialog.Reset">
            <summary>
            Resets the properties of a color dialog box to their default values. Replaces the underlaying ColorDialogForm
             with new instance 
            </summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Telerik.WinControls.RadColorDialog.RunDialog(System.IntPtr)">
            <summary>
            Shows modal dialog box.
            </summary>
            
            <returns>
            true if the dialog box was successfully run; otherwise, false.
            </returns>
            
            <param name="hwndOwner">A value that represents the window handle of the owner window for the common dialog box. </param>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialog.ColorDialogForm">
            <summary>
            Gets the instance of RadColorDialogForm, which incorporates various settings of the
            underlaying color selection Form and ColorSelector user control.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialog.SelectedColor">
            <summary>
            Gets or sets the selected color. References to SelectedColor of <see cref="P:Telerik.WinControls.RadColorDialog.ColorDialogForm"/>.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialog.SelectedHslColor">
            <summary>
            Gets or sets the selected color. References to SelectedColor of <see cref="P:Telerik.WinControls.RadColorDialog.ColorDialogForm"/>.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialog.CustomColors">
            <summary>
            Gets the user-defined colors. References to CustomColors of <see cref="P:Telerik.WinControls.RadColorDialog.ColorDialogForm"/>.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ColorPickerActiveMode">
            <summary>
            Modes the RadColorPicker can be in
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadColorDialogForm">
            <summary>
            Represents a dialog containing a color picker
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadColorDialogForm.#ctor">
            <summary>
            Creates instance of RadColorDialog class
            </summary>
        </member>
        <member name="F:Telerik.WinControls.RadColorDialogForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadColorDialogForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.RadColorDialogForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.RadColorSelector">
            <summary>
            Gets the color selector
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.SelectedColor">
            <summary>
            Gets or sets the selected color
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.SelectedHslColor">
            <summary>
            Gets or sets the selected color
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.OldColor">
            <summary>
            Gets or sets the old color
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.ActiveMode">
            <summary>
            Gets or sets the active mode of the color tabstrip
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.ShowBasicColors">
            <summary>
            Shows or hides the basic colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.ShowSystemColors">
            <summary>
            Shows or hides the system colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.ShowWebColors">
            <summary>
            Shows or hides the web colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.ShowProfessionalColors">
            <summary>
            Shows or hides whe professional colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.ShowCustomColors">
            <summary>
            Shows or hides the custom colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.ShowHEXColorValue">
            <summary>
            Shows or hides the hex color value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.AllowEditHEXValue">
            <summary>
            Allows or disallows editing the HEX value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.AllowColorPickFromScreen">
            <summary>
            Allows or disallows color picking from the screen
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.AllowColorSaving">
            <summary>
            Allows or disallows color saving
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.CustomColors">
            <summary>
            Gets the custom colors
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.BasicTabHeading">
            <summary>
            Gets or sets the heading of the basic colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.SystemTabHeading">
            <summary>
            Gets or sets the heading of the system colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.WebTabHeading">
            <summary>
            Gets or sets the heading of the web colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.ProfessionalTabHeading">
            <summary>
            Gets or sets the heading of the professional colors tab
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.SelectedColorLabelHeading">
            <summary>
            Gets or sets the heading of the selected color label
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadColorDialogForm.OldColorLabelHeading">
            <summary>
            Gets or sets the heading of the old color label
            </summary>
        </member>
        <member name="E:Telerik.WinControls.RadColorDialogForm.ColorChanged">
            <summary>
            Fires when the selected color has changed
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ColorChangedEventHandler">
            <summary>
            Represents the method that will handle the ColorChanged event.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Telerik.WinControls.RadColorEditor">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.RadColorEditorConverter">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.RadFillEditor">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Themes.Design.PreviewControlPlacemenet">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Themes.Design.ThemeDesignedControlList">
            <summary>
            Type provided for backward compatibility only. Please use ControlStyleBuilderInfoList instead.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Themes.Design.RadThemeDesignerDataAttribute">
            <exclude/>
             <summary>Represents Theme Designer Data Attribute.</summary>
        </member>
        <member name="M:Telerik.WinControls.Themes.Design.RadThemeDesignerDataAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance of the RadThemeDesignerDataAttribute.</summary>
        </member>
        <member name="P:Telerik.WinControls.Themes.Design.RadThemeDesignerDataAttribute.DesignTimeDataType">
            <summary>Gets or sets data data type.</summary>
        </member>
        <member name="T:Telerik.WinControls.Themes.Design.RadControlDefaultDesignTimeData">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Themes.Design.RadControlDesignTimeData">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.ColorBox">
            <exclude/>
        </member>
        <member name="E:Telerik.WinControls.ColorBox.ColorChanged">
            <summary>
            Fires when the selected color changes
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Themes.GradientDialog.GradientAngleControl">
            <exclude/>
        </member>
        <member name="F:Telerik.WinControls.Themes.GradientDialog.GradientAngleControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Themes.GradientDialog.GradientAngleControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.Themes.GradientDialog.GradientAngleControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.GradientBox">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.GradientColorValue">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.GradientSlider">
            <exclude/>
        </member>
        <member name="F:Telerik.WinControls.GradientSlider.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.GradientSlider.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.GradientSlider.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.GradientSlider.Values">
            <summary>
            Gets or sets the values
            </summary>
        </member>
        <member name="E:Telerik.WinControls.GradientSlider.ColorChanged">
            <summary>
            Fires when the color has changed
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadGradientDialog">
            <exclude/>
        </member>
        <member name="F:Telerik.WinControls.RadGradientDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadGradientDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.RadGradientDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.DefaultTheme">
            <summary>
            Defines the default themes.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.DefaultTheme.Blue">
            <summary>
            Indicates Blue theme.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.DefaultTheme.Olive">
            <summary>
            Indicates olive theme.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.DefaultTheme.Silver">
            <summary>
            Indicates silver theme.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.DefaultTheme.None">
            <summary>
            Indicates no theme.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.POINT">
            <summary>
            Represents a point.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.POINT.x">
            <summary>
            Represents tha x coordinate of the point.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.POINT.y">
            <summary>
            Represents the y coordinate of the point.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.SIZE">
            <summary>
            Represents size.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.SIZE.cx">
            <summary>
            Represents the x dimension.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.SIZE.cy">
            <summary>
            Represents the y dimension.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RECT">
            <summary>
            Represents a rectangle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RECT.#ctor(System.Drawing.Rectangle)">
            <summary>
            Initializes a new rectangle structure from System.Drawing.Rectangle structure.
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:Telerik.WinControls.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new rectangle structure. 
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:Telerik.WinControls.RECT.FromXYWH(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.RECT.ToString">
            <summary>
            Retrieves a text representation of the structure.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.RECT.Height">
            <summary>
            Gets the rectangle height.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RECT.Width">
            <summary>
            Gets the rectangle width.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ThemeColorManager">
            <summary>
            Represents a color manager for Telerik themes.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeColorManager.#cctor">
            <summary>Initializes a new instance of the ThemeColorManager class.</summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeColorManager.#ctor">
            <summary>
            Initializes a new instance of the ThemeColorManager class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeColorManager.ReadThemeColors">
            <summary>Reads theme colors.</summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeColorManager.ReloadThemeData">
            <summary>Reloads theme data.</summary>
        </member>
        <member name="T:Telerik.WinControls.ThemeColorManager.ThemeException">
            <summary>
            Represents a theme exception.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeColorManager.ThemeException.#ctor(Telerik.WinControls.ThemeColorManager.ThemeException.ThemeErrors)">
            <summary>
            Initializes a new instance of the ThemeException class from 
            %ThemeErrors:ThemeErrors%.
            </summary>
            <param name="error"></param>
        </member>
        <member name="P:Telerik.WinControls.ThemeColorManager.ThemeException.Error">
            <summary>
            Gets the %ThemeErrors:ThemeErrors% associated with this exception.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ThemeColorManager.ThemeException.ThemeErrors">
            <summary>
            Defines the theme errors.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ThemeColorManager.ThemeException.ThemeErrors.CANNOT_READ_THEME_NAME">
            <summary>
            Indicates that the theme name cannot be read.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ThemeManager">
            <summary>
            Represents a theme manager.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeManager.#ctor">
            <summary>
            Initializes a new instance of the theme manager class.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.ThemeManager.ThemeChanged">
            <summary>
            Fires when the theme is changed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeManager.IsThemeActive">
            <summary>
            Gets a value indicating whether the theme is active.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeManager.IsThemedApplication">
            <summary>
            Gets a value indicating whether the whole application has a theme.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ThemeManager.IsThemedOs">
            <summary>
            Gets a boolean value indicating whether the operating system is themed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ThemeManager.ThemeChangeNotifier.#ctor">
            <summary>
            Notifies that the theme has been changed.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.ThemeManager.ThemeChangeNotifier.ThemeChanged">
            <summary>
            Fires when the theme is changed.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XPTheme">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XPTheme.#ctor">
            <summary>
            Initializes a new instance of the XPTheme class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XPTheme.CloseThemeData(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hTheme">
            
            </param>
        </member>
        <member name="M:Telerik.WinControls.XPTheme.DrawBackground(System.String,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws theme background.
            </summary>
            <param name="name"></param>
            <param name="part_id"></param>
            <param name="state_id"></param>
            <param name="hdc"></param>
            <param name="ox"></param>
            <param name="oy"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="clip_ox"></param>
            <param name="clip_oy"></param>
            <param name="clip_dx"></param>
            <param name="clip_dy"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XPTheme.DrawBackground(System.IntPtr,System.String,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws theme background.
            </summary>
            <param name="hwnd"></param>
            <param name="name"></param>
            <param name="part_id"></param>
            <param name="state_id"></param>
            <param name="hdc"></param>
            <param name="ox"></param>
            <param name="oy"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="clip_ox"></param>
            <param name="clip_oy"></param>
            <param name="clip_dx"></param>
            <param name="clip_dy"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.XPTheme.INTLIST">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XPTheme.INTLIST.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XPTheme.ThemedControls">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XPTheme.ThemedControls.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XPTheme.ThemedParts">
             <summary>
            
             </summary>
        </member>
        <member name="M:Telerik.WinControls.XPTheme.ThemedParts.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XPTheme.ThemeEdge">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XPTheme.ThemeEdgeFlags">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XPTheme.ThemeProperties">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XPTheme.THEMESIZE">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XPTheme.ThemeStates">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Themes.Design.ThemeDesignerService">
            <exclude/>
        </member>
        <member name="T:Telerik.WinControls.Themes.Serialization.ISerializationValidatable">
            <summary>
            Implements whether an instances of a class need validation after theme 
            deserialization.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer">
            <summary>
            Serializes components to XML, using the same rules that apply in Code Dom serialization, in VS designer.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.#ctor(Telerik.WinControls.XmlSerialization.ComponentXmlSerializationInfo)">
            <summary>
            Constructs new instance of the class, providing extended properties serialization information
            </summary>
            <param name="componentSerializationInfo">Extends the properties serialization information.</param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.#ctor(System.Collections.IDictionary,Telerik.WinControls.XmlSerialization.ComponentXmlSerializationInfo)">
            <summary>
            Constructs new instance of the class, providing extended serialization information.
            </summary>
            <param name="typeMap">Dictinary to use that maps type names to XML element names. Keys of the dictionary entries should be type full names. Values should correspond to the type instances.</param>
            <param name="componentSerializationInfo">Extends the properties serialization information.</param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ReadCollectionElement(System.Xml.XmlReader,System.Collections.IList)">
            <summary>
            if Reader is positioned at an element that is a collection, reads the collection items.
            </summary>
            <param name="reader"></param>
            <param name="toRead"></param>        
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ReadMergeCollection(System.Xml.XmlReader,System.Collections.IList,System.String)">
            <summary>
            if Reader is positioned at an element that is a collection, reads the collection items.
            </summary>
            <param name="reader"></param>
            <param name="uniquePropertyName">property used to match objects in collecion</param>
            <param name="toRead"></param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ReadMergeCollection(System.Xml.XmlReader,System.Collections.IList,System.String,System.Boolean)">
            <summary>
            if Reader is positioned at an element that is a collection, reads the collection items.
            </summary>
            <param name="reader"></param>
            <param name="uniquePropertyName">property used to match objects in collecion</param>
            <param name="toRead"></param>
            <param name="preserveNotSerializedExistingElements">States whether the list specified by toRead should not be cleared before reading</param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.MatchReadObjectElement(System.Xml.XmlReader,System.String,System.Type,System.Object[],System.Collections.IList,System.Int32@)">
            <summary>
            Matches the instance of the element by an attribute value and then deserializes its properties.
            If the instance is not found in existingInstancesToMatch,
            new instance of type instanceType will be created and added to existingInstancesToMatch list.
            </summary>
            <param name="reader"></param>
            <param name="propertyToMatch"></param>
            <param name="instanceType"></param>
            <param name="existingInstancesToMatch">the list with existing instances</param>        
            <param name="elementIndex">if deserialized element matches any of the elements in existingInstancesToMatch returns the index of the element in existingInstancesToMatch</param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ReadObjectElement(System.Xml.XmlReader,System.Object)">
            <summary>
            Reads properties of an object and subobject the reader is currently 
            positioned on.
            </summary>
            <param name="reader">Xml reader instance, positioned on the element to read.</param>
            <param name="toRead">object instance to be processed</param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ReadObjectElementOverride(System.Xml.XmlReader,System.Object)">
            <summary>
            Override to provide alternative deserialization of objects.
            </summary>
            <param name="reader"></param>
            <param name="toRead"></param>
            <returns>value indicating whether the object should be processed any further by serializer</returns>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ReadElementInObject(System.Xml.XmlReader,System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Deserializes a specified property of an object
            </summary>
            <param name="reader">Xml reader, positioned on the element coresponding to the property to deserialize</param>
            <param name="property">Property descriptor of the property to deserialize</param>
            <param name="toRead">Object that owns the property to deserialize</param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ProcessListOverride(System.Xml.XmlReader,System.Collections.IList)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.WriteObjectElement(System.Xml.XmlWriter,System.Object)">
            <summary>
            Serializes the given object using the specified XmlWriter.
            </summary>
            <param name="writer"></param>
            <param name="toWrite"></param>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer.ShouldSerializeValue(System.Object,System.ComponentModel.PropertyDescriptor,Telerik.WinControls.XmlSerialization.PropertySerializationMetadata)">
            <summary>
            Provides logic to determine whether property value should be serlilized.
            </summary>
            <remarks>
            ShouldSerialize value resolution is as follows: 
            <list>
            <item>1. ComponentSerializationInfo.SerializeDefaultValues</item>
            <item>2. overwriteMetadata contains attribute DesignerSerializationVisibilityAttribute.Content</item>
            <item>3. property.ShouldSerialize</item>
            </list>
            </remarks>
            <param name="component"></param>
            <param name="property">property to serialize</param>
            <param name="overwriteMetadata">collection of extra serialization attributes for the proeprty, corresponding to ComponentSerializationInfo</param>
            <returns>value indicating whether property value should be serialized</returns>
        </member>
        <member name="T:Telerik.WinControls.Themes.Serialization.StyleSerializationAttributeAttribute">
            <summary>
            Marker attribute - informs StyleXmlSerializer that property should be serialized as an attribute, when serializing 
            RadControl style
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Themes.Design.ProjectManagement">
            <summary>
            Utility class for Design - Time VisualStudio.NET project management.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlPropertySetting">
            <summary>
            Represents a property setting. Each property of <em>t</em>elerik controls can be 
            serialized and deserialized through an instance of this class. The 
            XMLPropertySetting instance describes the affected control, its property, and
            the current value. XmlPropertySetting is very similar to CSS style properties.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySetting.DeserializeProperty(System.String)">
            <summary>
            Deserializes the property given as a string. For example, 
            Telerik.WinControls.VisualElement.ForeColor.
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySetting.DeserializePropertySafe(System.String)">
            <summary>
            Deserializes the property given as a string. For example, 
            Telerik.WinControls.VisualElement.ForeColor.
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySetting.SerializeValue(Telerik.WinControls.RadProperty,System.Object)">
            <summary>
            Serializes the given dependency property with the given value. 
            </summary>
            <param name="property"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.WinControls.XmlPropertySetting.SerializeValue(System.ComponentModel.PropertyDescriptor,System.Object,System.String)" -->
        <member name="M:Telerik.WinControls.XmlPropertySetting.DeserializeValue(Telerik.WinControls.RadProperty,System.String)">
            <summary>
            Deserializes the given dependency property with the given value.
            </summary>
            <param name="property"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySetting.ToString">
            <summary>
            Retrieves a string representation of the class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySetting.GetPropertyName">
            <summary>
            Retrieves the name of the property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySetting.GetDeserializedProperty">
            <summary>
            Retrieves the deserialized property.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.XmlPropertySetting.Property">
            <summary>
            Gets or sets a string value indicating the property. 
            For example, Telerik.WinControls.VisualElement.ForeColor.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlPropertySetting.Value">
            <summary>
            Gets or sets an object value indicating the value of the property. For example,
            the value of Telerik.WinControls.VisualElement.ForeColor property 
            could be the color navy.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlBuilderData">
            <summary>
            Represents 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlClassSelector">
            <summary>
            Represents a class selector that can be serialized and deserialized. 
            Telerik class selectors are very similar to CSS class selectors.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlClassSelector.#ctor">
            <summary>
            Initializes a new instance of the XmlClassSelector class. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlClassSelector.#ctor(System.String)">
            <summary>
            Initializes a new instance of the XmlClassSelector class using an element 
            given as a string.
            </summary>
            <param name="elementClass"></param>
        </member>
        <member name="M:Telerik.WinControls.XmlClassSelector.ToString">
            <summary>
            Retrieves the string representation of the class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlClassSelector.Equals(System.Object)">
            <summary>
            Retrieves a boolean value indicating whether <em>this</em> and the argument are equal.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlClassSelector.GetHashCode">
            <summary>
            Serves as a hash function for the XmlClassSelector type.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.XmlClassSelector.ElementClass">
            <summary>
            Gets or sets a string value indicating the class.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlComplexCondition">
            <summary>
            Represents a serializable correspodence to the ComplexCondtion class.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlCondition">
            <summary>
            Represents a serializable condition. 
            <commentsfrom cref="T:Telerik.WinControls.Condition" filter=""/>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlCondition.Deserialize">
            <summary>
            Deserializes the condition.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlCondition.DeserializeProperties(Telerik.WinControls.Condition)">
            <summary>
            Deserializes the properties for a given condition.
            </summary>
            <param name="selector"></param>
        </member>
        <member name="M:Telerik.WinControls.XmlCondition.CreateInstance">
            <summary>
            Creates a new instance of the Condition class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlCondition.BuildExpressionString">
            <summary>
            Build the expression string. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlComplexCondition.Equals(System.Object)">
            <summary>
            Compares two XmlComplexCondtion(s) for equality.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlComplexCondition.GetHashCode">
            <summary>
            Retrieves a hash code for the current instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.XmlComplexCondition.Condition1">
            <summary>
            Gets or sets a value indicating the first condition.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlComplexCondition.BinaryOperator">
            <summary>
            Gets or sets a value indicating the binary operator for the condition.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlComplexCondition.Condition2">
            <summary>
            Gets or sets a value indicating the second condition.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlPropertySettingCollection">
            <summary>
                <para>
                  A collection that stores <see cref="T:Telerik.WinControls.XmlPropertySetting"/> objects.
               </para>
            </summary>
            <seealso cref="T:Telerik.WinControls.XmlPropertySettingCollection"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.#ctor">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/>.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.#ctor(Telerik.WinControls.XmlPropertySettingCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/> based on another <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/>.
               </para>
            </summary>
            <param name="value">
                  A <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.#ctor(Telerik.WinControls.XmlPropertySetting[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/> containing any array of <see cref="T:Telerik.WinControls.XmlPropertySetting"/> objects.
               </para>
            </summary>
            <param name="value">
                  A array of <see cref="T:Telerik.WinControls.XmlPropertySetting"/> objects with which to intialize the collection
            </param>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.Add(Telerik.WinControls.XmlPropertySetting)">
            <summary>
               <para>Adds a <see cref="T:Telerik.WinControls.XmlPropertySetting"/> with the specified value to the 
               <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.XmlPropertySetting"/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.XmlPropertySettingCollection.AddRange(Telerik.WinControls.XmlPropertySetting[])"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.AddRange(Telerik.WinControls.XmlPropertySetting[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/>.</para>
            </summary>
            <param name="value">
               An array of type <see cref="T:Telerik.WinControls.XmlPropertySetting"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.XmlPropertySettingCollection.Add(Telerik.WinControls.XmlPropertySetting)"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.AddRange(Telerik.WinControls.XmlPropertySettingCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/> to the end of the collection.
               </para>
            </summary>
            <param name="value">
               A <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.XmlPropertySettingCollection.Add(Telerik.WinControls.XmlPropertySetting)"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.Contains(Telerik.WinControls.XmlPropertySetting)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/> contains the specified <see cref="T:Telerik.WinControls.XmlPropertySetting"/>.</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.XmlPropertySetting"/> to locate.</param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:Telerik.WinControls.XmlPropertySetting"/> is contained in the collection; 
              otherwise, <see langword="false"/>.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.XmlPropertySettingCollection.IndexOf(Telerik.WinControls.XmlPropertySetting)"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.CopyTo(Telerik.WinControls.XmlPropertySetting[],System.Int32)">
            <summary>
            <para>Copies the <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/> values to a one-dimensional <see cref="T:System.Array"/> instance at the 
               specified index.</para>
            </summary>
            <param name="array"><para>The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/> .</para></param>
            <param name="index">The index in <paramref name="array"/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="array"/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/> is greater than the available space between <paramref name="arrayIndex"/> and the end of <paramref name="array"/>.</para></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than <paramref name="array"/>'s lowbound. </exception>
            <seealso cref="T:System.Array"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.IndexOf(Telerik.WinControls.XmlPropertySetting)">
            <summary>
               <para>Returns the index of a <see cref="T:Telerik.WinControls.XmlPropertySetting"/> in 
                  the <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.XmlPropertySetting"/> to locate.</param>
            <returns>
            <para>The index of the <see cref="T:Telerik.WinControls.XmlPropertySetting"/> of <paramref name="value"/> in the 
            <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/>, if found; otherwise, -1.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.XmlPropertySettingCollection.Contains(Telerik.WinControls.XmlPropertySetting)"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.Insert(System.Int32,Telerik.WinControls.XmlPropertySetting)">
            <summary>
            <para>Inserts a <see cref="T:Telerik.WinControls.XmlPropertySetting"/> into the <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/> at the specified index.</para>
            </summary>
            <param name="index">The zero-based index where <paramref name="value"/> should be inserted.</param>
            <param name=" value">The <see cref="T:Telerik.WinControls.XmlPropertySetting"/> to insert.</param>
            <returns><para>None.</para></returns>
            <seealso cref="M:Telerik.WinControls.XmlPropertySettingCollection.Add(Telerik.WinControls.XmlPropertySetting)"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/> .</para>
            </summary>
            <returns><para>None.</para></returns>
            <seealso cref="T:System.Collections.IEnumerator"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingCollection.Remove(Telerik.WinControls.XmlPropertySetting)">
            <summary>
               <para> Removes a specific <see cref="T:Telerik.WinControls.XmlPropertySetting"/> from the 
               <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.XmlPropertySetting"/> to remove from the <see cref="T:Telerik.WinControls.XmlPropertySettingCollection"/> .</param>
            <returns><para>None.</para></returns>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not found in the Collection. </exception>
        </member>
        <member name="P:Telerik.WinControls.XmlPropertySettingCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref="T:Telerik.WinControls.XmlPropertySetting"/>.</para>
            </summary>
            <param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:Telerik.WinControls.XmlPropertySettingGroup">
            <summary>
            Represents a group of property settings.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroup.ToString">
            <summary>
            Retrieves the string representation of the instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.XmlPropertySettingGroup.PropertySettings">
            <summary>
            Gets or sets the collection of properties.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlPropertySettingGroup.Selectors">
            <summary>
            Gets or sets the collection of selectors.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlPropertySettingGroup.GroupName">
            <summary>
            Retrieve the name of the group.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlPropertySettingGroupCollection">
            <summary>
                <para>
                  A collection that stores <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/> objects.
               </para>
            </summary>
            <seealso cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.#ctor">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/>.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.#ctor(Telerik.WinControls.XmlPropertySettingGroupCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/> based on another <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/>.
               </para>
            </summary>
            <param name="value">
                  A <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.#ctor(Telerik.WinControls.XmlPropertySettingGroup[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/> containing any array of <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/> objects.
               </para>
            </summary>
            <param name="value">
                  A array of <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/> objects with which to intialize the collection
            </param>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.Add(Telerik.WinControls.XmlPropertySettingGroup)">
            <summary>
               <para>Adds a <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/> with the specified value to the 
               <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.XmlPropertySettingGroupCollection.AddRange(Telerik.WinControls.XmlPropertySettingGroup[])"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.AddRange(Telerik.WinControls.XmlPropertySettingGroup[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/>.</para>
            </summary>
            <param name="value">
               An array of type <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.XmlPropertySettingGroupCollection.Add(Telerik.WinControls.XmlPropertySettingGroup)"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.AddRange(Telerik.WinControls.XmlPropertySettingGroupCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/> to the end of the collection.
               </para>
            </summary>
            <param name="value">
               A <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.XmlPropertySettingGroupCollection.Add(Telerik.WinControls.XmlPropertySettingGroup)"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.Contains(Telerik.WinControls.XmlPropertySettingGroup)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/> contains the specified <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/>.</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/> to locate.</param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/> is contained in the collection; 
              otherwise, <see langword="false"/>.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.XmlPropertySettingGroupCollection.IndexOf(Telerik.WinControls.XmlPropertySettingGroup)"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.CopyTo(Telerik.WinControls.XmlPropertySettingGroup[],System.Int32)">
            <summary>
            <para>Copies the <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/> values to a one-dimensional <see cref="T:System.Array"/> instance at the 
               specified index.</para>
            </summary>
            <param name="array"><para>The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/> .</para></param>
            <param name="index">The index in <paramref name="array"/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="array"/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/> is greater than the available space between <paramref name="arrayIndex"/> and the end of <paramref name="array"/>.</para></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than <paramref name="array"/>'s lowbound. </exception>
            <seealso cref="T:System.Array"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.IndexOf(Telerik.WinControls.XmlPropertySettingGroup)">
            <summary>
               <para>Returns the index of a <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/> in 
                  the <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/> to locate.</param>
            <returns>
            <para>The index of the <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/> of <paramref name="value"/> in the 
            <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/>, if found; otherwise, -1.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.XmlPropertySettingGroupCollection.Contains(Telerik.WinControls.XmlPropertySettingGroup)"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.Insert(System.Int32,Telerik.WinControls.XmlPropertySettingGroup)">
            <summary>
            <para>Inserts a <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/> into the <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/> at the specified index.</para>
            </summary>
            <param name="index">The zero-based index where <paramref name="value"/> should be inserted.</param>
            <param name=" value">The <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/> to insert.</param>
            <returns><para>None.</para></returns>
            <seealso cref="M:Telerik.WinControls.XmlPropertySettingGroupCollection.Add(Telerik.WinControls.XmlPropertySettingGroup)"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/> .</para>
            </summary>
            <returns><para>None.</para></returns>
            <seealso cref="T:System.Collections.IEnumerator"/>
        </member>
        <member name="M:Telerik.WinControls.XmlPropertySettingGroupCollection.Remove(Telerik.WinControls.XmlPropertySettingGroup)">
            <summary>
               <para> Removes a specific <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/> from the 
               <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/> to remove from the <see cref="T:Telerik.WinControls.XmlPropertySettingGroupCollection"/> .</param>
            <returns><para>None.</para></returns>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not found in the Collection. </exception>
        </member>
        <member name="P:Telerik.WinControls.XmlPropertySettingGroupCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref="T:Telerik.WinControls.XmlPropertySettingGroup"/>.</para>
            </summary>
            <param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:Telerik.WinControls.Themes.XmlSerialization.XmlPropertySettingValueConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlSerialization.SerializationConverter">
            <summary>
            Represents a base class for the XML serialization converters. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.SerializationConverter.ConvertToString(System.Object,System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            
            </summary>
            <param name="propertyOwner"></param>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.WinControls.XmlSelectorCollection">
            <summary>
                <para>
                  A collection that stores <see cref="T:Telerik.WinControls.XmlElementSelector"/> objects.
               </para>
            </summary>
            <seealso cref="T:Telerik.WinControls.XmlSelectorCollection"/>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.#ctor">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WinControls.XmlSelectorCollection"/>.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.#ctor(System.Int32)">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WinControls.XmlSelectorCollection"/>.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.#ctor(Telerik.WinControls.XmlSelectorCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WinControls.XmlSelectorCollection"/> based on another <see cref="T:Telerik.WinControls.XmlSelectorCollection"/>.
               </para>
            </summary>
            <param name="value">
                  A <see cref="T:Telerik.WinControls.XmlSelectorCollection"/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.#ctor(Telerik.WinControls.XmlElementSelector[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WinControls.XmlSelectorCollection"/> containing any array of <see cref="T:Telerik.WinControls.XmlElementSelector"/> objects.
               </para>
            </summary>
            <param name="value">
                  A array of <see cref="T:Telerik.WinControls.XmlElementSelector"/> objects with which to intialize the collection
            </param>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.Add(Telerik.WinControls.XmlElementSelector)">
            <summary>
               <para>Adds a <see cref="T:Telerik.WinControls.XmlElementSelector"/> with the specified value to the 
               <see cref="T:Telerik.WinControls.XmlSelectorCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.XmlElementSelector"/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.XmlSelectorCollection.AddRange(Telerik.WinControls.XmlElementSelector[])"/>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.AddRange(Telerik.WinControls.XmlElementSelector[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref="T:Telerik.WinControls.XmlSelectorCollection"/>.</para>
            </summary>
            <param name="value">
               An array of type <see cref="T:Telerik.WinControls.XmlElementSelector"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.XmlSelectorCollection.Add(Telerik.WinControls.XmlElementSelector)"/>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.AddRange(Telerik.WinControls.XmlSelectorCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref="T:Telerik.WinControls.XmlSelectorCollection"/> to the end of the collection.
               </para>
            </summary>
            <param name="value">
               A <see cref="T:Telerik.WinControls.XmlSelectorCollection"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.XmlSelectorCollection.Add(Telerik.WinControls.XmlElementSelector)"/>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.Contains(Telerik.WinControls.XmlElementSelector)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref="T:Telerik.WinControls.XmlSelectorCollection"/> contains the specified <see cref="T:Telerik.WinControls.XmlElementSelector"/>.</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.XmlElementSelector"/> to locate.</param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:Telerik.WinControls.XmlElementSelector"/> is contained in the collection; 
              otherwise, <see langword="false"/>.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.XmlSelectorCollection.IndexOf(Telerik.WinControls.XmlElementSelector)"/>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.CopyTo(Telerik.WinControls.XmlElementSelector[],System.Int32)">
            <summary>
            <para>Copies the <see cref="T:Telerik.WinControls.XmlSelectorCollection"/> values to a one-dimensional <see cref="T:System.Array"/> instance at the 
               specified index.</para>
            </summary>
            <param name="array"><para>The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from <see cref="T:Telerik.WinControls.XmlSelectorCollection"/> .</para></param>
            <param name="index">The index in <paramref name="array"/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="array"/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref="T:Telerik.WinControls.XmlSelectorCollection"/> is greater than the available space between <paramref name="index"/> and the end of <paramref name="array"/>.</para></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than <paramref name="array"/>'s lowbound. </exception>
            <seealso cref="T:System.Array"/>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.IndexOf(Telerik.WinControls.XmlElementSelector)">
            <summary>
               <para>Returns the index of a <see cref="T:Telerik.WinControls.XmlElementSelector"/> in 
                  the <see cref="T:Telerik.WinControls.XmlSelectorCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.XmlElementSelector"/> to locate.</param>
            <returns>
            <para>The index of the <see cref="T:Telerik.WinControls.XmlElementSelector"/> of <paramref name="value"/> in the 
            <see cref="T:Telerik.WinControls.XmlSelectorCollection"/>, if found; otherwise, -1.</para>
            </returns>
            <seealso cref="M:Telerik.WinControls.XmlSelectorCollection.Contains(Telerik.WinControls.XmlElementSelector)"/>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.Insert(System.Int32,Telerik.WinControls.XmlElementSelector)">
            <summary>
            <para>Inserts a <see cref="T:Telerik.WinControls.XmlElementSelector"/> into the <see cref="T:Telerik.WinControls.XmlSelectorCollection"/> at the specified index.</para>
            </summary>
            <param name="index">The zero-based index where <paramref name="value"/> should be inserted.</param>
            <param name=" value">The <see cref="T:Telerik.WinControls.XmlElementSelector"/> to insert.</param>
            <returns><para>None.</para></returns>
            <seealso cref="M:Telerik.WinControls.XmlSelectorCollection.Add(Telerik.WinControls.XmlElementSelector)"/>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref="T:Telerik.WinControls.XmlSelectorCollection"/> .</para>
            </summary>
            <returns><para>None.</para></returns>
            <seealso cref="T:System.Collections.IEnumerator"/>
        </member>
        <member name="M:Telerik.WinControls.XmlSelectorCollection.Remove(Telerik.WinControls.XmlElementSelector)">
            <summary>
               <para> Removes a specific <see cref="T:Telerik.WinControls.XmlElementSelector"/> from the 
               <see cref="T:Telerik.WinControls.XmlSelectorCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WinControls.XmlElementSelector"/> to remove from the <see cref="T:Telerik.WinControls.XmlSelectorCollection"/> .</param>
            <returns><para>None.</para></returns>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not found in the Collection. </exception>
        </member>
        <member name="P:Telerik.WinControls.XmlSelectorCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref="T:Telerik.WinControls.XmlElementSelector"/>.</para>
            </summary>
            <param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:Telerik.WinControls.XmlSimpleCondition">
            <summary>
            Represents a serializable correspondence to the SimpleCondtion class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlSimpleCondition.Equals(System.Object)">
            <summary>
            Compares two instances for equality.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.XmlSimpleCondition.UnaryOperator">
            <summary>
            Gets or sets a value indicating the UnaryOperator used in the condition.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlSimpleCondition.Setting">
            <summary>
            Gets or sets the XML property setting for the instance.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlStyleSheet.GetStyleSheet(Telerik.WinControls.XmlSelectorBase,Telerik.WinControls.XmlPropertySettingGroup[])">
            <summary>
            This method supports TPF infrastructure and is intended for internal use only.
            </summary>
            <param name="applyUnconditional"></param>
            <param name="groups"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.XmlStyleSheet.ThemeLocation">
            <summary>
            Gets value indicating the location of the theme file that the XmlStyleSheet has been loaded from.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadStylesheetRelation.#ctor">
            <summary>
            Initializes a new instance of the RadStylesheetRelation class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadStylesheetRelation.RegistrationType">
            <summary>
            Gets or sets a value indicating the builder registration type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadStylesheetRelation.ControlType">
            <summary>
            Gets or sets a string value indicating the control type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadStylesheetRelation.ElementType">
            <summary>
            Gets or sets a string value indicating the element type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadStylesheetRelation.ControlName">
            <summary>
            Gets or sets a value indicating the control name.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.RadStylesheetRelation.ElementName">
            <summary>
            Gets or sets a string value indicating the element name.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlStyleBuilderRegistration">
            <summary>
            Represents a registration for the Style Builder. The class is responsible 
            for the serialization and deserialization of a group of <em>t</em>elerik controls.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlStyleBuilderRegistration.#ctor">
            <summary>
            Initializes a new instance of the XmlStyleBuilderRegistration class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlStyleBuilderRegistration.#ctor(Telerik.WinControls.XmlStyleSheet,System.String,System.String)">
            <summary>
            Initializes a new instance of the XmlStyleBuilderRegistration class
            from xml style sheet, control type, and element type.
            </summary>
            <param name="style"></param>
            <param name="controlType"></param>
            <param name="elementType"></param>
        </member>
        <member name="M:Telerik.WinControls.XmlStyleBuilderRegistration.GetRegistration">
            <summary>
            Retrieves the style builder registration.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.XmlStyleBuilderRegistration.BuilderType">
            <summary>
            Gets or sets a string value indicating the builder type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlStyleBuilderRegistration.BuilderData">
            <summary>
            Gets or sets a value indicating the xml builder data.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlTheme">
            <summary>
            Represents a theme for a telerik control. Themes can be serialized and 
            deserialized, thus saving and loading the theme for a given control.
            XmlTheme implements IXmlSerializable which provides custom formatting for 
            XML serialization and deserialization.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.#ctor">
            <summary>
            Initializes a new instance of the XmlTheme class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.#ctor(Telerik.WinControls.Theme)">
            <summary>
            Initializes a new instance of the XmlTheme class from an existing theme.
            </summary>
            <param name="theme"></param>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.#ctor(Telerik.WinControls.XmlStyleSheet,System.String,System.String)">
            <summary>
            Initializes a new instance of the XmlTheme class from XmlStyleSheet, 
            control type, and element type.
            </summary>
            <param name="style"></param>
            <param name="controlType"></param>
            <param name="elementType"></param>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.SerializeType(System.Type)">
            <summary>
            Retrieves the serialization string of the given type.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.DeserializeType(System.String)">
            <summary>
            Deserializes the provided deserialization string.
            </summary>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.LoadPartiallyFromStorage(Telerik.WinControls.ThemeSource)">
            <summary>
            Loads a theme partially from a System.IO.Stream instance. 
            </summary>        
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.LoadFromStram(System.IO.Stream)">
            <summary>
            Loads a theme from a System.IO.Stream instance. 
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.LoadFromReader(System.IO.TextReader)">
            <summary>
            Load a XML theme from a TextReader.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.LoadFromReader(System.Xml.XmlReader)">
            <summary>
            Loads a theme from a XML reader.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.SaveToWriter(System.Xml.XmlWriter)">
            <summary>
            Saves the theme to a XMLWriter.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Telerik.WinControls.XmlTheme.SaveMergeToWriter(Telerik.WinControls.XmlTheme,System.Xml.XmlWriter)">
            <summary>
            Merges the original theme given as the first parameter with the theme of the
            current instance and writes the union to an XMLWriter.
            </summary>
            <param name="originalTheme"></param>
            <param name="writer"></param>
        </member>
        <member name="P:Telerik.WinControls.XmlTheme.ThemeName">
            <summary>
            Gets or sets a string value indicating the theme name.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlTheme.BuilderRegistrations">
            <summary>
            Gets or sets the Builder Registration for the theme. Each builder registration
            corresponds to a theme for single telerik control.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.ConditionBuilderForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ConditionBuilderForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.ConditionBuilderForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.HslColor">
            <summary>
            Represents color in HSL color space.
            </summary>
            <remarks>
            Used for color blending operations, defined in HSL color space which are more precise than in RGB. 
            HSL colors are used by theming and painting sub-systems of RadControls.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.HslColor.H">
            <summary>
            H Channel value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.HslColor.S">
            <summary>
            S Channel value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.HslColor.L">
            <summary>
            L Channel value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.HslColor.RgbValue">
            <summary>
            RGB color value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.HslColor.A">
            <summary>
            Gets or sets color'a alpha chanel level in terms of argb color. Used mainly for conversion from/to ARGB color values.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.HSLColor">
            <summary>
            Depricated class, provided for backward compatibility only. Please use HSLColor instead
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ImageButton">
            <summary>
            Represents an image button.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.ImageButton.#ctor">
            <summary>
            Initializes a new instance of the ImageButton class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ImageButton.BackgroundImageSrc">
            <summary>
            Gets or sets the background image.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ImageButton.HoverImageSrc">
            <summary>
            Gets or sets the image source when the button is hovered.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.ImageButton.ClickImageSrc">
            <summary>
            Gets or sets the image source when the button is clicked.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.RadStyleBuilderPropertyDescriptor">
            <summary>
            Provides an abstraction of a property on a class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.RadStyleBuilderPropertyDescriptor.#ctor(System.ComponentModel.PropertyDescriptor,System.Attribute[],Telerik.WinControls.Themes.Design.ThemeDesignRadObject,System.Boolean)">
            <summary>
            Initializes a new instance of the RadStyleBuilderPropertyDescriptor class
            from PropertyDescriptor, Attribute, themeDesignedRadObject, and bool flag indicating 
            whether the property is read-only.
            </summary>
            <param name="wrapped"></param>
            <param name="attributes"></param>
            <param name="themeDesignedRadObject"></param>
            <param name="readOnly"></param>
        </member>
        <member name="T:Telerik.WinControls.UITypeEditorWrapper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UITypeEditorWrapper.#ctor(Telerik.WinControls.RadStyleBuilderPropertyDescriptor,System.Drawing.Design.UITypeEditor)">
            <summary>
            Initializes a new instance of the UITypeEditorWrapper class.
            </summary>
            <param name="styleBuilderProperty"></param>
            <param name="original"></param>
        </member>
        <member name="T:Telerik.WinControls.RadThemeComponentBase">
            <summary>
            Class used by RadThemeManager to recognize classes that load themes from resources in a class library
            </summary>
        </member>
        <member name="T:Telerik.WinControls.StyleBuilderReadOnlyAttribute">
            <summary>
            Use the StyleBuilderReadOnly attribute to mark properties that should appear as readonly when edited in the Visual 
            Style Builder application
            </summary>
        </member>
        <member name="T:Telerik.WinControls.BuilderRegistrationType">
            <summary>
            Defines the types of registrations of a StyleSheet in the ThemeResolutionService.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.StyleDesigner.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.StyleDesigner.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.StyleDesigner.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Themes.ThemePropertyCollection.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2"></see> contains an element with the specified key.
            </summary>
            
            <returns>
            true if the <see cref="T:System.Collections.Generic.IDictionary`2"></see> contains an element with the key; otherwise, false.
            </returns>
            
            <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</param>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:Telerik.WinControls.Themes.ThemePropertyCollection.Add(System.String,System.Object)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            
            <param name="value">The object to use as the value of the element to add.</param>
            <param name="key">The object to use as the key of the element to add.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:Telerik.WinControls.Themes.ThemePropertyCollection.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            
            <returns>
            true if the element is successfully removed; otherwise, false.  This method also returns false if key was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </returns>
            
            <param name="key">The key of the element to remove.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:Telerik.WinControls.Themes.ThemePropertyCollection.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:Telerik.WinControls.Themes.ThemePropertyCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only. </exception>
        </member>
        <member name="M:Telerik.WinControls.Themes.ThemePropertyCollection.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> contains a specific value.
            </summary>
            
            <returns>
            true if item is found in the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false.
            </returns>
            
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
        </member>
        <member name="M:Telerik.WinControls.Themes.ThemePropertyCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex is less than 0.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or-arrayIndex is equal to or greater than the length of array.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"></see> is greater than the available space from arrayIndex to the end of the destination array.-or-Type T cannot be cast automatically to the type of the destination array.</exception>
        </member>
        <member name="M:Telerik.WinControls.Themes.ThemePropertyCollection.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            
            <returns>
            true if item was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false. This method also returns false if item is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </returns>
            
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:Telerik.WinControls.Themes.ThemePropertyCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Telerik.WinControls.Themes.ThemePropertyCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Telerik.WinControls.Themes.ThemePropertyCollection.Item(System.String)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            
            <returns>
            The element with the specified key.
            </returns>
            
            <param name="key">The key of the element to get or set.</param>
            <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IDictionary`2"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and key is not found.</exception>
        </member>
        <member name="P:Telerik.WinControls.Themes.ThemePropertyCollection.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            
            <returns>
            An <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </returns>
            
        </member>
        <member name="P:Telerik.WinControls.Themes.ThemePropertyCollection.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            
            <returns>
            An <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </returns>
            
        </member>
        <member name="P:Telerik.WinControls.Themes.ThemePropertyCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </returns>
            
        </member>
        <member name="P:Telerik.WinControls.Themes.ThemePropertyCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.
            </summary>
            
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only; otherwise, false.
            </returns>
            
        </member>
        <member name="T:Telerik.WinControls.SystemThemeBuilder">
            <summary>
            System style builder /created system stylesheet/
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ThemeChangedEventArgs">
            <summary>
            Represents event data for the 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ThemeChangedHandler">
            <summary>
            Represents the method that will handle a ThemeChanged event.
            </summary>
            <param name="sender">
            Initializes the event sender.  
            </param>
            <param name="args">
            Initializes the %event argument:ThemeChangedEventArgs%.
            </param>
        </member>
        <member name="T:Telerik.WinControls.ThemeResolutionService">
            <summary>
            A Class that represents storage for themes in an application that contains
            RadControls.
            </summary>
            <remarks>
            	<para>
                    A <see cref="T:Telerik.WinControls.Theme"/> consists of one or more
                    <strong>StyleSheet</strong> objects, and one or more
                    <strong>StyleSheetRelation</strong> objects.
                </para>
            	<para>
            		<see cref="T:Telerik.WinControls.StyleSheet"/> object defines the appearance
                    and/or certain aspects of behavior of one <strong>RadControl</strong> or
                    <strong>RadItem</strong>.
                </para>
            	<para><strong>StyleSheetRelation</strong> objects contain data that maps a control
                and a certain <strong>StyleSheet</strong>.</para>
            	<para><strong>Theme.ThemeName</strong> is used by <strong>RadControl</strong> to
                automatically query <strong>ThemeResolutionService</strong>, upon
                <strong>Initialize</strong> and retrieve its <strong>StyleSheet</strong>. Use the
                API of this class to register, un-register, query themes storage for specific
                themes by attributes like Name, certain relations, etc.</para>
            </remarks>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.SubscribeForThemeChanged(System.String,Telerik.WinControls.ThemeChangedHandler)">
            <summary>
            Call to subscribe for theme change event, for the specified control theme class name. Note the event may be fired from another thread
            </summary>
            <param name="controlThemeClassName"></param>
            <param name="handler"></param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.GetAvailableThemes(Telerik.WinControls.IComponentTreeHandler)">
            <summary>
            Gets any themes registered for a specific control by control type name or control name.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.RegisterThemeFromStorage(Telerik.WinControls.ThemeStorageType,System.String)">
            <summary>
            Regesters theme from a file or resource that contains a xml-serilized Theme object.
            The Visual Style Builder application for example is capable of designing and serializing
            themes. Theme files generally contain Theme with one or several style sheets each assigned a 
            registration that defines which RadControl and/or RadElment the style sheet applies.
            </summary>
            <param name="storageType"></param>
            <param name="themeLocation"></param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.GetStyleSheetBuilders(System.String)">
            <summary>
            Gets all StyleSheets registered under a theme name.
            </summary>
            <param name="themeName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.RegisterControlStyleBuilder(System.String,System.String,Telerik.WinControls.StyleBuilder,System.String)">
            <summary>
            Registers a StyleBuilder for specific type of controls and specific type of elements under the name given.
            </summary>
            <param name="controlTypeName"></param>
            <param name="elementTypeName"></param>
            <param name="builder"></param>
            <param name="themeName"></param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.EnsureThemeRegistered(System.String)">
            <summary>
            Creates and registeres an emty Theme if one is not alreay registered.
            </summary>
            <param name="themeName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.GetAvailableThemes">
            <summary>
            Gets a list of all registered themes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.HasBuildersFor(Telerik.WinControls.RadControl,System.String)">
            <summary>
            Method not available
            </summary>
            <param name="control"></param>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.GetTheme(System.String)">
            <summary>
            Get previously registered theme by theme name.
            </summary>
            <param name="themeName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.RegisterStyleBuilder(Telerik.WinControls.StyleBuilderRegistration,System.String)">
            <summary>
            Registers a StyleSheet found in styleBuilderRegistration using also the registration details specified under the theme name specified.
            </summary>
            <param name="styleBuilderRegistration"></param>
            <param name="themeName"></param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.ClearTheme(System.String)">
            <summary>
             Clears all stylesheets registered previously with the themeName specified.
            </summary>
            <param name="themeName"></param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.BeginEditTheme(System.String)">
            <summary>
            A call to BeginEditTheme will supres the raising of ThemeChanged event untill EndEditTheme is called.
            This methods should be used to avoid refreshing controls on the form while themes stylesheets are still 
            loading. By default this methods are used when deserializing themes.
            </summary>
            <param name="themeName"></param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.EndEditTheme(System.String)">
            <summary>
            Should be caled after a call to BeginEditTheme. 
            </summary>
            <param name="themeName"></param>
        </member>
        <member name="M:Telerik.WinControls.ThemeResolutionService.ApplyThemeToControlTree(System.Windows.Forms.Control,System.String)">
            <summary>
            Applies the specified ThemeName to all RadControls that are children of the specified Control and its child Controls
            </summary>
            <param name="control"></param>
            <param name="themeName"></param>
        </member>
        <member name="P:Telerik.WinControls.ThemeResolutionService.ApplicationThemeName">
            <summary>
            Gets or sets value indicating the theme name that will be used by all controls in the application.
            </summary>
            <remarks>
            If the value of this property is null or empty each control will be assigned a theme, corresponding on the 
            <see cref="P:Telerik.WinControls.RadControl.ThemeName"/> property of the control. Otherwise the ThemeName property will be disregarded.
            If a sopecific control in the application has no theme registered with the name specified by ApplicationThemeName, it will be
            assigned its ControlDefault theme name.
            </remarks>
        </member>
        <member name="P:Telerik.WinControls.ThemeResolutionService.ControlDefaultThemeName">
            <summary>
            "ControlDefault" theme name
            </summary>
        </member>
        <member name="T:Telerik.WinControls.Theme">
            <summary>
            Represents a Theme for some of the Telerik controls.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Theme.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Theme class using theme name.
            </summary>
            <param name="themeName"></param>
        </member>
        <member name="M:Telerik.WinControls.Theme.GetRegisteredStyleBuilders">
            <summary>
            Gets the registered style builders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Theme.Deserialize(Telerik.WinControls.XmlTheme)">
            <summary>
            Deserializes a theme from a given %XmlTheme:Telerik.WinControls.XmlTheme%
            instance. Resulting theme is registered within ThemeReolutionService and can be obtained using the following 
            ThemeResolutionService.GetTheme(xmlTheme.ThemeName)
            </summary>
            <param name="xmlTheme"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Theme.FindStyleSheetRegistration(System.String,System.String)">
            <summary>
            Find a specific style builder
            </summary>
            <param name="controlType"></param>
            <param name="elementType"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Theme.GetPropertyValue(System.String)">
            <summary>
            IPropertiesProvider implementation
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.Theme.AddColorBlend(System.String,Telerik.WinControls.HslColor,System.Boolean)">
            <summary>
            Applys color blend to all colors in the current theme, based on the given baseColor. ThemeNameParameter will be 
            automatically added to the <see cref="P:Telerik.WinControls.Theme.ThemeProperties"/> collection.
            </summary>
            <remarks>
            When AddColorBlend is used, themeparamter will be added to ThemeProperties collection. Then the theme will be processed and 
            color values will be substituted by the value of ThemeParameter specified. 
            Changing the value of the theme parameter will allow you to dynamically modify the HSL components 
            of the corresponding color values.
            </remarks>
            <param name="themeParameterName">theme parameter name to be populated</param>
            <param name="baseColor">THe Hue setting of the base color will be used to determine wich colours will be affected by the colorblend. L and S values of the color will be used to calculate new color values</param>
            <param name="notifyThemeChanged">Specify whether to notify notify contorls that theme has changed</param>
        </member>
        <member name="M:Telerik.WinControls.Theme.NotifyThemeChanged">
            <summary>
            Notifies all controls that currently use this theme, to let them refresh their appearance.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.Theme.AddColorBlend(System.String,Telerik.WinControls.HslColor)">
            <summary>
            Applys color blend to all colors in the current theme, based on the given baseColor and notifies all controls that theme has changed. ThemeNameParameter will be 
            automatically added to the <see cref="P:Telerik.WinControls.Theme.ThemeProperties"/> collection.
            </summary>
            <remarks>
            When AddColorBlend is used, themeparamter will be added to ThemeProperties collection. Then the theme will be processed and 
            color values will be substituted by the value of ThemeParameter specified. 
            Changing the value of the theme parameter will allow you to dynamically modify the HSL components 
            of the corresponding color values.
            </remarks>
            <param name="themeParameterName">theme parameter name to be populated</param>
            <param name="baseColor">THe Hue setting of the base color will be used to determine wich colours will be affected by the colorblend. L and S values of the color will be used to calculate new color values</param>
        </member>
        <member name="M:Telerik.WinControls.Theme.RemoveAllColorBlends(System.Boolean)">
            <summary>
            Removes all color blends created by using <see cref="M:Telerik.WinControls.Theme.AddColorBlend(System.String,Telerik.WinControls.HslColor,System.Boolean)"/>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.WinControls.Theme.RemoveColorBlend(System.String)" -->
        <member name="P:Telerik.WinControls.Theme.ThemeName">
            <summary>
            Gets or sets a theme name.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.Theme.ThemeProperties">
            <summary>
            Collectino of theme parameters. See <see cref="M:Telerik.WinControls.Theme.AddColorBlend(System.String,Telerik.WinControls.HslColor,System.Boolean)"/> for details.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.ThemeList">
            <summary>
            Represents a list of %Themes:Theme%.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.TypeTreeForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.TypeTreeForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.WinControls.TypeTreeForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.WindowAnimation.AnimationEventHandler">
            <summary>
            Event raised during animation notifying the new size for the panel
            </summary>
            <param name="sender">the object sending the notification</param>
            <param name="size">the new size for the window collasping/expanding </param>
        </member>
        <member name="E:Telerik.WinControls.WindowAnimation.AnimationEngine.AnimationFinished">
            <summary>
            Event raised when animation is finished
            </summary>
        </member>
        <member name="E:Telerik.WinControls.WindowAnimation.AnimationEngine.Animating">
            <summary>
            Event raised in parallel with the executing animation.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.WindowAnimation.WindowAnimationEngine.Minimum">
            <summary>
            Get/Set minimum value allowed for size
            </summary>
        </member>
        <member name="P:Telerik.WinControls.WindowAnimation.WindowAnimationEngine.Maximum">
            <summary>
            Get/Set maximum value allowed for size
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlSerialization.ColorBlendExtension">
            <summary>
            Provides XmlSerialization parsing for ColorBlend extention and 
            calculates color-blending values for color values of PropertySetting and AnimatedPropertySettings.
            </summary>
            <remarks>
            For more information see <see cref="M:Telerik.WinControls.Theme.AddColorBlend(System.String,Telerik.WinControls.HslColor,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:Telerik.WinControls.XmlSerialization.ColorBlendExtension.GetValue">
            <summary>
            IValueProvider GetValue implementation
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.WinControls.XmlSerialization.ColorBlendExtension.OriginalColor">
            <summary>
            Gets the original Color value
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlSerialization.ColorBlendExtension.ThemePropertyName">
            <summary>
            Gets value corresponding to the name of the ThemeParameter used for color blending calculations
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlSerialization.ComponentXmlSerializationInfo">
            <summary>
            Instances of this type are used by <see cref="T:Telerik.WinControls.XmlSerialization.ComponentXmlSerializer"/> to provide information used to control
            XML of properties and sub-objets.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlSerialization.ComponentXmlSerializationInfo.SerializationMetadata">
            <summary>
            Gets a collection of attributes for properties that would override the original designer serialization 
            metadata for these properties
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlSerialization.ComponentXmlSerializationInfo.DisregardOriginalSerializationVisibility">
            <summary>
            Gets or sets value indicating whether the serializer will use the serialization visibility attributes 
            of the properties of the serialized objects or only those found in <see cref="P:Telerik.WinControls.XmlSerialization.ComponentXmlSerializationInfo.SerializationMetadata"/>
            </summary>
        </member>
        <member name="P:Telerik.WinControls.XmlSerialization.ComponentXmlSerializationInfo.SerializeDefaultValues">
            <summary>
            Gets or sets value indincating whether the serializer will force serialization of properties, disregarding 
            the values of the DefaultValue attribute or ShouldSerialize method
            </summary>
        </member>
        <member name="T:Telerik.WinControls.XmlSerialization.SerializationConverterAttribute">
            <summary>
            Attribute for telerik theme serialization.
            </summary>
        </member>
    </members>
</doc>
